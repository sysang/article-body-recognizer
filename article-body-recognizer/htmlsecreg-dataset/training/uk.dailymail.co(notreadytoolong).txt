{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fdebate%2Farticle-10281367%2FDAN-WOOTTON-Dont-quit-job-like-holier-thou-Harry-advises.html","text":"","title":"60","article":"78"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fdebate%2Farticle-10281785%2FIts-really-come-Theresa-bullish-Covid-Boris-Johnson.html","text":"","title":"60","article":"78"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fdebate%2Farticle-10282057%2FHENRY-DEEDES-watches-Nadhim-Zahawis-statement-murdered-six-year-old-Arthur-Labinjo-Hughes.html","text":"PGJvZHkgPiA8ZGl2ID48ZGl2ID48ZGl2ID4gPHVsID4gPGxpID4gSG9tZSA8L2xpPiA8bGkgPiBOZXdzIDwvbGk+IDxsaSA+IDxzcGFuID4gVS5TLiA8L3NwYW4+IDwvbGk+IDxsaSA+IFNwb3J0IDwvbGk+IDxsaSA+IFRWU2hvd2JpeiA8L2xpPiA8bGkgPiBBdXN0cmFsaWEgPC9saT4gPGxpID4gRmVtYWlsIDwvbGk+IDxsaSA+IEhlYWx0aCA8L2xpPiA8bGkgPiBTY2llbmNlIDwvbGk+IDxsaSA+IE1vbmV5IDwvbGk+IDxsaSA+IFZpZGVvIDwvbGk+IDxsaSA+IFRyYXZlbCA8L2xpPiA8bGkgPiBCZXN0IEJ1eXMgPC9saT4gPGxpID4gRGlzY291bnRzIDxkaXYgPiA8ZGl2ID4gPHVsID4gPGxpID4gQXJnb3MgPC9saT4gPGxpID4gQU8uY29tIDwvbGk+IDxsaSA+IFJpdmVyIElzbGFuZCA8L2xpPiA8bGkgPiBHcm91cG9uIDwvbGk+IDxsaSA+IERlYmVuaGFtcyA8L2xpPiA8bGkgPiBXYXlmYWlyIDwvbGk+IDxsaSA+IFZlcnkgPC9saT4gPGxpID4gZUJheSA8L2xpPiA8bGkgPiBCb29ob28gPC9saT4gPGxpID4gTmlrZSA8L2xpPiA8bGkgPiBDdXJyeXMgPC9saT4gPGxpID4gVmlyZ2luIE1lZGlhIDwvbGk+IDxsaSA+IEFTT1MgPC9saT4gPGxpID4gVFVJIDwvbGk+IDwvdWw+IDx1bCA+IDxsaSA+TXkgUHJvZmlsZTwvbGk+IDxsaSA+TG9nb3V0IDwvbGk+IDwvdWw+IDx1bCA+IDxsaSA+IExvZ2luIDwvbGk+IDwvdWw+IDwvZGl2PiA8L2Rpdj4gPC9saT4gPC91bD4gPGRpdiA+IDxkaXYgPiA8dWwgPiA8bGkgPk15IFByb2ZpbGU8L2xpPiA8bGkgPkxvZ291dCA8L2xpPiA8L3VsPiA8dWwgPiA8bGkgPiBMb2dpbiA8L2xpPiA8L3VsPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IFByaXZhY3kgUG9saWN5IEZlZWRiYWNrIDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiBUdWVzZGF5LCBEZWMgN3RoIDIwMjEgMTBQTSAyM8KwQyAxQU0gMjLCsEMgNS1EYXkgRm9yZWNhc3QgPC9kaXY+IDwvZGl2PiA8ZGl2ID48ZGl2ID48ZGl2ID5BZHZlcnRpc2VtZW50PC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8aDI+R3JpZWYgYW5kIG91dHJhZ2Ugb2YgTVBzIHN0dW5uZWQgYnkgaG9ycm9yIG9mIEFydGh1ciBMYWJpbmpvLUh1Z2hlczogSEVOUlkgREVFREVTIHdhdGNoZXMgTmFkaGltIFphaGF3aSdzIHN0YXRlbWVudCBvbiB0aGUgY2FzZSBvZiB0aGUgbXVyZGVyZWQgc2l4LXllYXItb2xkPC9oMj48cCA+QnkgSGVucnkgRGVlZGVzIGZvciB0aGUgRGFpbHkgTWFpbCA8L3A+PHAgPjxzcGFuID4gUHVibGlzaGVkOiA8dGltZSA+IDIzOjM2IEdNVCwgNiBEZWNlbWJlciAyMDIxIDwvdGltZT4gPC9zcGFuPiB8IDxzcGFuID4gVXBkYXRlZDogPHRpbWUgPiAwNzo1NCBHTVQsIDcgRGVjZW1iZXIgMjAyMSA8L3RpbWU+IDwvc3Bhbj4gPC9wPjxkaXYgPiA8dWw+IDxsaSA+IDxsaSA+IDxsaSA+IDxsaSA+IGUtbWFpbCA8L2xpPiA8L3VsPiA8ZGl2ID4gPGI+NDE8L2I+IHNoYXJlcyA8L2Rpdj4gPGEgPiA8cCA+IDEyMjwvcD4gPHAgPlZpZXcgY29tbWVudHM8L3A+IDwvYT4gPC9kaXY+IDxkaXYgPjxwID5Gb3IganVzdCBvdmVyIGFuIGhvdXIgeWVzdGVyZGF5LCBhIHNlbnNlIG9mIGdyaWVmIGh1bmcgb3ZlciB0aGUgQ29tbW9ucy48L3A+PHAgPkl0IGhvdmVyZWQgdGhlcmUgbGlrZSBhIGdpYW50IHZhcG91ciBjbG91ZCwgYmxvY2tpbmcgb3V0IGFueSByYXkgb2YgcG9zaXRpdml0eS4gQWxvbmcgdGhlIGdyZWVuIGJlbmNoZXMgTVBzIHdvcmUgZmFjZXMgYXMgbG9uZyBhcyB2aW9sYXMuIExldml0eSBhbmQgbGF1Z2h0ZXIgd2VyZSBub3RhYmx5IGFic2VudC48L3A+PHAgPlNvbWUgY2FtZSB0byBvZmZlciB0aGVpciBvcGluaW9ucywgb3RoZXJzIHRvIGRvbGUgb3V0IGNyaXRpY2lzbS4gTW9zdCBvZiB0aGVtLCB0aG91Z2gsIGp1c3Qgd2FudGVkIHRvIGV4cHJlc3Mgb3V0cmlnaHQgaG9ycm9yIGF0IGl0IGFsbC48L3A+PHAgPlRoZSB0aW1lIHdhcyA0LjIwcG0gYW5kIEVkdWNhdGlvbiBTZWNyZXRhcnkgTmFkaGltIFphaGF3aSB3YXMgZGVsaXZlcmluZyBoaXMgc3RhdGVtZW50IG9uIEFydGh1ciBMYWJpbmpvLUh1Z2hlcywgdGhlIHNpeC15ZWFyLW9sZCB3aG8gbG9zdCBoaXMgbGlmZSBhdCB0aGUgaGFuZHMgb2YgaGlzIGZhdGhlciBhbmQgc3RlcG1vdGhlciBhbmQgd2hvc2Ugc3VmZmVyaW5nLCBaYWhhd2kgbm90ZWQsIG1vc3QgcGVvcGxlIHdlcmUgc3RpbGwg4oCYc3RydWdnbGluZyB0byB1bmRlcnN0YW5k4oCZLjwvcD48cCA+SGUgYW5ub3VuY2VkIGEgcmV2aWV3IGludG8gdGhlIHdheSB0aGUgY2FzZSBoYWQgYmVlbiBoYW5kbGVkLiBXaGlsZSDigJhubyBnb3Zlcm5tZW50IGNhbiBsZWdpc2xhdGUgZm9yIGV2aWzigJksIGhlIHNhaWQsIGhlIHdvdWxkIOKAmHRha2UgYWN0aW9uIHRvIHN0b3AgaXQgd2hlbmV2ZXIgd2UgY2Fu4oCZLjwvcD48ZGl2ID4gPHAgPlRoZSBFZHVjYXRpb24gU2VjcmV0YXJ5wqBOYWRoaW0gWmFoYXdpIGdhdmUgYSBzdGF0ZW1lbnQgYWJvdXQgdGhlIHJldmlldyBpbiB0aGUgQ29tbW9uc8KgPC9wPjwvZGl2PjxkaXYgPiA8cCA+QXJ0aHVyIHdhcyBraWxsZWQgYnkgaGlzIHN0ZXBtb3RoZXIsIEVtbWEgVHVzdGluLCAzMiwgYW5kIGZhdGhlciwgVGhvbWFzIEh1Z2hlcywgMjksICh3aG8gaGUgaXMgcGljdHVyZWQgd2l0aCkgc3ViamVjdGVkIGhpbSB0byAndW5pbWFnaW5hYmxlJyB0b3J0dXJlIGFuZCBhYnVzZcKgPC9wPjwvZGl2PjxkaXYgPjxwID5FbW1hIFR1c3RpbiwgMzIsIChsZWZ0KSBtdXJkZXJlZCBBcnRodXIgYnkgcmVwZWF0ZWRseSBzbGFtbWluZyBoaXMgaGVhZCBvbiBhIGhhcmQgc3VyZmFjZSBhZnRlciBzaGUgYW5kIDI5LXllYXItb2xkIFRob21hcyBIdWdoZXMgc3RhcnZlZCB0aGUgeW91bmdzdGVyIGFuZCBwb2lzb25lZCBoaW0gd2l0aCBzYWx0PC9wPjwvZGl2PjxwID5aYWhhd2kgYmVuZWZpdHMgZnJvbSBhcHBlYXJpbmcgdG8gYmUgb24gdG9wIG9mIHRoaW5ncy4gSGXigJlzIHdoYXQgYSBzYWxlcyB0ZWFtIGxlYWRlciB3b3VsZCBjYWxsIGEgY2xvc2VyLiBIZSBnZXRzIHRoaW5ncyBkb25lLiBZb3UgY2FuIHNlZSB3aHkgQm9yaXMgbWFkZSBoaW0gdmFjY2luZXMgbWluaXN0ZXIuPC9wPjxwID5JdCBoZWxwcywgdG9vLCB0aGF0IGhlIGNvbW1hbmRzIGEgc2Vuc2Ugb2YgcmVzcGVjdCBhcm91bmQgdGhlIEhvdXNlIHdoaWNoIGlzIHVuY29tbW9uIGluIHRoZSBjdXJyZW50IHBvbGl0aWNhbCBjbGltYXRlLiBJdCBpcyBkdXJpbmcgbW9tZW50cyBsaWtlIHRoZXNlIHdlIG11c3QgYWxsIGJyZWF0aGUgYSBzaWdoIG9mIHJlbGllZiBHYXZpbiBXaWxsaWFtc29uIGlzIG5vIGxvbmdlciBpbiBwb3N0LjwvcD48cCA+T3Bwb3NpdGUgWmFoYXdpIHNhdCBMYWJvdXLigJlzIEJyaWRnZXQgUGhpbGxpcHNvbiwgbmV3bHkgcHJvbW90ZWQgdG8gdGhlIGVkdWNhdGlvbiBicmllZiBkdXJpbmcgU2lyIEtlaXIgU3Rhcm1lcuKAmXMgcmVzaHVmZmxlLiBUaGUgb2NjYXNpb24gbXVzdCBoYXZlIGJlZW4gZGF1bnRpbmcgeWV0IHNoZSwgdG9vLCBtYW5hZ2VkIHRvIHN1bW1vbiB0aGUgcmlnaHQgdG9uZSBmb3IgdGhlIG9jY2FzaW9uLjwvcD48cCA+SGVyIGRlc2NyaXB0aW9uIG9mIEFydGh1ciBhcyDigJh0aGUgbGl0dGxlIGJveSB3aXRoIHRoZSBoYXBweSBzbWlsZSB3aG8gc2hvdWxkIHN0aWxsIGJlIHdpdGggdXMgaGVyZSB0b2RheeKAmSB3YXMgZ3JlZXRlZCB3aXRoIGFwcHJvdmFsIGFyb3VuZCB0aGUgY2hhbWJlci48L3A+PHAgPlNldmVyYWwgTVBzIGNhbWUgY2xvc2UgdG8gdGVhcnMgYXMgdGhleSBleHByZXNzZWQsIGFzIHBhcmVudHMgdGhlbXNlbHZlcywgdGhlIGRlcHRocyBvZiB0aGVpciBzeW1wYXRoeS4gTm9ib2R5IHdobyB3aXRuZXNzZWQgdGhpcyBjb3VsZCBoYXZlIGRvdWJ0ZWQgdGhlIHNpbmNlcml0eSBvZiBlYWNoIG1lbWJlci4gUmFyZWx5IGhhdmUgSSBzZWVuIHRoZSBDb21tb25zIHNvIGdlbnVpbmUuPC9wPjxkaXY+PGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGgyPlJFTEFURUQgQVJUSUNMRVM8L2gyPiA8dWwgPiA8bGkgPlByZXZpb3VzPC9saT4gPGxpPjE8L2xpPiA8bGk+MjwvbGk+IDxsaSA+TmV4dDwvbGk+IDwvdWw+IDwvZGl2PiA8dWwgPiA8bGk+IDEwMCwwMDAgJ2dob3N0IGNoaWxkcmVuJyBhcmUgYXQgcmlzayBvZiBhYnVzZSBhZnRlciBmYWlsaW5nLi4uIExpdHRsZSBBcnRodXIgY2FuIEZJTkFMTFkgYmUgbGFpZCB0byByZXN0OiBLaWxsZXIgZmF0aGVyLi4uIDwvbGk+IDxsaT4gTmFkaGltIFphaGF3aSB2b3dzIHRvIGdldCBqdXN0aWNlIGZvciBBcnRodXIgYXMgaGUgYW5ub3VuY2VzLi4uIDwvbGk+IDwvdWw+IDwvZGl2PiA8ZGl2ID4gPGgyPlNoYXJlIHRoaXMgYXJ0aWNsZTwvaDI+IDxkaXYgPlNoYXJlPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+PHAgPlRoZSBTTlDigJlzIENhcm9sIE1vbmFnaGFuIChHbGFzZ293IE5XKSwgYSBtb3RoZXIgb2YgdGhyZWUsIGdyYWNpb3VzbHkgdGhhbmtlZCBaYWhhd2kgZm9yIGhpcyBzdGF0ZW1lbnQgd2hpY2ggc2hlIGFja25vd2xlZGdlZCDigJhzcG9rZSBmcm9tIHRoZSBoZWFydOKAmS4gU2hlIG9mZmVyZWQgaGVyIHN1cHBvcnQgZm9yIGhpcyByZXZpZXcuIEkgc2hvdWxkIHBvaW50IG91dCB0aGF0IHRoaXMgaXMgbm90IHNvbWV0aGluZyB0aGUgU2NvdHMgTmF0cyBkbyB2ZXJ5IG9mdGVuLjwvcD48cCA+RmxvcmVuY2UgRXNoYWxvbWkgKExhYiwgVmF1eGhhbGwpIGFkbWl0dGVkIHNoZSBoYWQgaHVnZ2VkIGhlciBjaGlsZHJlbiDigJhhIGxpdHRsZSB0aWdodGVy4oCZIGxhc3Qgd2Vla2VuZCBhZnRlciBsZWFybmluZyB0aGUgaG9ycmlmaWMgZGV0YWlscyBvZiBBcnRodXLigJlzIGNhc2UuIEp1bGlhbiBLbmlnaHQgKENvbiwgU29saWh1bGwpLCBpbiB3aG9zZSBjb25zdGl0dWVuY3kgQXJ0aHVyIGxpdmVkLCB3YXMgdmlzaWJseSBzaGFrZW4uIFBvb3IgZmVsbG93IGxvb2tlZCBhcyB0aG91Z2ggaGXigJlkIGJlZW4gaGF1bGVkIHRocm91Z2ggYSBtYW5nbGUuPC9wPjxwID5IZSBkZXNjcmliZWQgQXJ0aHVyIGFzIHRoZSDigJhsaXR0bGUgbGFkIHdobyBuZXZlciBzdG9vZCBhIGNoYW5jZeKAmSBhbmQgdXJnZWQgWmFoYXdpIHRvIGVuc3VyZSB0aGF0IG5vIHRvd24g4oCYaGFzIGl0cyBoZWFydCBicm9rZW7igJkgdGhlIHdheSBTb2xpaHVsbCBoYWQuPC9wPjxkaXYgPiA8cCA+QXJ0aHVyJ3MgZ3JhbmRtb3RoZXIsIEpvYW5uZSBIdWdoZXMsIHRvb2sgcGhvdG9zIG9mIGJydWlzZXMgb24gQXJ0aHVyJ3Mgc2hvdWxkZXIgKHBpY3R1cmVkKSBhbmQgbWFkZSBhIHJlZmVycmFsIHRvIFNvbGlodWxsIENvdW5jaWw8L3A+PC9kaXY+PHAgPkJ5IHRoZSB0aW1lIEtuaWdodCByZXN1bWVkIGhpcyBzZWF0LCBoaXMgdGhyb2F0IGhhZCBhbG1vc3QgY29tcGxldGVseSBibG9ja2VkIHVwLjwvcD48cCA+RnJvbSBzb21lIHF1YXJ0ZXJzIGNhbWUgZnJ1c3RyYXRpb24gd2l0aCB0aGUgbGVnYWwgc3lzdGVtLiBDYXJvbGluZSBKb2huc29uIChDb24sIFNsZWFmb3JkKSwgYSBjaGlsZCBkb2N0b3IsIHNhaWQgdGhhdCB0b28gb2Z0ZW4gaW4gaGVyIGV4cGVyaWVuY2UsIHRob3NlIHJlc3BvbnNpYmxlIGZvciBoYXJtaW5nIHlvdW5nIGNoaWxkcmVuIHdlcmUgbm90IGV2ZW4gcHJvc2VjdXRlZC48L3A+PHAgPlRoZXJlIHdhcyBvdXRyYWdlLCB0b28sIGF0IHRoZSBwdW5pc2htZW50IGhhbmRlZCBvdXQgdG8gQXJ0aHVy4oCZcyBmYXRoZXIgYW5kIHN0ZXBtb3RoZXIsIHdobyB3ZXJlIHNlbnRlbmNlZCB0byAyMSB5ZWFycyBhbmQgMjkgeWVhcnMgcmVzcGVjdGl2ZWx5LiDigJhMb2NrIHRoZW0gdXAgYW5kIHRocm93IGF3YXkgdGhlIGtleSzigJkgd2FzIHRoZSBhZHZpY2Ugb2YgU2FxaWIgQmhhdHRpIChDb24sIE1lcmlkZW4pLjwvcD48cCA+U29tZSBvcHBvc2l0aW9uIE1QcyBzdW1tb25zZWQgdGhhdCBhZ2Utb2xkIGNvbXBsYWludCDigJMg4oCYVG9yeSBjdXRzLuKAmSBFbW1hIExld2VsbC1CdWNrIChMYWIsIFNvdXRoIFNoaWVsZHMpIGNsYWltZWQgc2hlIGhhZCB3YXJuZWQgWmFoYXdpIHdoZW4gaGUgd2FzIGNoaWxkcmVu4oCZcyBtaW5pc3RlciB0aGF0IGdvdmVybm1lbnQgcG9saWNpZXMgd291bGQgY29zdCBhIGNoaWxkIGl0cyBsaWZlLiBBIGZ1cmlvdXMgSm9obiBNY0Rvbm5lbGwgKExhYiwgSGF5ZXMpIHNhaWQgZ292ZXJubWVudHMgd2VyZSBmYXIgdG9vIGdvb2QgYXQgc2V0dGluZyB1cCByZXZpZXdzIGFuZCBibGFtaW5nIG90aGVycy4gVGhlIHByb2JsZW0gd2FzIGxhY2sgb2YgZnVuZGluZy4gSXQgYWx3YXlzIGlzIHdpdGggb2xkIE1jRG9ubmVsbCAuPC9wPjxwID5UaGUgb25seSBvdGhlciBub3RhYmxlIG1vbWVudCBvZiBkYXkgd2FzIHRoZSBzd2VhcmluZy1pbiBvZiBMb3VpZSBGcmVuY2ggKENvbiwgT2xkIEJleGxleSkgd2hvIHdhcyBlbGVjdGVkIGluIGxhc3Qgd2Vla+KAmXMgYnktZWxlY3Rpb24gZm9sbG93aW5nIHRoZSBkZWF0aCBvZiBKYW1lcyBCcm9rZW5zaGlyZS48L3A+PHAgPkFzIGhlIHRvb2sgdGhlIHBhcmxpYW1lbnRhcnkgb2F0aCBhbmQgc2NyaWJibGVkIGhpcyBzaWduYXR1cmUgaW4gdGhlIFRlc3QgUm9sbCwgaGlzIGZhbWlseSB3YXZlZCBhbmQgYmVhbWVkIHByb3VkbHkgZnJvbSB0aGUgcHVibGljIGdhbGxlcnkuIEEgYnJpZWYgbW9tZW50IG9mIHN1bnNoaW5lIG9uIGFuIG90aGVyd2lzZSBnbG9vbXkgYWZ0ZXJub29uLjwvcD48L2Rpdj4gPGRpdiA+IDxkaXYgPiA8aDMgPlNoYXJlIG9yIGNvbW1lbnQgb24gdGhpcyBhcnRpY2xlOiA8L2gzPiA8aDE+SEVOUlkgREVFREVTIHdhdGNoZXMgTmFkaGltIFphaGF3aSdzIHN0YXRlbWVudCBhYm91dCBtdXJkZXJlZCBzaXgteWVhci1vbGTCoEFydGh1ciBMYWJpbmpvLUh1Z2hlczwvaDE+IDxkaXYgPiA8dWwgPiA8bGkgPiBlLW1haWwgPC9saT4gPGxpID4gPGRpdj4gPGRpdiA+NDE8L2Rpdj4gPGRpdiA+c2hhcmVzPC9kaXY+IDwvZGl2PiA8L2xpPiA8bGkgPiBBZGQgY29tbWVudCA8L2xpPiA8L3VsPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdj4gPGgzPkNvbW1lbnRzIDEyMDwvaDM+IDxwPiBTaGFyZSB3aGF0IHlvdSB0aGluayA8L3A+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDx1bCA+IDxsaSA+IE5ld2VzdCA8L2xpPiA8bGkgPiBPbGRlc3QgPC9saT4gPGxpID4gQmVzdCByYXRlZCA8L2xpPiA8bGkgPiBXb3JzdCByYXRlZCA8L2xpPiA8L3VsPiA8ZGl2ID4gVmlldyBhbGwgPC9kaXY+IDxkaXYgPiA8cD5UaGUgY29tbWVudHMgYmVsb3cgaGF2ZSBub3QgYmVlbiBtb2RlcmF0ZWQuPC9wPiA8L2Rpdj4gPGRpdiA+IFZpZXcgYWxsIDwvZGl2PiA8cCA+IFRoZSB2aWV3cyBleHByZXNzZWQgaW4gdGhlIGNvbnRlbnRzIGFib3ZlIGFyZSB0aG9zZSBvZiBvdXIgdXNlcnMgYW5kIGRvIG5vdCBuZWNlc3NhcmlseSByZWZsZWN0IHRoZSB2aWV3cyBvZiBNYWlsT25saW5lLiA8L3A+IDwvZGl2PiA8ZGl2ID4gPGgzPkFkZCB5b3VyIGNvbW1lbnQ8L2gzPiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPHRleHRhcmVhID5FbnRlciB5b3VyIGNvbW1lbnQ8L3RleHRhcmVhPiA8L2Rpdj4gPGRpdiA+IDxwPkJ5IHBvc3RpbmcgeW91ciBjb21tZW50IHlvdSBhZ3JlZSB0byBvdXIgaG91c2UgcnVsZXMuPC9wPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IENsb3NlIDxkaXY+IDxwID5EbyB5b3Ugd2FudCB0byBhdXRvbWF0aWNhbGx5IHBvc3QgeW91ciBNYWlsT25saW5lIGNvbW1lbnRzIHRvIHlvdXIgRmFjZWJvb2sgVGltZWxpbmU/PC9wPiA8cCA+WW91ciBjb21tZW50IHdpbGwgYmUgcG9zdGVkIHRvIE1haWxPbmxpbmUgYXMgdXN1YWwuPC9wPiA8ZGl2ID4gPGRpdiA+Tm88L2Rpdj4gPGRpdiA+WWVzPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IENsb3NlIDxkaXY+IDxwID5EbyB5b3Ugd2FudCB0byBhdXRvbWF0aWNhbGx5IHBvc3QgeW91ciBNYWlsT25saW5lIGNvbW1lbnRzIHRvIHlvdXIgRmFjZWJvb2sgVGltZWxpbmU/PC9wPiA8cCA+WW91ciBjb21tZW50IHdpbGwgYmUgcG9zdGVkIHRvIE1haWxPbmxpbmUgYXMgdXN1YWw8L3A+IDxwPiBXZSB3aWxsIGF1dG9tYXRpY2FsbHkgcG9zdCB5b3VyIGNvbW1lbnQgYW5kIGEgbGluayB0byB0aGUgbmV3cyBzdG9yeSB0byB5b3VyIEZhY2Vib29rIHRpbWVsaW5lIGF0IHRoZSBzYW1lIHRpbWUgaXQgaXMgcG9zdGVkIG9uIE1haWxPbmxpbmUuIFRvIGRvIHRoaXMgd2Ugd2lsbCBsaW5rIHlvdXIgTWFpbE9ubGluZSBhY2NvdW50IHdpdGggeW91ciBGYWNlYm9vayBhY2NvdW50LiBXZeKAmWxsIGFzayB5b3UgdG8gY29uZmlybSB0aGlzIGZvciB5b3VyIGZpcnN0IHBvc3QgdG8gRmFjZWJvb2suPC9wPiA8cD5Zb3UgY2FuIGNob29zZSBvbiBlYWNoIHBvc3Qgd2hldGhlciB5b3Ugd291bGQgbGlrZSBpdCB0byBiZSBwb3N0ZWQgdG8gRmFjZWJvb2suIFlvdXIgZGV0YWlscyBmcm9tIEZhY2Vib29rIHdpbGwgYmUgdXNlZCB0byBwcm92aWRlIHlvdSB3aXRoIHRhaWxvcmVkIGNvbnRlbnQsIG1hcmtldGluZyBhbmQgYWRzIGluIGxpbmUgd2l0aCBvdXIgUHJpdmFjeSBQb2xpY3kuPC9wPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8aDIgPk1vcmUgdG9wIHN0b3JpZXM8L2gyPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPHVsID4gPGxpID4gPGEgPiA8Yj5Gb2xsb3c8L2I+IERhaWx5TWFpbCA8L2E+IDwvbGk+IDxsaSA+IDxhID4gPGI+U3Vic2NyaWJlPC9iPiBEYWlseSBNYWlsIDwvYT4gPC9saT4gPGxpID4gPGEgPiA8Yj5Gb2xsb3c8L2I+IEBkYWlseW1haWwgPC9hPiA8L2xpPiA8bGkgPiA8YSA+IDxiPkZvbGxvdzwvYj4gRGFpbHlNYWlsIDwvYT4gPC9saT4gPGxpID4gPGEgPiA8Yj5Gb2xsb3c8L2I+IE1haWxPbmxpbmUgPC9hPiA8L2xpPiA8bGkgPiA8YSA+IDxiPkZvbGxvdzwvYj4gRGFpbHkgTWFpbCA8L2E+IDwvbGk+IDwvdWw+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxoMyA+RE9OJ1QgTUlTUzwvaDM+IDx1bCA+IDxsaT4gJ0hhcnNoZXIgcHVuaXNobWVudHMgd2lsbCBOT1Qgc3RvcCB1cyByZWFsIGFkZGljdHMnOiBNaWNoZWxsZSBIZWF0b24gc2hhcmVzIGhhdW50aW5nIGltYWdlc3MgZnJvbSBhZGRpY3Rpb24gYmF0dGxlIGFuZCBCTEFTVFMgQm9yaXMnIGRydWcgY3JhY2tkb3duIDwvbGk+IDxsaT4gJ0kgZmVlbCBsaWtlIGEgcGlnIHMqKnQgaW4gbXkgaGVhZCc6IFJpY2hhcmQgRS4gR3JhbnQgaXMgYXQgaGlzIHdpdHMnIGVuZCBpbiDCozIyOC1wZXItbmlnaHQgVUsgaG90ZWwgcXVhcmFudGluZSAtIGFmdGVyIGNvbXBsYWluaW5nIGFib3V0IHRoZSAnZ3JpbSBmb29kJyA8L2xpPiA8bGk+IFRoZXkgZG9uJ3QgbWlzcyBhIFRSSUMhIEtpcnN0eSBHYWxsYWNoZXIsIEFsZXggSm9uZXMgYW5kIExpenppZSBDdW5keSBsZWFkIGFycml2YWxzIGFzIFRlbGV2aXNpb24gYW5kIFJhZGlvIEluZHVzdHJpZXMgQ2x1YiBraWNrcyBvZmYgQ2hyaXN0bWFzIGx1bmNoIDwvbGk+IDxsaT4gRGFuaWVsbGUgTGxveWQgd2VhcnMgYSB3aGl0ZSBrbml0IGNvLW9yZCBhcyBzaGUgZG90ZXMgb24gbmV3Ym9ybiBkYXVnaHRlciBBdXR1bW4gUm9zZSB3aGlsZSBvdXQgb24gYSB3aW50ZXIgc3Ryb2xsLi4uIDMgd2Vla3MgYWZ0ZXIgZ2l2aW5nIGJpcnRoIDwvbGk+IDxsaT4gTXJzIEJyb3duJ3MgQm95cycgRmlvbmEgTydDYXJyb2xsIC0gZGF1Z2h0ZXIgb2Ygc2hvdydzIGNyZWF0b3IgQnJlbmRhbiAtIHNwbGl0cyBmcm9tIGh1c2JhbmQgYW5kIGNvLXN0YXIgTWFydGluIERlbGFueSBhZnRlciAxNSB5ZWFycyBvZiBtYXJyaWFnZSA8L2xpPiA8bGkgPiBUaGUgdml0YWwgZmFjdHMgeW91IG5lZWQgdG8ga25vdyBhYm91dCB2aXRhbWlucyBiZWZvcmUsIGR1cmluZyBhbmQgYWZ0ZXIgcHJlZ25hbmN5IEFkIEZlYXR1cmUgPC9saT4gPGxpPiBMZXdpcyBIYW1pbHRvbiBzZWxscyBoaXMgTmV3IFlvcmsgcGVudGhvdXNlIGZvciAkNDkuNW0gZGVzcGl0ZSBuZXZlciBsaXZpbmcgaW4gdGhlIHByb3BlcnR5IC0gd2hpY2ggYm9hc3RzIEZJVkUgYmVkcm9vbXMgYW5kIG11bHRpcGxlIHRlcnJhY2VzIDwvbGk+IDxsaT4gU3VzYW5uYSBSZWlkIGJyZWFrcyBkb3duIGluIHRlYXJzIGFzIEFydGh1ciBMYWJpbmpvLUh1Z2hlcycgZ3JhbmRtb3RoZXIgY3JpZXMgb24gR01CIHRlbGxpbmcgaG93IHNoZSB0cmllZCB0byBnZXQgaGVscCBmb3IgdHJhZ2ljIHNpeC15ZWFyLW9sZCA8L2xpPiA8bGk+IFJvc2Vhbm5lIHN0YXIgSm9obiBHb29kbWFuLCA2OSwgY29udGludWVzIHRvIHNob3cgb2ZmIGhpcyBkcmFtYXRpYyAyMDBsYnMgd2VpZ2h0IGxvc3MgYXQgVGhlIEZyZWFrIEJyb3RoZXJzIGV4cGVyaWVuY2UgaW4gTEEgPC9saT4gPGxpPiBUaGlzIE1vcm5pbmcncyBKb3NpZSBHaWJzb24gbG9va3MgYmVhdXRpZnVsIGluIG5ldyBwaG90b3MgbGVhdmluZyBmYW5zIGJlZ2dpbmcgaGVyIGZvciB3ZWlnaHQgbG9zcyB0aXBzIDwvbGk+IDxsaT4gQnVzdHkgTmljb2xlIEtpZG1hbiByaXNrcyBzcGlsbGluZyBvdXQgb2YgaGVyIGV0aGVyZWFsIHNpbHZlciBnb3duIGFzIHNoZSBjb3NpZXMgdXAgdG8gb24tc2NyZWVuIGh1c2JhbmQgSmF2aWVyIEJhcmRlbSBhdCBCZWluZyBUaGUgUmljYXJkb3MgcHJlbWllcmUgaW4gTEEgPC9saT4gPGxpPiA8ZGl2ID48ZGl2ID5BZHZlcnRpc2VtZW50PC9kaXY+PC9kaXY+IDwvbGk+IDxsaSA+IEdldCByZWFkeSB0byBpbmR1bGdlIEdVSUxUIEZSRUUhIENlbGVicml0eSBudXRyaXRpb25pc3Qgc2hhcmVzIGhvdyBUSElTIHNlbGwtb3V0IHN1cHBsZW1lbnQgY291bGQgYmUgdGhlIHNlY3JldCB0byBmZWVsaW5nIGZhYnVsb3VzIHRoaXMgQ2hyaXN0bWFzIEFkIEZlYXR1cmUgPC9saT4gPGxpPiBMaW5lIG9mIER1dHkgY3JlYXRvciB0YWtlcyBhaW0gYXQgQm9yaXMgYWZ0ZXIgUE0gZG9ucyBwb2xpY2UgdW5pZm9ybSBmb3IgZHJ1Z3MgYnVzdCBpbiBNZXJzZXlzaWRlIC0gdHJpZ2dlcmluZyB3YXZlIG9mIHJpZGljdWxlIG92ZXIgaGlzICdCcmlhbiBIYXJ2ZXknIGJlYW5pZSA8L2xpPiA8bGk+IExpenppZSBDdW5keSwgNTMsIHR1cm5zIHVwIHRoZSBoZWF0IGFzIHNoZSBmbGFzaGVzIGhlciBhbXBsZSBhc3NldHMgaW4gYSBwbHVuZ2luZyBzaWx2ZXIgbWluaSBkcmVzcyBhdCBUUklDJ3MgQ2hyaXN0bWFzIGx1bmNoIDwvbGk+IDxsaT4gQWxlYyBCYWxkd2luIGFuZCB3aWZlIEhpbGFyaWEgcmluZyBpbiB0aGUgaG9saWRheSBzZWFzb24gd2l0aCBhIGtpc3MgYXMgdGhleSByZXRyZWF0IHRvIHRoZSBIYW1wdG9uJ3MgYWZ0ZXIgaGUgZGVuaWVkIHB1bGxpbmcgdHJpZ2dlciBvbiBndW4gdGhhdCBraWxsZWQgSGFseW5hIEh1dGNoaW5zIDwvbGk+IDxsaT4gTWF4IFZlcnN0YXBwZW4ncyBzZWNyZXQgd2VhcG9uISBEcml2ZXIsIDI0LCBoYXMgb25lIG92ZXIgb24gTGV3aXMgSGFtaWx0b24gdGhhbmtzIHRvIGhpcyBnaXJsZnJpZW5kIEtlbGx5LCAzMywgd2hvJ3MgdGhlIGRhdWdodGVyIG9mIE5lbHNvbiBQaXF1ZXQgPC9saT4gPGxpPiBJJ20gQSBDZWxlYiBTUE9JTEVSOiBGcmFua2llIEJyaWRnZSBpcyBET1VTRUQgaW4gcm90dGVuIGZydWl0IGFuZCB2ZWcsIHNwdW4gdXBzaWRlIGRvd24gd2hpbGUgYmVpbmcgZm9yY2VkIHRvIHNwZWxsIERBVVBISU5PSVMgaW4gbGF0ZXN0IENhc3RsZSBjaGFsbGVuZ2UgPC9saT4gPGxpPiAnV2hhdCBkb2VzIGEgZ3V5IGhhdmUgdG8gZG8gdG8gZ2V0IHB1dCBvbiBIb2xseXdvb2QncyBuby1mbHkgbGlzdD8nIFdlc3QgV2luZydzIEpvc2h1YSBNYWxpbmEgdXJnZXMgV2FybmVyIEJyb3MuIHRvIENBTkNFTCBNZWwgR2lic29uIDwvbGk+IDxsaT4gQ2F0aGVyaW5lIFpldGEtSm9uZXMsIDUyLCBzaG93cyBvZmYgaGVyIHRvbmVkIGFicyBhbmQgYWdlLWRlZnlpbmcgbG9va3MgaW4gc2tpbi10aWdodCBibGFjayBhY3RpdmV3ZWFyIGFzIHNoZSBkYW5jZXMgdXAgYSBzdG9ybSBkdXJpbmcgcGhvdG9zaG9vdCA8L2xpPiA8bGk+IEtpcnN0eSBHYWxsYWNoZXIsIDQ1LCBjb21tYW5kcyBhdHRlbnRpb24gaW4gYSBibGFjayBoYWx0ZXJuZWNrIGp1bXBzdWl0IGF0IFRSSUMncyBDaHJpc3RtYXMgbHVuY2ggLSBhZnRlciBhbm5vdW5jaW5nIGJyZWFrIGZyb20gR0IgTmV3cyA8L2xpPiA8bGk+IFZhbmVzc2EgUGFyYWRpcyBjdXRzIGEgc3R5bGlzaCBmaWd1cmUgaW4gYSB0YXNzZWxlZCBibGFjayBjcm9wIHRvcCBhbmQgY2FwZSBhcyBzaGUgam9pbnMgYSBjaGljIEx1Y3kgQm95bnRvbiBhdCBDaGFuZWwgc2hvdyBpbiBQYXJpcyA8L2xpPiA8bGk+IDxkaXYgPjxkaXYgPkFkdmVydGlzZW1lbnQ8L2Rpdj48L2Rpdj4gPC9saT4gPGxpPiBJJ20gQSBDZWxlYiAyMDIxOiAnQmxhbWUgaXQgb24gdGhlIGJlYW5zLCBoZXkgYmFiZT8nIEZyYW5raWUgQnJpZGdlIGxlZnQgcmVkLWZhY2VkIGFzIGhlciBodXNiYW5kIFdheW5lIG1lbnRpb25zIGhlciBicmVha2luZyB3aW5kIGluIHBlcnNvbmFsIGxldHRlciA8L2xpPiA8bGk+IEZpcnN0IERhdGVzJyBGcmVkIFNpcmllaXggZGVidXRzIGhpcyBWRVJZIGJvbGQgcmVkIGxvY2tzIGFzIGhlIGNvb3JkaW5hdGVzIHdpdGggcHJvIHBhcnRuZXIgRGlhbm5lIEJ1c3dlbGwgd2hpbGUgZmlsbWluZyB0aGUgU3RyaWN0bHkgQ2hyaXN0bWFzIHNwZWNpYWwgPC9saT4gPGxpPiBDaHJpc3RpbmUgUXVpbm4gaXMgYWxsIGxlZ3MgaW4gcGluayB0d2VlZCBtaW5pIGRyZXNzIGFmdGVyIENocmlzaGVsbCBTdGF1c2UgcmV2ZWFsZWQgc2hlIHRocmVhdGVuZWQgaGVyIHdpdGggbGVnYWwgYWN0aW9uIDwvbGk+IDxsaT4gQWRlbGUgZmFucyBwbGFjZWQgb24gd2FpdGluZyBsaXN0IGZvciBoZXIgTGFzIFZlZ2FzIHJlc2lkZW5jeSBkdWUgdG8gJ2hpZ2ggZGVtYW5kJyBhcyB0aGV5J3JlIHRvbGQgdGlja2V0cyBtYXkgTk9UIGJlIHNvbGQgaWYgJ2RlbWFuZMKgZXhjZWVkcyBzdXBwbHknIDwvbGk+IDxsaT4gQnJpdEJveCBhZGRzICd3b2tlJyBjb250ZW50IHdhcm5pbmcgdG8gU29tZSBNb3RoZXJzIERvIEF2ZSBFbSBDaHJpc3RtYXMgZXBpc29kZSBhZnRlciBCQkMgbGF1bmNoZWQgaW52ZXN0aWdhdGlvbiBpbnRvICdob21vcGhvYmljIHNsdXInIDwvbGk+IDxsaT4gJ0kgbG92ZSB5b3UgZm9yZXZlciBtYW1hJzogTG90dGllIFRvbWxpbnNvbiBzaGFyZXMgaGVhcnQtYnJlYWtpbmcgc25hcCBvZiB0aGUgbGFzdCBjYXJkIGhlciBsYXRlIG1vdGhlciBnYXZlIGhlciB0byBtYXJrIHRoZSA1dGggYW5uaXZlcnNhcnkgb2YgaGVyIGRlYXRoIDwvbGk+IDxsaT4gJ0l0IHdhcyB0aGUgZGVmaW5pbmcgbW9tZW50IG9mIG15IGxpZmUnOiBNYXJ0aW4gTGV3aXMsIDQ5LCByZWZsZWN0cyBvbiB0aGUgZGVhdGggb2YgaGlzIG1vdGhlciBTdXNhbiBmcm9tIGEgaG9yc2UtcmlkaW5nIGFjY2lkZW50IHdoZW4gaGUgd2FzIGp1c3QgMTEgPC9saT4gPGxpPiBTdGV2ZSBDb29nYW4gcmV0dXJucyB0byB3b3JrIGFzIGFuIGFnZWluZyBKaW1teSBTYXZpbGUgYXMgYWN0b3Igd2VhcnMgc2V4dWFsIHByZWRhdG9yJ3MgZmFtb3VzIGJsdWUgdHJhY2tzdWl0IHRvIGZpbG0gMTk4OSBzY2VuZXMgZm9yIGNvbnRyb3ZlcnNpYWwgZHJhbWEgPC9saT4gPGxpPiBBbWFuZGEgSG9sZGVuIGlzIHRoZSBlcGl0b21lIG9mIGNoaWMgaW4gYSBzbWFydCBicm93biBjb2F0IGFuZCBtYXRjaGluZyBrbml0dGVkIGRyZXNzIGFzIHNoZSBsZWF2ZXMgd29yayBhdCBIZWFydCByYWRpbyA8L2xpPiA8bGk+IEEgYmlydGhkYXkgcHJpbmNlc3MhIEZ1dHVyZSBEdXRjaCBxdWVlbiBBbWFsaWEgaXMgcmVnYWwgaW4gcmVkIGluIG9mZmljaWFsIHBvcnRyYWl0cyB0YWtlbiBhdCBUaGUgSGFndWUncyBIdWlzIHRlbiBCb3NjaCBQYWxhY2UgdG8gbWFyayBoZXIgMTh0aCA8L2xpPiA8bGk+IDxkaXYgPjxkaXYgPkFkdmVydGlzZW1lbnQ8L2Rpdj48L2Rpdj4gPC9saT4gPGxpPiAnSSBnb3QgYSBsb3Qgb2YgcHVzaGJhY2sgZnJvbSBteSB0ZWFtJzogUmViZWwgV2lsc29uIGFkbWl0cyBoZXIgbWFuYWdlbWVudCBvcHBvc2VkIGhlciBsb3Npbmcgd2VpZ2h0IGFmdGVyICdlYXJuaW5nIG1pbGxpb25zIGFTIGZ1bm55IGZhdCBnaXJsJyA8L2xpPiA8bGkgPiBNYWtlIENocmlzdG1hcyBtYWdpY2FsIEFORCBkZWxpY2lvdXMgZm9yIGFsbCEgTVMgaGF2ZSB0aGUgcGVyZmVjdCBvbmxpbmUgZ2lmdHMgZm9yIGFsbCB0aGlzIHNlYXNvbiAtIGFuZCB0aGV5J3JlIGd1YXJhbnRlZWQgdG8gaGF2ZSB5b3VyIG1vdXRoIHdhdGVyaW5nISBBZCBGZWF0dXJlIDwvbGk+IDxsaT4gVmlyZ2lsIEFibG9oJ3MgbWVtb3JpYWwgc2VydmljZTogS2FueWUgV2VzdCwgS2ltIEthcmRhc2hpYW4sIFJpaGFubmEsIGFuZCBEcmFrZSBsZWFkIEEtbGlzdGVycyBwYXlpbmcgcmVzcGVjdCB0byB0aGUgZGVzaWduZXIgaW4gQ2hpY2FnbyA8L2xpPiA8bGk+IFByaW5jZSBIYXJyeSdzICdjb25jZXJucycgYWJvdXQgU2F1ZGkgYmlsbGlvbmFpcmUgJ2RpZCBOT1QgcmVhY2ggQ2hhcmxlcyc6ICdDbGFyZW5jZSBIb3VzZSBzdGFmZiBkb24ndCByZWNhbGwgZGlzY3Vzc2lvbnMgYWJvdXQgdHljb29uJyA8L2xpPiA8bGk+IEFzaGxleSBSb2JlcnRzIGN1dHMgYSBjaGljIGZpZ3VyZSBpbiBhIGxpbGFjIHNoaXJ0IGFuZCBwdXJwbGUgZmxhcmVkIHRyb3VzZXJzIGFzIHNoZSBtYWtlcyBhIHN0eWxpc2ggZXhpdCBmcm9tIEhlYXJ0IEZNIGluIExvbmRvbiA8L2xpPiA8bGk+ICdJdCdzIHByYWN0aWNhbGx5IGNyaW1pbmFsJzogQnJvb2tlIFNoaWVsZHMgU0xBTVMgMTk4MSBCYXJiYXJhIFdhbHRlcnMgaW50ZXJ2aWV3IGFmdGVyIGJlaW5nIGdyaWxsZWQgb3ZlciBiZWluZyBzZXh1YWxpc2VkIGFuZCBUSEFUIENhbHZpbiBLbGVpbiBjYW1wYWlnbiA8L2xpPiA8bGk+IFN0cmljdGx5J3MgRGFuIFdhbGtlciB0YWtlcyBoaXMgZm9ybWVyIGRhbmNlIHBhcnRuZXIgTmFkaXlhIEJ5Y2hrb3ZhIGFsb25nIHRvIEJCQyBCcmVha2Zhc3QgYWZ0ZXIgdGhlaXIgZW1vdGlvbmFsIGVsaW1pbmF0aW9uIGZyb20gdGhlIGNvbXBldGl0aW9uIDwvbGk+IDxsaSA+IDEwIHRvcCB0aXBzIGZvciBsYXN0LW1pbnV0ZSBDaHJpc3RtYXMgZ2lmdGluZyBndWFyYW50ZWVkIHRvIGltcHJlc3MgQWQgRmVhdHVyZSA8L2xpPiA8bGk+IEZlcm5lIE1jQ2FubiB3ZWFycyBhIGZsdWZmeSBjb2F0IGFuZCBrbml0dGVkIGJvYmJsZSBoYXQgYXMgc2hlIGVuam95cyBhbiBldmVuaW5nIGF0IFdpbnRlciBXb25kZXJsYW5kIHdpdGggZGF1Z2h0ZXIgU3VuZGF5LCA0IDwvbGk+IDxsaT4gJ1RoZSB3aW50ZXIgb2YgbG92ZSc6IEx1Y2llIERvbmxhbiBleHBvc2VzIGhlciBjbGVhdmFnZSBpbiBhIHNraW1weSBibGFjayBicmEgYXMgc2hlIGpvaW5zIHNoaXJ0bGVzcyBib3lmcmllbmQgTHVrZSBNYWJib3R0IGZvciBmZXN0aXZlIHVuZGVyd2VhciBzaG9vdCA8L2xpPiA8bGk+IFN0cmljdGx5J3MgUnlsYW4gQ2xhcmstTmVhbCBzaG93cyBvZmYgaGlzIG5ldyBibG9uZCBoaWdobGlnaHRzIGFuZCB2ZW5lZXJzIGF0IEl0IFRha2VzIFR3byAtIGFmdGVyIGpva2luZyB0aGF0IGhlIHdhcyBnb2luZyB0aHJvdWdoIGEgJ21pZC1saWZlIGNyaXNpcycgPC9saT4gPGxpPiBDbGF1ZGlhIFNjaGlmZmVyLCA1MSwgZmxhdW50cyBoZXIgcGhlbm9tZW5hbCBmcmFtZSBpbiBhIGNsaW5naW5nIHdoaXRlIG1pbmkgYXMgc2hlIHN0cnV0cyBvdXQgb2YgVGhlIEtpbmcncyBNYW4gcHJlbWllcmUgYWZ0ZXItcGFydHkgaW4gTG9uZG9uIDwvbGk+IDxsaSA+IFRoZSBmdXR1cmUgaGFzIGFycml2ZWQ6IFdoeSBFeHBvIDIwMjAgRHViYWkgaGVyYWxkcyB0aGUgc3RhcnQgb2YgYSBnbGl0dGVyaW5nIG5ldyBjaGFwdGVyIG9mIGdsb2JhbCBpbm5vdmF0aW9uIEFkIEZlYXR1cmUgPC9saT4gPGxpPiAnSSBoYWQgYSB0b24gb2Ygc2V4IScgUHJlZ25hbnQgSmVubmlmZXIgTGF3cmVuY2Ugam9rZXMgYWJvdXQgaG93IHNoZSBzcGVudCBhY3RpbmcgaGlhdHVzLi4uIGJlZm9yZSBzYXlpbmcgdGltZSBvZmYgd2FzIGZpbGxlZCB3aXRoICdjb29raW5nIGFuZCBjbGVhbmluZycgPC9saT4gPGxpPiAnSSBkb24ndCBldmVuIHN1Z2dlc3QgaGVscGluZyBvdXQhJyBHcmVnZyBXYWxsYWNlLCA1Nywgc2F5cyBoZSBzdGFydHMgZHJpbmtpbmcgYXQgNi4zMGFtIG9uIENocmlzdG1hcyBEYXkuLi4gd2hpbGUgd2lmZSBBbm5lLU1hcmllLCAzNSwgcHJlcGFyZXMgYSBzZXZlbiBqb2ludCBtZWF0IGRpbm5lciEgPC9saT4gPGxpPiA8ZGl2ID48ZGl2ID5BZHZlcnRpc2VtZW50PC9kaXY+PC9kaXY+IDwvbGk+IDxsaT4gUGF1bCBIb2xseXdvb2QsIDU1LCBzaWducyBhdXRvZ3JhcGhzIHdoaWxlIGdpcmxmcmllbmQgTWVsaXNzYSBTcGFsZGluZywgMzcsIGxvb2tzIHByb3VkbHkgb24gYXMgdGhleSBhdHRlbmQgVGhlIEtpbmcncyBNYW4gcHJlbWllcmUgYWZ0ZXJwYXJ0eSA8L2xpPiA8bGk+ICdJdCBtYWRlIGl0IHNvIG11Y2ggZWFzaWVyIHRvIGFjY2VwdCc6IFBhcmlzIEZ1cnkgc2F5cyBzaGUgd2FzICdyZWxpZXZlZCcgYWZ0ZXIgaHVzYmFuZCBUeXNvbiB3YXMgZGlhZ25vc2VkIHdpdGggYmlwb2xhciBkaXNvcmRlciBkdXJpbmcgYm9vemUgYW5kIGRydWcgZnVlbGxlZCBib3hpbmcgaGlhdHVzIDwvbGk+IDxsaSA+IEZlZWxpbmcgbG9zdCB3aXRoIHlvdXIgQ2hyaXN0bWFzIHNob3BwaW5nPyBUaGlzIGxpZmUtY2hhbmdpbmcgZ2lmdCBjb3VsZCBoZWxwIGtlZXAgeW91IEFORCB5b3VyIGxvdmVkIG9uZXMgb24gdHJhY2sgQWQgRmVhdHVyZSA8L2xpPiA8bGk+IFBhdWwgSG9sbHl3b29kLCA1NSwgbWFrZXMgcmVkIGNhcnBldCBkZWJ1dCB3aXRoIGdpcmxmcmllbmQgTWVsaXNzYSBTcGFsZGluZywgMzcsIGFzIHRoZXkgYXR0ZW5kIFRoZSBLaW5nJ3MgTWFuIHByZW1pZXJlIDwvbGk+IDxsaT4gQ29sZWVuIFJvb25leSBzaGFyZXMgaGVhcnR3YXJtaW5nIGZlc3RpdmUgc25hcHMgb2YgaGVyIHBhcmVudHMgQ29sZXR0ZSBhbmQgVG9ueSB3aXRoIGFsbCBlaWdodCBncmFuZGNoaWxkcmVuIDwvbGk+IDxsaT4gSSdtIEEgQ2VsZWJyaXR5IDIwMjE6IEthZGVlbmEgQ294IGlzIHRoZSBzZWNvbmQgY2FtcG1hdGUgdG8gYmlkIGZhcmV3ZWxsIHRvIEd3cnljaCBDYXN0bGUgYWZ0ZXIgZmFsbGluZyB2aWN0aW0gdG8gdGhlIHB1YmxpYyB2b3RlIDwvbGk+IDxsaSA+IEFsZGkgaGFzIGxhdW5jaGVkIEpvIE1hbG9uZS1pbnNwaXJlZCBzdXBlci1zaXplIGNhbmRsZXMganVzdCBpbiB0aW1lIGZvciBDaHJpc3RtYXMgLSBhbmQgYXQganVzdCDCozI0Ljk5IHRoZXkncmUgwqMzMDUgQ0hFQVBFUiB0aGFuIHRoZSBsdXh1cnkgYnJhbmQgUHJvbW90ZWQgPC9saT4gPGxpPiBKZW5uaWZlciBMYXdyZW5jZSBsb29rcyBicmVhdGh0YWtpbmcgYXMgc2hlIHNob3djYXNlcyBoZXIgZ3Jvd2luZyBiYWJ5IGJ1bXAgaW4gdWx0cmEtY2hpYyBwb2xrYSBkb3QgZHJlc3MgPC9saT4gPGxpPiBTaW1vbiBDb3dlbGwncyBuZXcgdGFsZW50IHNob3cgV2FsayBUaGUgTGluZSBoaXQgYnkgdGVjaG5pY2FsIGJsdW5kZXJzIGFoZWFkIG9mIElUViBkZWJ1dCBhcyBzdHVkaW8gYXVkaWVuY2Ugdm90aW5nIHBhZHMgZmFpbGVkIHRvIHdvcmsgPC9saT4gPGxpPiBOaWNvbGUgS2lkbWFuIHN3YXBzIGhlciBnb3duIGZvciBhbiBMQkQgYXMgY28tc3RhciBKYXZpZXIgQmFyZGVtIHN0b3JtcyB0aGUgc3RhZ2UgdG8gcGxheSBkcnVtcyBhdCBCZWluZyBUaGUgUmljYXJkb3MgcHJlbWllcmUgYWZ0ZXItcGFydHkgPC9saT4gPGxpPiA8ZGl2ID48ZGl2ID5BZHZlcnRpc2VtZW50PC9kaXY+PC9kaXY+IDwvbGk+IDxsaT4gRktBIHR3aWdzIHBhaXJzIGhlciBib2xkIHJlZCBjYXJwZXQgZW5zZW1ibGUgd2l0aCBhIGJpbGxvd2luZyBwYXR0ZXJuZWQgY29hdCBhcyBzaGUgZGVwYXJ0c8KgVGhlIEtpbmcncyBNYW4gcHJlbWllcmUgYWZ0ZXItcGFydHkgaW4gTG9uZG9uIDwvbGk+IDxsaT4gTWFnZ2llIEd5bGxlbmhhYWwgd293cyBhcyBzaGUgZGVidXRzIG5ldyBzbGVlayBsb2NrcyBpbiBhIGNsaW5naW5nIHNpbGsgZ293biBhdCBTRkZJTE0gQXdhcmRzIE5pZ2h0IDwvbGk+IDxsaT4gMDA3IHByb2R1Y2VywqBCYXJiYXJhIEJyb2Njb2xpIGluc2lzdHMgJ0phbWVzIEJvbmQgd2lsbCBiZSBiYWNrJyAuLi4gYWZ0ZXLCoERhbmllbCBDcmFpZydzIHN3YW4gc29uZyBpbiBObyBUaW1lIFRvIERpZSAodGhleSBqdXN0IGRvbid0IGtub3cgaG93IHlldCkgPC9saT4gPGxpPiBDYWx2aW4gS2xlaW4sIDc5LCBzdGVwcyBvdXQgd2l0aCBsb25nLXRlcm0gYm95ZnJpZW5kIEtldmluIEJha2VyLCAzMywgaW4gcmFyZSBvdXRpbmcgYXMgdGhleSBkb24gbWF0Y2hpbmcgY2FzdWFsIG91dGZpdHMgZm9yIGEgbG93LWtleSBsdW5jaCBkYXRlIDwvbGk+IDxsaT4gRWxsZSBNYWNwaGVyc29uLCA1Nywgc3RyaXBzIG9mZiBpbnRvIGEgdGlueSBiaWtpbmkgYW5kIHJlbGF4ZXMgYnkgdGhlIHBvb2wgaW4gZm9vdGFnZSBjYXB0dXJlZCBieSBoZXIgRnJlbmNoIGZhc2hpb24gcGhvdG9ncmFwaGVyIGV4IEdpbGxlcyBCZW5zaW1vbiA8L2xpPiA8bGk+IEFzaGxleSBHcmFoYW0gc2hvd2Nhc2VzIGhlciBidXJnZW9uaW5nIGJhYnkgYnVtcCBhaGVhZCBvZiBnaXZpbmcgYmlydGggdG8gdHdpbnMgYW5kIHJldmVhbHM6ICdNeSBib3lzIGFyZSA2bGJzIEVBQ0ghJyA8L2xpPiA8bGkgPiAnVGhpcyBzdHVmZiBpcyBtYWdpYyEnOiBTaG9wcGVycyBsb3ZlIE9sYXBsZXggZm9yIHRyYW5zZm9ybWluZyBsYWNrbHVzdHJlIGxvY2tzIC0gYW5kIEFtYXpvbiBoYXMgbWFya2VkIGRvd24gdGhlIHRyaWFsIGtpdCB0byBqdXN0IMKjMjEuNzYgUHJvbW90ZWQgPC9saT4gPGxpPiBTYXdlZXRpZSBhbmQgTGlsIE5hcyBYIHB1dCBvbiByYWN5IGRpc3BsYXlzIGFzIHRoZXkgaGVhZGxpbmUgaUhlYXJ0UmFkaW8ncyAxMDEuMyBLRFdCIEppbmdsZSBCYWxsIDIwMjEgaW4gU3QuIFBhdWwsIE1pbm5lc290YSA8L2xpPiA8bGk+IE5pY2sgQ2Fubm9uIHNlbmRzIHRoZSBpbnRlcm5ldCBpbnRvIGEgZnJlbnp5IGFzIGhlIHNob3dzIG9mZiBtb3JlIHRoYW4gaW50ZW5kZWQgaW4gVkVSWSB0aWdodCB0cm91c2VycyB3aGlsZSBob3N0aW5nIGhpcyBuZXcgdGFsayBzaG93IDwvbGk+IDxsaT4gJ0kgd2FzIHNvIHNhZCBoZSBjb3VsZG4ndCBzZWUgaXQgdGhhdCBJIGRlZGljYXRlZCB0aGUgZmlsbSB0byBoaW0nOiBTdGV2ZW4gU3BpZWxiZXJnIHJldmVhbHMgdGhlIGltcGFjdCBXZXN0IFNpZGUgU3RvcnkgcmVtYWtlIGhhZCBvbiBoaXMgbGF0ZSBmYXRoZXIgQXJub2xkIDwvbGk+IDxsaT4gPGRpdiA+PGRpdiA+QWR2ZXJ0aXNlbWVudDwvZGl2PjwvZGl2PiA8L2xpPiA8bGk+IEhhbGxlIEJlcnJ5LCBKZW5uaWZlciBIdWRzb24gYW5kIFRhcmFqaSBQLiBIZW5zb24gdHVybiBoZWFkcyBpbiBmYXNoaW9uLWZvcndhcmQgZHJlc3NlcyBhdCB0aGUgYW5udWFsIENlbGVicmF0aW9uIG9mIEJsYWNrIENpbmVtYSBUZWxldmlzaW9uIDwvbGk+IDxsaSA+IFJIT0JIIHN0YXIgUEsgS2Vtc2xleSB3YXMgYXJyZXN0ZWQgb24gc3VzcGljaW9uIG9mIERVSSBpbiBDYWxpZm9ybmlhIGEgbW9udGggYWZ0ZXIgaGlzIHdpZmUgRG9yaXQgd2FzIHJvYmJlZCBhdCBndW5wb2ludCA8L2xpPiA8bGk+IFRvbSBIaWRkbGVzdG9uIHdlYXJzIGEgRFJFU1MgYW5kIHdpZyBmb3IgZnVuIHR1cm4gaW4gVGhlIFBsYXkgV2hhdCBJIFdyb3RlLi4uIGpvaW5pbmcgc3RhcnMgaW5jbHVkaW5nwqBSYWxwaCBGaWVubmVzIGFuZCBTdGluZyBpbiBtYWtpbmcgY2FtZW9zIDwvbGk+IDxsaT4gS2F0aWUgTWNHbHlubiB3cmFwcyB1cCBpbiBhIGdyZWVuIGp1bXBlciB3aGlsZSBTdGVwaGFuaWUgV2FyaW5nIHNsaXBzIG9uIGEgc2xlZWsgdGF1cGUgY29hdCBmb3IgYW4gZXZlbmluZyBhdCBNYW5jaGVzdGVyJ3MgV2ludGVyIFdvbmRlcmxhbmQgPC9saT4gPGxpPiBKb25haCBIaWxsIGRpc3BsYXlzIGhpcyB1bmlxdWUgZmFzaGlvbiBzZW5zZSBpbiBhIGJvbGQgZmxvcmFsIHNoaXJ0IGFuZCBwdXJwbGUgYmVhbmllIGhhdCBhcyBoZSBqb2lucyBMZW9uYXJkbyBEaSBDYXByaW8gYXQgdGhlIFFBIGZvciB0aGVpciBmaWxtIERvbid0IExvb2sgVXAgPC9saT4gPGxpPiBSeWFuIFJleW5vbGRzIGN1dHMgYSBzdHlsaXNoIGZpZ3VyZSBhcyBoZSBzdGVwcyBvdXQgaW4gYSBzdWVkZSBncmVlbiBqYWNrZXQgYW5kIGRhcmsgc2hhZGVzIGZvciBhIHdpbnRlciB3YWxrIDwvbGk+IDxsaT4gUElDVFVSRUQ6IEtobG9lIEthcmRhc2hpYW4ga2VlcHMgbG93IHByb2ZpbGUgYXMgc2hlIGVtZXJnZXMgYWZ0ZXIgZGlzY292ZXJpbmcgVHJpc3RhbiBUaG9tcHNvbiAnZ290IGFub3RoZXIgd29tYW4gUFJFR05BTlQgd2hpbGUgdGhleSB3ZXJlIHN0aWxsIHRvZ2V0aGVyJyA8L2xpPiA8bGk+IFN0cmljdGx5IENocmlzdG1hcyBzcGVjaWFsICd0aHJvd24gaW50byBNQVlIRU0gYWZ0ZXIgU2hlcmlkYW4gU21pdGggcHVsbHMgb3V0IG9mIGhlciBwZXJmb3JtYW5jZSB3aXRoIEdhcnkgQmFybG93IHdpdGggb25seSBkYXlzIG5vdGljZScgPC9saT4gPGxpPiBUaGUgQmFjaGVsb3JldHRlOiBUYXlzaGlhIEFkYW1zIHRlbGxzIGNvLWhvc3QgS2FpdGx5biBCcmlzdG93ZSBzaGUncyAnaGVhcnRicm9rZW4nIG92ZXIgdG91Z2ggc3BsaXQgd2l0aCBaYWMgQ2xhcmsgYW5kIGVtb3Rpb25hbGx5IHdhbGtzIG9mZiA8L2xpPiA8bGk+IEFteSBBZGFtcywgNDcsIHN3YXBzIHJlZCBjYXJwZXQgZ2xhbW91ciBmb3IgYSB2ZXJ5IGNhc3VhbCBlbnNlbWJsZSBhcyBzaGUgZ29lcyBDaHJpc3RtYXMgc2hvcHBpbmcgaW4gQmV2ZXJseSBIaWxscyA8L2xpPiA8bGk+IDxkaXYgPjxkaXYgPkFkdmVydGlzZW1lbnQ8L2Rpdj48L2Rpdj4gPC9saT4gPGxpPiBDb3VsZCB0aGlzIGJsb29keSBUViBzZXJpZXMgYmUgdGhlIG5leHQgS2lsbGluZyBFdmU/IFJhZ2RvbGwgZnJvbSB0aGUgbWFrZXJzIG9mIHNlcmlhbCBraWxsZXIgaGl0IGZvbGxvd3MgZGV0ZWN0aXZlcyBpbnZlc3RpZ2F0aW5nIG11cmRlcnMgLSBhZnRlciBmaW5kaW5nIGJvZGllcyBTRVdOIHRvZ2V0aGVyIDwvbGk+IDxsaT4gJ0l0IHdhc24ndCB1Z2x5IGp1c3QgdGhhdCB0aGVpciBzY2hlZHVsZXMgd2VyZW4ndCBhbGlnbmluZyc6IEVpemEgR29uemFsZXogYW5kIFBhdWwgUmFiaWwgU1BMSVQgJ2EgZmV3IHdlZWtzIGFnbycgYWZ0ZXIgd29yayAncHV0IHN0cmFpbicgb24gdGhlaXIgc2V2ZW4tbW9udGggcm9tYW5jZSA8L2xpPiA8bGk+IEknbSBBIENlbGVicml0eSAyMDIxOiBBZ2dyaWV2ZWQgRGF2aWQgR2lub2xhIGhpdHMgYmFjayBhdCBOYXVnaHR5IEJveSBvdmVyIHRlbnNlIHRyaWFsIGRlbGliZXJhdGlvbnMgLSBhbmQgZmFucyBhcmUgdG91Y2hlZCBieSB0aGUgRnJlbmNobWFuJ3MgZW1vdGlvbiB3aGVuIHJlYWRpbmcgbGV0dGVyIDwvbGk+IDxsaT4gQmlsbHkgQ29ubm9sbHksIDc5LCBwcm91ZGx5IHJldmVhbHMgaGUgaGFzIGxlYXJudCB0byAnaHlwbm90aXNlJyBoaXMgaGFuZHMgdG8gZGlzcGVsIHNoYWtpbmcgc2lkZSBlZmZlY3RzIGZyb20gaGlzIFBhcmtpbnNvbidzIGRpc2Vhc2UgPC9saT4gPGxpPiBHZW1tYSBBcnRlcnRvbiB3b3dzIGluIGEgc2hpbW1lcmluZyBvcmFuZ2UgZ293biBhdCBzdGFyLXN0dWRkZWQgVGhlIEtpbmcncyBNYW4gd29ybGQgcHJlbWllcmUgaW4gTG9uZG9uIFdvdyA8L2xpPiA8bGk+IFByaW5jZSBIYXJyeSBhbmQgQ2hhcmxlcyAnaGF2ZSBiYXJlbHkgc3Bva2VuIGluIE1PTlRIUyc6IFJlbGF0aW9ucyBoaXQgJ2FuIGFsbC10aW1lIGxvdycgYWZ0ZXIgTWVneGl0LCBhY2N1c2F0aW9ucyBvZiByYWNpc20gYW5kIER1a2UncyBkaWcgYXQgZG9ub3Igc2NhbmRhbCA8L2xpPiA8bGk+ICdJdCB3YXMgdmVyeSBzdHJhbmdlIScgSSdtIEEgQ2VsZWIncyBBcmxlbmUgUGhpbGxpcHMgcmV2ZWFscyBzaGUgd2FzIGFsbG93ZWQgdG8gZHllIGhlciBIQUlSIGFuZCB3YXRjaCBOZXRmbGl4IHdoaWxlIHN0YXJzIHdlcmUgZXZhY3VhdGVkIGR1cmluZyBTdG9ybSBBcndlbiA8L2xpPiA8bGk+IEppbW15IEZhbGxvbiB0ZWFtcyB1cCB3aXRoIHdpdGggQXJpYW5hIEdyYW5kZSBhbmQgTWVnYW4gVGhlZSBTdGFsbGlvbiBmb3IgYSBuZXcgaG9saWRheSB0dW5lIEl0IFdhcyBBLi4uIChNYXNrZWQgQ2hyaXN0bWFzKSA8L2xpPiA8bGk+IFBldGUgRGF2aWRzb24gc21va2VzIGEgam9pbnQgb24gcmVkIGNhcnBldCBvZiBUaGUgRnJlYWsgQnJvdGhlcnMgaW4gTEEuLi4gd2hpbGUgbG92ZS1pbnRlcmVzdCBLaW0gS2FyZGFzaGlhbiBhdHRlbmRzIG1lbW9yaWFsIHNlcnZpY2Ugd2l0aCBLYW55ZSBXZXN0IDwvbGk+IDxsaT4gVGhlIFZvaWNlOiBBcmlhbmEgR3JhbmRlIGdldHMgaW4gb24gdGhlIGFjdCBhcyBKaW0gYW5kIFNhc2hhIEFsbGVuIHBlcmZvcm0gbGl2ZSBkdXJpbmcgc2VtaWZpbmFscyA8L2xpPiA8bGk+IDxkaXYgPjxkaXYgPkFkdmVydGlzZW1lbnQ8L2Rpdj48L2Rpdj4gPC9saT4gPGxpID4gJ0l0J3MgYWxsIGhlJ3MgZXZlciB3YW50ZWQnOiBKYW1lcyBBcmdlbnQgYW5kIEx5ZGlhIEJyaWdodCBoYXZlIGJlZW4gbWVldGluZyB1cCBpbiBzZWNyZXQgYW5kIGFyZSBob3BpbmcgdG8gcmVraW5kbGUgcm9tYW5jZSA8L2xpPiA8bGk+ICdMZXQncyBlbWJyYWNlIGFsbCB0aGUgZmFpdGhzIGFuZCByaXR1YWxzIScgTWFkb25uYSBjZWxlYnJhdGVzIHRoZSBmaW5hbCBuaWdodCBvZiBIYW51a2thaCBieSBkcmVzc2luZyB1cCBhcyBhbiBlbGYgYW5kIGRlY29yYXRpbmcgYSBDaHJpc3RtYXMgdHJlZSA8L2xpPiA8bGk+IEplbm5pZmVyIEFuaXN0b24gbGVhZHMgY2FzdHMgb2YgTGl2ZSBJbiBGcm9udCBPZiBBIFN0dWRpbyBBdWRpZW5jZSBvbiBKaW1teSBLaW1tZWwgTGl2ZSBhcyBLZXZpbiBIYXJ0IGpva2VzIGFib3V0IHdhbGtpbmcgYmVjYXVzZSBpdCdzIGdvbm5hIGJlIGEgJ3MqKipzaG93JyA8L2xpPiA8bGk+IFJvc2UgTWNHb3dhbidzIGxhd3N1aXQgYWdhaW5zdCBIYXJ2ZXkgV2VpbnN0ZWluIGlzIERJU01JU1NFRCBhZnRlciBzaGUgZmFpbGVkIHRvIGZpbGUgY29ycmVjdCBwYXBlcndvcmsgYnkgZGVhZGxpbmU6IEFjdHJlc3MgY2xhaW1zIGRpc2dyYWNlZCBtb2d1bCBzZXh1YWxseSBhc3NhdWx0ZWQgaGVyIDwvbGk+IDxsaT4gU3lsdmVzdGVyIFN0YWxsb25lLCA3NSwgdG8gc3RhciBhcyBtb2IgYm9zcyBpbiBkcmFtYSBzZXJpZXMgS2Fuc2FzIENpdHkuLi4gaW4gd2hhdCB3aWxsIGJlIGhpcyBmaXJzdCBsZWFkaW5nIG1hbiByb2xlIGZvciBUViA8L2xpPiA8bGk+IFdlc3QgU2lkZSBTdG9yeSdzIEFuc2VsIEVsZ29ydCBhbmQgUmFjaGVsIFplZ2xlciBwcm9tb3RlIHVwY29taW5nIGZpbG0gYXQgU2lyaXVzWE0gU3R1ZGlvcyBpbiBMQSA8L2xpPiA8bGk+IE9saXZpYSBXaWxkZSByb2NrcyBhIHN3ZWF0c2hpcnQgZnJvbSBoZXIgYmVhdSBIYXJyeSBTdHlsZXMncyBnZW5kZXItbmV1dHJhbCBiZWF1dHkgbGluZSB3aGlsZSBvdXQgaW7CoExvcyBBbmdlbGVzIDwvbGk+IDxsaT4gRGF2aWQgR2lub2xhJ3MgZGF1Z2h0ZXIgQ2FybGEgc3RheXMgYXQgwqMyLDQwMCBwZXIgbmlnaHQgaG90ZWwgaW4gTWF1cml0aXVzIHdoaWxlIHRoZSBmb3JtZXIgZm9vdGJhbGxlciBlbmR1cmVzIGZyZWV6aW5nIHRlbXBlcmF0dXJlcyBvbiBJQUMgPC9saT4gPGxpPiBQZXRlIERhdmlkc29uIGFuZCBNYWNoaW5lIEd1biBLZWxseSBkcml2ZSBmYW5zIHdpbGQgYXMgdGhleSBzdHJpcCBkb3duIHRvIENhbHZpbiBLbGVpbiB1bmRlcndlYXI6wqAnSG9wZSBldmVyeW9uZSdzIGhvcm55IGF0IGhvbWUhJyA8L2xpPiA8bGk+IFRoaXMga25vY2thYm91dCBob21hZ2UgdG8gRXJpYyBhbmQgRXJuaWUgaXMgcHVyZSBjb21pYyBzdW5zaGluZTogUEFUUklDSyBNQVJNSU9OIHJldmlld3MgVGhlIFBsYXkgV2hhdCBJIFdyb3RlIDwvbGk+IDxsaT4gPGRpdiA+PGRpdiA+QWR2ZXJ0aXNlbWVudDwvZGl2PjwvZGl2PiA8L2xpPiA8bGk+IEd3ZW4gU3RlZmFuaSBjZXJ0YWlubHkgc2VlbXMgaW4gdGhlIGhvbGlkYXkgc3Bpcml0IGFzIHNoZSByb2NrcyBib2xkIHJlZCBhbmQgYmxhY2sgZW5zZW1ibGUgd2hpbGUgb3V0IGluIExBIDwvbGk+IDxsaT4gSmFuZSBTZXltb3VyIHJldW5pdGVzIHdpdGggRHIuIFF1aW5uLCBNZWRpY2luZSBXb21hbiBjYXN0IDIzIHllYXJzIGFmdGVyIHRoZSBzaG93IHdlbnQgb2ZmIHRoZSBhaXIgdG8gY2VsZWJyYXRlIGNvLXN0YXIgSm9lIExhbmRvJ3MgYmlydGhkYXkgPC9saT4gPGxpPiAnSGFwcHkgZioqKioqZyBNb25kYXkhJzogTWF1cmEgSGlnZ2lucyByZXZlYWxzIHNoZSBoYXMgYmVlbiBydXNoZWQgdG8gQUUgYWZ0ZXIgJ3NsaWNpbmcgaGVyIGZpbmdlciB0byB0aGUgQk9ORScgLSBhcyBzaGUgc2hhcmVzIHNuYXAgZnJvbSB3YWl0aW5nIHJvb20gPC9saT4gPGxpPiBWYW5lc3NhIEJyeWFudCByZXZlYWxzIHRoYXQgdHJvbGxzIGFyZSB0aHJlYXRlbmluZyB0byByZWxlYXNlIHBob3RvcyBvZiBLb2JlIGFuZCBHaWFubmEncyBib2RpZXMgPC9saT4gPGxpPiBFeHRyYW9yZGluYXJ5IHN0b3J5IG9mIGhvdyBKb0pvIFNpd2EgYnVpbHQgYSAkMjAgTUlMTElPTiBlbXBpcmUgYWZ0ZXIgbGVhdmluZyBEYW5jZSBNb21zIC0gYW5kIGhvdyBjb21pbmcgb3V0IGhhcyBoZWxwZWQgaGVyIHNoZWQgaGVyICdsaXR0bGUga2lkJyBpbWFnZSA8L2xpPiA8bGk+IE1hZGUgSW4gQ2hlbHNlYSdzIE5pY29sYSBIdWdoZXMgc2hvd2Nhc2VzIGhlciBmaWd1cmUgaW4gYSB0aW55IGJyaWRhbCB3aGl0ZSBiaWtpbmkgYXMgc2hlIGVuam95cyBsYXZpc2ggaG9uZXltb29uIHdpdGggbmV3IGh1c2JhbmQgQ2hhcmxpZSBUdXBwZXIgPC9saT4gPGxpPiBDb2xpbiBGYXJyZWxsIHdpbGwgcGxheSBUaGUgUGVuZ3VpbiBpbiBIQk8gTWF4IHNwaW5vZmYgc2hvdyBvZiBUaGUgQmF0bWFuIFNvdXJjZXMgdG9sZCBWYXJpZXR5IE1vbmRheSB0aGF0IHRoZSA0NSB5ZWFyLW9sZCBhY3RvciB3aWxsIHN0YXIgPC9saT4gPGxpPiBDaGFybGllIENveCBjb25maXJtZWQgdG8gcmV0dXJuIGFzIERhcmVkZXZpbCBpbiB0aGUgTWFydmVsIENpbmVtYXRpYyBVbml2ZXJzZSBieSBNYXJ2ZWwgUHJlc2lkZW50IEtldmluIEZlaWdlLi4uIHRob3VnaCBpdCdzIHVuY2xlYXIgd2hlbiA8L2xpPiA8bGk+IERhdmUgQmF1dGlzdGEgd2lsbCBoZWFkbGluZSBNLiBOaWdodCBTaHlhbWFsYW4gbW92aWUgS25vY2sgQXQgVGhlIENhYmluOiAnQW5vdGhlciBkcmVhbSBjb21lIHRydWUnIDwvbGk+IDxsaT4gRGF2aWQgVGVubmFudCB0YWtlcyBhIHN3aXBlIGF0IFBoaWxlYXMgRm9nZyBmb3IgcmVwcmVzZW50aW5nICdldmVyeXRoaW5nIHRoYXQncyBhbGFybWluZyBhbmQgcGVjdWxpYXIgYWJvdXQgdGhlIEJyaXRpc2ggRW1waXJlJyA8L2xpPiA8bGk+IDxkaXYgPjxkaXYgPkFkdmVydGlzZW1lbnQ8L2Rpdj48L2Rpdj4gPC9saT4gPGxpPiBKdXNzaWUgU21vbGxldHQgcmV2ZWFscyBEb24gTGVtb24gd2FybmVkIGhpbSB0aGF0IGNvcHMgZGlkbid0IGJlbGlldmUgYWNjb3VudCBvZiBiZWluZyBiZWF0ZW4gdXA6IENOTiBob3N0IGlnbm9yZXMgcmV2ZWxhdGlvbiBvbiBoaXMgc2hvdyA8L2xpPiA8bGk+IFJlYmVjY2EgRmVyZ3Vzb24gbG9va3MgcmFkaWFudCBpbiBhIHBsdW5naW5nIGZ1Y2hzaWEgZHJlc3MgYXMgc2hlIGF0dGVuZHMgQ2lnYXIgU21va2VyIE9mIFRoZSBZZWFyIGV2ZW50IDwvbGk+IDxsaSA+IEJyaXRuZXkgU3BlYXJzIHB1ZmZzIG9uIGEgY2lnYXJldHRlIGJlZm9yZSB0YWtpbmcgYSBqYWN1enppIGRpcCBpbiBhIHRpbnkgcmVkIGJpa2luaS4uLiBhcyBzaGUgY29udGludWVzIGhlciA0MHRoIGJpcnRoZGF5IGNlbGVicmF0aW9ucyB3aXRoIGZpYW5jZSBTYW0gQXNnaGFyaSBpbiBDYWJvIFNhbiBMdWNhcyA8L2xpPiA8bGk+IExlb25hcmRvIERpQ2FwcmlvIGp1c3QgZm91bmQgb3V0IGhpcyBmYXRoZXIgR2VvcmdlIGhhcyBhIHNtYWxsIGNhbWVvIGluIFBhdWwgVGhvbWFzIEFuZGVyc29uJ3MgTGljb3JpY2UgUGl6emEgPC9saT4gPGxpPiBLaGxvZSBLYXJkYXNoaWFuIHNob3dzIG9mZiBzeW1wYXRoeSBmbG93ZXJzIGZyb20gU2NvdHQgRGlzaWNrIGFmdGVyIHNlcmlhbCBjaGVhdGVyIFRyaXN0YW4gVGhvbXBzb24gZmF0aGVyZWQgYSB0aGlyZCBjaGlsZCA8L2xpPiA8bGk+IEhvdyB3b3VsZCBoZSBrbm93PyBQcmluY2UgSGFycnkgc2F5cyBxdWl0dGluZyB3b3JrIGNhbiBiZSBnb29kIGZvciB5b3VyIG1lbnRhbCBoZWFsdGggYW5kICdtYW55IHBlb3BsZSBhcm91bmQgdGhlIHdvcmxkIGhhdmUgYmVlbiBzdHVjayBpbiBqb2JzIHRoYXQgZG9uJ3QgYnJpbmcgdGhlbSBqb3knIDwvbGk+IDxsaT4gSm9obiBCYXJyb3dtYW4gcmV2ZWFscyBoaXMgZGVsaWdodCBhdCByZXRhaW5pbmcgaG9zdGluZyBzdGludCBvbiBBbGwgU3RhciBNdXNpY2FscyAtIHdoaWNoIHJldHVybnMgb24gQm94aW5nIERheS4uLiBhZnRlciBiZWluZyBheGVkIGZyb20gRE9JIDwvbGk+IDxsaT4gVGF5bG9yIFN3aWZ0IGFuZCB0d28gY29sbGFib3JhdG9ycyBhcmUgcmVtb3ZlZCBmcm9tIEdyYW1teSBBbGJ1bSBPZiBUaGUgWWVhciBub21pbmVlIGNvbnRlbnRpb24gZm9yIE9saXZpYSBSb2RyaWdvJ3MgU291ciA8L2xpPiA8bGk+ICdJJ2xsIGJlIHBheWluZyBmb3IgaXQgZm9yIGEgbG9uZyB0aW1lJzogTWljaGFlbCBTaGVlbiByZXZlYWxzIGhlJ3MgdHVybmVkIGhpbXNlbGYgaW50byBhICdub3QtZm9yLXByb2ZpdCcgYWN0b3IgYWZ0ZXIgc2VsbGluZyBoaXMgbWFuc2lvbnMgPC9saT4gPGxpPiBDaHJpc3N5IFRlaWdlbiBiZWFtcyBhcyBzaGUgZmxhc2hlcyBoZXIgYWJzIGluIGZyYXllZCBwbGFpZCBzaGlydCBhbmQgc3BvcnRzIGJyYS4uLiBhZnRlciBzcGFya2luZyBjb250cm92ZXJzeSBieSBidXlpbmcgZW50aXJlIHJvdyBvZiBzZWF0c8KgYXQgdmF4LW9ubHkgUmFkaW8gQ2l0eSBNdXNpYyBIYWxsIDwvbGk+IDxsaT4gPGRpdiA+PGRpdiA+QWR2ZXJ0aXNlbWVudDwvZGl2PjwvZGl2PiA8L2xpPiA8bGk+IEVsbGllIEdvdWxkaW5nIHJlc2VtYmxlcyBhIGdsaXR0ZXJpbmcgQ2hyaXN0bWFzIGFuZ2VsIGluIHF1aXJreSB3aW5nZWQgZHJlc3MgYXMgc2hlIGF0dGVuZHMgNDR0aCBLZW5uZWR5IENlbnRlciBIb25vcnMgPC9saT4gPGxpPiBNYXJ0aW4gS2VtcCB0cmFuc2Zvcm1zIGludG8gRmF0aGVyIENocmlzdG1hcyBmb3IgZmVzdGl2ZSBmaWxtIGVuY291cmFnaW5nIHRoZSBwdWJsaWMgdG8gZ2V0IHZhY2NpbmF0ZWQgZm9yIENvdmlkLTE5IHRoaXMgd2ludGVyIDwvbGk+IDxsaT4gR29sZCBGSVJTVCBMT09LOiBaYWMgRWZyb24gcGxheXMgYSBkcmlmdGVyIHdobyBzdHVtYmxlcyBhY3Jvc3MgYSBnb2xkIG51Z2dldCBpbiB0aGUgQXVzdHJhbGlhbiBvdXRiYWNrIGluIGEgdHJhaWxlciBmb3IgU3RhbidzIGxhdGVzdCBvcmlnaW5hbCBmaWxtIDwvbGk+IDxsaT4gVG9tIEhvbGxhbmQgYW5kIFplbmRheWEgb3BlbiB1cCBhYm91dCB0aGVpciByZWxhdGlvbnNoaXA6ICdIYXZpbmcgYSBzaG91bGRlciB0byBjcnkgb24gaGFzIGJlZW4gYSBodWdlIHRoaW5nIGZvciB0aGUgcGFpciBvZiB1cycgPC9saT4gPGxpPiBUb28gSG90IFRvIEhhbmRsZSdzIE5pY29sZSBPJ0JyaWVuIGxvb2tzIHN0dW5uaW5nIGluIGEgYnVzdHkgZGVuaW0ganVtcHN1aXQgYXMgc2hlIHN0ZXBzIG91dCBmb3IgZGlubmVyIDwvbGk+IDxsaT4gRURFTiBDT05GSURFTlRJQUw6IERyZWFtIG9uLCAnU2lyJyBDb2xpbiEgVFYgd2hpc2t5IGJ1ZmYgaXNuJ3QgcmVhbGx5IGEga25pZ2h0IGF0IGFsbCBTaXIgQ29saW4gSGFtcGRlbi1XaGl0ZSBpcyBpbiBmYWN0LCBhIHBob3RvZ3JhcGhlciA8L2xpPiA8bGk+IFNlbGxpbmcgU3Vuc2V0IHN0YXIgQ2hyaXNoZWxsIFN0YXVzZSBjbGFyaWZpZXMgdGhhdCBzaGUgd2FzIG5vdCBib3JuIGF0IGEgU2hlbGwgZ2FzIHN0YXRpb246ICdJIGhhdGUgdG8gZGlzYXBwb2ludCBwZW9wbGUnIDwvbGk+IDxsaT4gJ0dvIGYqKiogeW91cnNlbGYnOiBSaWRsZXkgU2NvdHQgc2F5cyAnZioqKiB5b3UnIHRvIGpvdXJuYWxpc3Qgd2hvIHNhaWQgVGhlIExhc3QgRHVlbCBpcyAnbW9yZSByZWFsaXN0aWMnIHRoYW4gaGlzIHByZXZpb3VzIGZpbG1zIDwvbGk+IDxsaT4gQ29saW4gRmFycmVsbCwgNDUsIHNob3dzIG9mZiBoaXMgY2hpc2VsZWQgYm9keSBhcyBoZSBnb2VzIHNoaXJ0bGVzcyB3aGlsZSBtb2RlbGluZyBzb21lIHZlcnkgc2hvcnQgc2hvcnRzIGR1cmluZyBhIGpvZyBpbiBCZXZlcmx5IEhpbGxzIDwvbGk+IDxsaT4gSSdtIEEgQ2VsZWJyaXR5IDIwMjE6ICdJIGZlZWwgc28gc2VsZmlzaCc6IERhbm55IE1pbGxlciB0ZWFycyB1cCBhcyBoZSBtaXNzZXMgY2hhbmNlIHRvIHdpbiBEYXZpZCBHaW5vbGEgbGV0dGVyIGZyb20gZmFtaWx5IGR1cmluZyBXaS1GaSBjaGFsbGVuZ2UgLiA8L2xpPiA8bGk+IDxkaXYgPjxkaXYgPkFkdmVydGlzZW1lbnQ8L2Rpdj48L2Rpdj4gPC9saT4gPGxpPiBCZWhhdGkgUHJpbnNsb28gY3V0cyBhIGNvb2wgZmlndXJlIGFzIHNoZSBlbmpveXMgYSBsZWlzdXJlbHkgY3VwIG9mIGNvZmZlZSBiZWZvcmUgZG9pbmcgYSBsaXR0bGUgQ2hyaXN0bWFzIHNob3BwaW5nIGluIHRoZSBQYWxpc2FkZXMgVmlsbGFnZSA8L2xpPiA8bGk+IEFsZXNoYSBEaXhvbiAncGFydHMgd2F5cyB3aXRoIGhlciBtYW5hZ2VtZW50IHRvIGdvIGl0IGFsb25lIGFmdGVyIGJlaW5nIGluc3BpcmVkIGJ5IEhvbGx5IFdpbGxvdWdoYnkgYW5kIFJvY2hlbGxlIEh1bWVzJyA8L2xpPiA8bGkgPiBSaWhhbm5hIGdpdmVzIGEgZmxhc2ggb2YgaGVyIHR1bW15IGluIGNyb3AgdG9wIHdoaWxlIHRha2luZyBvZmYgaGVyIHB1ZmZ5IGNvYXQgb24gcm9tYW50aWMgbmlnaHQgb3V0IGluIE5ZQyB3aXRoIGJveWZyaWVuZCBBJEFQIFJvY2t5IDwvbGk+IDxsaT4gQlRTIGJveWJhbmRlcnMgam9pbiBJbnN0YWdyYW0uLi4gYW5kIFYgYnJlYWtzIHJlY29yZHMgYW1hc3NpbmfCoDE1LjZNIGZvbGxvd2VycyBpbiBsZXNzIHRoYW4gMjQgaG91cnMgPC9saT4gPGxpPiBDeW50aGlhIE5peG9uIHJldmVhbHMgc2hlIGhhcyB3cmFwcGVkIGZpbG1pbmcgaGVyIHNjZW5lcyBmb3IgQW5kIEp1c3QgTGlrZSBUaGF0Li4uIGFzIHNoZSBzaGFyZXMgcGhvdG9zIHdpdGggY3JldyBtZW1iZXJzIG9uIHRoZSBOWUMgc2V0IDwvbGk+IDxsaT4gU2hhbmluYSBTaGFpayBkYXp6bGVzIGluIGJsYWNrIHNlcXVpbm5lZCBnb3duIHdpdGggZHJhbWF0aWMgdHJhaW4gZGV0YWlsIGF0IEN5cmFubyBwcmVtaWVyZSBpbiBTYXVkaSBBcmFiaWEgPC9saT4gPGxpPiBJJ20gQSBDZWxlYnJpdHk6IExvdWlzZSBNaW5jaGluIGFuZCBLYWRlZW5hIENveCBmYWNlIGRvd24gc25ha2VzIGFuZCBjb2Nrcm9hY2hlcyBpbiBncnVlc29tZSBDcml0dGVyLWNhbCBDYWdlcyB0cmlhbCB0byBiYWcgMTAgc3RhcnMgPC9saT4gPGxpPiBTYWRpZSBGcm9zdCBhbmQgRG9ubmEgQWlyIHRha2UgdG8gdGhlIHN0YWdlIGZvciBjaGFyaXR5IHBsYXkgcmFpc2luZyBhd2FyZW5lc3Mgb2YgZG9tZXN0aWMgYWJ1c2UgPC9saT4gPGxpPiBKZW5uaWZlciBMYXdyZW5jZSBzaGFyZXMgdGhlIHN0YXIgd2hvIG1vc3QgaW1wcmVzc2VkIGhlciBvbiB0aGUgc2V0IG9mIERvbid0IExvb2sgVXAgd2FzIEFyaWFuYSBHcmFuZGUuLi4gZXZlbiB0aG91Z2ggTWVyeWwgU3RyZWVwIGFuZCBMZW9uYXJkbyBEaUNhcHJpbyB3ZXJlIGluIGZpbG0gPC9saT4gPGxpPiBSZWQgSG90IENoaWxpIFBlcHBlcnMgYmFzc2lzdCBGbGVhIHF1aWV0bHkgYXJyaXZlcyBpbiBTeWRuZXkgYmVmb3JlIGdvaW5nIGNsb3RoZXMgc2hvcHBpbmcgaW4gUGFkZGluZ3RvbiB3aXRoIHdpZmXCoE1lbG9keSBFaHNhbmkgPC9saT4gPGxpPiA8ZGl2ID48ZGl2ID5BZHZlcnRpc2VtZW50PC9kaXY+PC9kaXY+IDwvbGk+IDxsaT4gU3RyaWN0bHkgQ29tZSBEYW5jaW5nIGp1ZGdlcyByZXZlYWwgdGhlaXIgQ2hyaXN0bWFzIHRyYWRpdGlvbnMgd2l0aCBNb3RzaSBNYWJ1c2UgYWRtaXR0aW5nIHNoZSBzdGFydHMgZ2V0dGluZyBmZXN0aXZlIGluIFNFUFRFTUJFUiA8L2xpPiA8bGk+IFZpbmNlbnQgQ2Fzc2VsLCA1NSwgY3V0cyBhIGRhcHBlciBmaWd1cmUgYXMgaGUgcG9zZXMgd2l0aCBnbGFtb3JvdXMgbW9kZWwgd2lmZSBUaW5hIEt1bmFrZXksIDI0LCBhdCB0aGUgZ2xpdHp5IEN5cmFubyBwcmVtaWVyZSBpbiBTYXVkaSBBcmFiaWEgPC9saT4gPGxpPiBTeWx2ZXN0ZXIgU3RhbGxvbmUncyBpY29uaWMgbW92aWUgbWVtb3JhYmlsaWEgc2VsbHMgYmlnIGF0IGF1Y3Rpb24gd2l0aCBoaXMgb3JpZ2luYWwgaGFuZHdyaXR0ZW4gUm9ja3kgc2NyaXB0IG5vdGVzIGZldGNoaW5nIGEga25vY2tvdXQgJDQzNyw1MDAgPC9saT4gPGxpPiBJJ20gQSBDZWxlYnJpdHkgMjAyMTogTmF1Z2h0eSBCb3kgaXMgbGVmdCBpbiB0ZWFycyBhcyBoZSByZWNlaXZlcyBhIGxldHRlciBmcm9tIGhpcyBzaXN0ZXIgYW5kIG5pZWNlIC0gd2l0aCBlbW90aW9ucyBydW5uaW5nIGhpZ2ggYXMgdGhlIGNhbXBtYXRlcyBoZWFyIGZyb20gbG92ZWQgb25lcyA8L2xpPiA8bGk+IE1hbmR5IE1vb3JlIGNlbGVicmF0ZXMgaGVyIGZhdGhlcidzIGxhc3QgZmxpZ2h0IGFzIGEgcGlsb3QgZm9sbG93aW5nIGEgNDIteWVhci1sb25nIGNhcmVlci4uLiBhcyB0aGUgYWN0cmVzcyBtYXJrcyB0aGUgbWlsZXN0b25lIHdpdGggc3dlZXQgc25hcHMgPC9saT4gPGxpPiBIb21lcyBVbmRlciBUaGUgSGFtbWVyIHN0YXIgTWFydGluIFJvYmVydHMgZGVkaWNhdGVzIGhpcyB1cGNvbWluZyBhcHBlYXJhbmNlIG9uIFRoZSBSZWFsIEZ1bGwgTW9udHkgdG8gaGlzIGxhdGUgZnJpZW5kIERhdmUgSHVnaGVzIDwvbGk+IDxsaT4gSGFycnkgUG90dGVyIFJldW5pb24gRklSU1QgTE9PSzogVGhlIERhaWx5IFByb3BoZXQgcmVwb3J0cyBIb2d3YXJ0cyByZXR1cm4sIEhhZ3JpZCBhbmQgTmV2aWxsZSByZWNlaXZlIHRoZWlyIGludml0ZXMgYW5kIGEgcGVlayBhdCBIZXJtaW9uZSBpbiB0cmFpbGVyIDwvbGk+IDxsaT4gUHJvdWQgbXVtIFBlcnJpZSBFZHdhcmRzIHNoYXJlcyBzd2VldCBmZXN0aXZlIGNsaXAgb2YgYmFieSBzb24gQXhlbCB0YWtpbmcgaGlzIGZpcnN0IHN0ZXBzIGFmdGVyIGFubm91bmNpbmcgTGl0dGxlIE1peCBzcGxpdCA8L2xpPiA8bGk+IEFsaWNlIEV2YW5zLCA1MywgY3V0cyBhIGxvdy1rZXkgZmlndXJlIGFzIHNoZSBzdGVwcyBvdXQgaW4gTG9zIEFuZ2VsZXMuLi4gYWZ0ZXIgZXN0cmFuZ2VkIGh1c2JhbmQgSW9hbiBHcnVmZnVkZCwgNDgsIG1hZGUgaGlzIGZpcnN0IHB1YmxpYyBhcHBlYXJhbmNlIHdpdGggbmV3IGdpcmxmcmllbmQgPC9saT4gPGxpPiBWYW5kZXJwdW1wIFJ1bGVzIHN0YXIgUmFxdWVsIExldmlzcyBwYWNrcyBoZXIgYmFncyBhbmQgbW92ZXMgb3V0IG9mIHRoZSBhcGFydG1lbnQgc2hlIHNoYXJlZCB3aXRoIGV4IEphbWVzIEtlbm5lZHkgYWZ0ZXIgYW5ub3VuY2luZyBzcGxpdCA8L2xpPiA8bGk+IDxkaXYgPjxkaXYgPkFkdmVydGlzZW1lbnQ8L2Rpdj48L2Rpdj4gPC9saT4gPGxpPiBKQU5FVCBTVFJFRVQtUE9SVEVSOiBBIGZhbmN5LWRyZXNzIHBob3RvY2FsbCBhbmQgaGFyYXNzaW5nIGEgZmV3IG1pZGRsZS1jbGFzcyBoZWRvbmlzdHMgbWF5IGdldCBCb3JpcyBzb21lIGdvb2QgaGVhZGxpbmVzIGJ1dCBpdCB3aWxsIGRvIG5vdGhpbmcgdG8gaGVscCB0aGUgMzAwLDAwMCBhZGRpY3RzIDwvbGk+IDxsaT4gQ2FuZGljZSBTd2FuZXBvZWwgbG9va3MgaW5jcmVkaWJsZSBpbiB3aGl0ZSBnb3duIGFzIHNoZSBqb2lucyBIaWxhcnkgU3dhbmsgYW5kIEFsZXNzYW5kcmEgQW1icm9zaW8gYXQgc3Rhci1zdHVkZGVkIHByZW1pZXJlIG9mIEN5cmFubyBpbiBTYXVkaSBBcmFiaWEgPC9saT4gPGxpPiBFYXN0RW5kZXJzJyBSaWNreSBDaGFtcCBpcyAnaG9ub3VyZWQnIHRvIGJlIHRydXN0ZWQgd2l0aCBoaXMgbGF0ZXN0IHN0b3J5bGluZSAtIHdoaWNoIHNlZXMgaGlzIGNoYXJhY3RlciBTdHVhcnQgSGlnaHdheSBkaWFnbm9zZWQgd2l0aCBicmVhc3QgY2FuY2VyIDwvbGk+IDxsaT4gUkhPTkogc3RhciBUZXJlc2EgR2l1ZGljZSwgNDksIHBvc2VzIHdpdGggdGhlIHN0dW5uaW5nIGxvb2thbGlrZSBkYXVnaHRlcnMgc2hlIHNoYXJlcyB3aXRoIGV4LWh1c2JhbmQgSm9lIEdpdWRpY2U6wqAnQWxsIDQgb2YgeW91IG1ha2UgbWUgc28gcHJvdWQnIDwvbGk+IDxsaT4gS2ltIEthcmRhc2hpYW4gc2l6emxlcyBpbiBwaW5rIGFzIHNoZSBhbm5vdW5jZXMgc2Vjb25kIGRyb3AgZm9yICdncm91bmRicmVha2luZycgU0tJTVMgY29sbGFib3JhdGlvbiB3aXRoIEZlbmRpLi4uIGFmdGVyIGZpcnN0IGRyb3Agc29sZCBvdXQgaW4gT05FIG1pbnV0ZSA8L2xpPiA8bGk+IE1hdXJhIEhpZ2dpbnMgbG9va3MgaW5jcmVkaWJsZSBpbiBwb2xrYSBkb3QgbWluaSBkcmVzcyBhcyBzaGUgcG9zZXMgZm9yIHN0dW5uaW5nIGJlYWNoIHNuYXBzIGZyb20gaGVyIHRyaXAgdG8gdGhlIE1hbGRpdmVzIDwvbGk+IDxsaT4gRHJha2Ugd2l0aGRyYXdzIGhpcyB0d28gR3JhbW15IG5vbWluYXRpb25zwqBmb3IgQmVzdCBSYXAgQWxidW0gYW5kIEJlc3QgUmFwIFBlcmZvcm1hbmNlIC4uLiBhZnRlciBoZSBzbGFtbWVkIHRoZSBSZWNvcmRpbmcgQWNhZGVteSA8L2xpPiA8bGk+IElvYW4gR3J1ZmZ1ZGQncyBuZXcgZ2lybGZyaWVuZCBCaWFuY2EgV2FsbGFjZSByZXR1cm5zIHRvIEluc3RhZ3JhbSBhZnRlciBtYWtpbmcgaGVyIGZpcnN0IGFwcGVhcmFuY2Ugd2l0aCBzdGFyLi4uIGFzIGhpcyBlc3RyYW5nZWQgd2lmZSBBbGljZSBicnVzaGVzIG9mZiByb21hbmNlIDwvbGk+IDxsaT4gSmFyZWQgTGV0byByb2NrcyBHdWNjaSBib3R0b21zIHdpdGggYSBULXNoaXJ0IHdoaWxlIHN0ZXBwaW5nIG91dCBpbiBNaWFtaSBCZWFjaC4uLiBhcyBoaXMgZmlsbSBIb3VzZSBvZiBHdWNjaSB0YWtlcyB0aGUgdGhpcmQgc3BvdCBpbiB3ZWVrZW5kIGJveCBvZmZpY2Ugcm91bmR1cCA8L2xpPiA8bGk+IExld2lzIEhhbWlsdG9uIGhhbmRlZCBib29zdCBpbiBiaWQgdG8gbGFuZCBTUE9UWSBoYXQtdHJpY2sgYWZ0ZXIgQkJDIGRlbGF5IHJldmVhbGluZyBzaG9ydGxpc3QgZm9yIHByZXN0aWdpb3VzIGF3YXJkIHVudGlsIEYxIHRpdGxlIGlzIGRlY2lkZWQgPC9saT4gPGxpPiBFbWlseSBSYXRhamtvd3NraSBicmluZ3MgdGhlIENocmlzdG1hcyBjaGVlciBpbiBhIHJlZCBzd2ltc3VpdCB0aGF0IG1ha2VzIHRoZSBtb3N0IG9mIGhlciB0b25lZCBib2R5Li4uIDkgbW9udGhzIGFmdGVyIHdlbGNvbWluZyBoZXIgZmlyc3QgY2hpbGQgPC9saT4gPGxpPiBTaGFuZyBDaGkgc2VxdWVsIG9mZmljaWFsbHkgZ3JlZW5saXQgd2l0aCBEZXN0aW4gRGFuaWVsIENyZXR0b24gcmV0dXJuaW5nIHRvIGRpcmVjdDogJ0kgY291bGRuJ3QgYmUgbW9yZSBleGNpdGVkIScgPC9saT4gPGxpPiBDaHJpcyBOb3RoIGhhZCBubyBpZGVhIGhpcyBBbmQgSnVzdCBMaWtlIFRoYXQgY28tc3RhciBXaWxsaWUgR2Fyc29uIGhhZCBjYW5jZXI6ICdNb3N0IG9mIHVzIGRpZG4ndCBrbm93JyA8L2xpPiA8bGk+IENyaXRpY3MgQ2hvaWNlIEF3YXJkcyBUViBub21pbmF0aW9uczogU3VjY2Vzc2lvbiBsZWFkcyB3aXRoIGVpZ2h0IG5vZHMgYXPCoE1hcmUgT2YgRWFzdHRvd24gYW5kIEV2aWwgZ2V0IGZpdmUgZWFjaCA8L2xpPiA8bGk+IElnZ3kgQXphbGVhIHNlbmRzIGEgbWVzc2FnZSB0byAnYWxsIHRoZSBzaW5nbGUgcGFyZW50cyB0aGlzIENocmlzdG1hcycgYWZ0ZXIgcmV2ZWFsaW5nIHNoZSdzIGtlZW4gdG8gZmluZCBsb3ZlIGFnYWluIGZvbGxvd2luZyBoZXIgc3BsaXQgd2l0aCBoZXIgc29uIE9ueXgncyBmYXRoZXIgPC9saT4gPGxpPiBXaWxsZW0gRGFmb2UgdGVhc2VzIEdyZWVuIEdvYmxpbiBoYXMgJ21vcmUgdHJpY2tzIHVwIGhpcyBzbGVldmUnIHdpdGggdXBncmFkZWQsICdtb3JlIGZsZXhpYmxlJyBjb3N0dW1lIGluIFNwaWRlci1NYW46IE5vIFdheSBIb21lIDwvbGk+IDxsaT4gRktBIHR3aWdzIHdvd3MgaW4gZHJhbWF0aWMgb3JhbmdlIGhvb2RlZCBnb3duIGFzIHNoZSBhdHRlbmRzIGdsaXR0ZXJpbmcgVGhlIEtpbmcncyBNYW4gcHJlbWllcmUgaW4gTG9uZG9uIDwvbGk+IDxsaT4gTGlsIE5hcyBYIGdhdGhlcnMgY2VsZWJyaXR5IGZyaWVuZHMgaW5jbHVkaW5nIEF2cmlsIExhdmlnbmUgYW5kIEphY2sgSGFybG93IGZvciBpY29uaWMgVGlrVG9rIGNsaXAgYWZ0ZXIgYWNjZXB0aW5nIFZhcmlldHkgYXdhcmQgPC9saT4gPGxpPiBPbmx5IEZvb2xzIEFuZCBIb3JzZXMgYWN0b3IgQmVuamFtaW4gU21pdGggbG9va3MgdW5yZWNvZ25pc2FibGUgMjAgeWVhcnMgb24gZnJvbSBoaXMgZGVidXQgYXMgRGFtaWVuIFRyb3R0ZXIgaW4gYmVsb3ZlZCBzaXRjb20gPC9saT4gPGxpPiAnUHJpdmlsZWdlZCcgUHJpbmNlIEhhcnJ5IGlzIFNMQU1NRUQgb24gc29jaWFsIG1lZGlhIGZvciBzYXlpbmcgdGhhdCBsZWF2aW5nIHlvdXIgam9iIHdpbGwgYm9sc3RlciAnbWVudGFsIGhlYWx0aCBhd2FrZW5pbmcnIGR1cmluZyBuZXcgaW50ZXJ2aWV3IHRvIHBsYXllZCBzdGFydHVwIDwvbGk+IDxsaT4gSm9lIEdvcmdhIGlzIHB1bGxlZCBvZmYgdGhlIHN0YWdlIGJ5IGhpcyB3aWZlIE1lbGlzc2EgYXMgaGUgY29tcGxldGVseSBib21icyBzdGFuZC11cCByb3V0aW5lIGFmdGVyIHRha2luZyBjb21iaW5hdGlvbiBvZiBTdWRhZmVkIGFuZCBhbGNvaG9sIDwvbGk+IDxsaT4gREFOIFdPT1RUT046IEEgd2FybmluZyB0byB0aGUgdW53YXJ5OyBkb24ndCBxdWl0IHlvdXIgam9iIGxpa2UgaG9saWVyLXRoYW4tdGhvdSBIYXJyeSBhZHZpc2VzIHVubGVzcyBTaWxpY29uIFZhbGxleSdzIHdva2VyYXRpIGFyZSBsaW5pbmcgdXAgdG8gdGhyb3cgbWlsbGlvbnMgYXQgeW91IGZvciBkb2luZyBub3RoaW5nIHRvbyA8L2xpPiA8bGk+IFRoZSBNYXRyaXggUmVzdXJyZWN0aW9ucycgc2Vjb25kIHRyYWlsZXIgdW52ZWlscyBKYWRhIFBpbmtldHQgU21pdGggaW4gb2xkIGFnZSBtYWtlLXVwIGFzIE5pb2JlIDwvbGk+IDxsaT4gQmVja3kgSGlsbCBmbGF1bnRzIGhlciBhYnMgaW4gc2VxdWlubmVkIHB1cnBsZSBzaGlydCBhcyBzaGUgam9pbnMgV2VzIE5lbHNvbiB0byBmaWxtIFRvcCBvZiB0aGUgUG9wcyBDaHJpc3RtYXMgc3BlY2lhbCA8L2xpPiA8bGk+IExpdHRsZSBQZW9wbGUsIEJpZyBXb3JsZCBzdGFyIEphY29iIFJvbG9mZiBhbm5vdW5jZXMgaGlzIHdpZmUgSXNhYmVsIFJvbG9mZiBoYXMgZ2l2ZW4gYmlydGggdG8gdGhlaXIgZmlyc3QgY2hpbGQsIGEgYmFieSBib3kgPC9saT4gPGxpPiBDYXJkaSBCIHNpenpsZXMgaW4gcmFjeSBsYWNlLXVwIGp1bXBzdWl0IGZvciB0aGUgbGF1bmNoIG9mIGhlciBuZXcgYWxjb2hvbCBpbmZ1c2VkIHdoaXBwZWQgY3JlYW0gbGluZSBpbiBNaWFtaSA8L2xpPiA8bGk+IERvY3RvciBXaG8gZmFucyBsZWZ0IHNob2NrZWQgYWZ0ZXIgSm9kaWUgV2hpdHRha2VyJ3MgVGltZSBMb3JkIG1ha2VzIFBBVUwgSE9MTFlXT09EIEdCQk8gaGFuZHNoYWtlIHJlZmVyZW5jZSBpbiBGbHV4IGZpbmFsZSA8L2xpPiA8bGk+IEdlb3JnaWEgVG9mZm9sbyBjb21tYW5kcyBhdHRlbnRpb24gaW4gYSBnb2xkIGhhbHRlcm5lY2sgZHJlc3MgYXMgc2hlIG1ha2VzIGEgZ2xhbW9yb3VzIGFwcGVhcmFuY2UgYXQgQ2lnYXIgU21va2VyIE9mIFRoZSBZZWFyIGV2ZW50IDwvbGk+IDxsaT4gU3RyaWN0bHkncyBEYW4gV2Fsa2VyIHBvc2VzIHdpdGggZ2xhbW9yb3VzIGRhbmNlIHBhcnRuZXIgTmFkaXlhIEJ5Y2hrb3ZhIGF0IEl0IFRha2VzIFR3byBhcyB0aGV5IGFyZSBzZWVuIHRvZ2V0aGVyIGZvciB0aGUgZmlyc3QgdGltZSBzaW5jZSB0aGVpciBlbW90aW9uYWwgZWxpbWluYXRpb24gPC9saT4gPGxpID4gRVhDTFVTSVZFOiBFdmFuIFJhY2hlbCBXb29kIGNsYWltcyBNYXJpbHluIE1hbnNvbiB0aHJlYXRlbmVkICd0byBmKiprJyBoZXIgZWlnaHQteWVhci1vbGQgc29uIGFuZCAnZGVzdHJveScgdGhlIGZhbWlsaWVzIG9mIGhpcyBvdGhlciBhbGxlZ2VkIHZpY3RpbXMgPC9saT4gPGxpPiBDbGF1ZGlhIFNjaGlmZmVyLCA1MSwgd293cyBpbiBwZWFybC1lbWJlbGxpc2hlZCBnb3duIGpvaW5zIGRpcmVjdG9yIGh1c2JhbmQgTWF0dGhldyBWYXVnaG4sIDUwLCBmb3IgcmFyZSByZWQgY2FycGV0IGFwcGVhcmFuY2UgYXQgdGhlIFRoZSBLaW5nJ3MgTWFuIHByZW1pZXJlIDwvbGk+IDxsaT4gQWFyb24gQ2FydGVyICdpcyBiYWNrIG9uJyB3aXRoIG9uL29mZiBmaWFuY2VlIE1lbGFuaWUgTWFydGluIGFzIGhlICdndXNoZXMnIGFib3V0IGhlciBhbmQgdGhlaXIgbmV3Ym9ybiBzb24gb24gaGlzIG5vdy1kZWxldGVkIEluc3RhZ3JhbS4uLiBqdXN0IGRheXMgYWZ0ZXIgdGhlaXIgbWVzc3kgc3BsaXQgPC9saT4gPGxpPiBCb2RlIE1pbGxlciBhbmQgd2lmZSBNb3JnYW4gcmV2ZWFsIHRoZXkndmUgd2VsY29tZWQgYSBiYWJ5IGdpcmwgaW4gYSBob21lIGJpcnRoIC0gdGhyZWUgYW5kIGEgaGFsZiB5ZWFycyBhZnRlciB0cmFnaWMgZHJvd25pbmcgZGVhdGggb2YgdGhlaXIgZGF1Z2h0ZXIgRW1teSA8L2xpPiA8bGk+IENhbmRpY2UgU3dhbmVwb2VsIGlzIGEgc21vbGRlcmluZyBiaWtpbmktY2xhZCBzYWlsb3IgYXMgc2hlIHByb21vdGVzIGhlciBzd2ltd2VhciBsaW5lIFRyb3BpYyBPZiBDOsKgJ1NhaWwgYXdheSB3aXRoIG1lJyA8L2xpPiA8bGk+IENocmlzIFBpbmUga2VlcHMgaXQgY2FzdWFsIGluIGEgZGVuaW0gamFja2V0IG92ZXIgYSBncmF5IHNoaXJ0IGFuZCBtYXRjaGluZyBqZWFucyBhcyBoZSBnb2VzIG9uIGEgc29sbyBjb2ZmZWUgcnVuIG5lYXIgaGlzIGhvbWUgaW4gTG9zIEZlbGl6IDwvbGk+IDxsaT4gRHVnZ2FyIGZhbWlseSBmcmllbmQgYnJlYWtzIGRvd24gaW4gdGVhcnMgd2hpbGUgZGVzY3JpYmluZyBob3cgMTUteWVhci1vbGQgSm9zaCBEdWdnYXIgY29uZmVzc2VkIHRvIG1vbGVzdGluZyBmb3VyIG9mIGhpcyB5b3VuZyBzaXN0ZXJzIG92ZXIgdGhlIHllYXJzIDwvbGk+IDxsaT4gRGF2ZSBDaGFwZWxsZSBSRVRVUk5TIHRvIE5ldGZsaXggZGVzcGl0ZSBiZWluZyAnY2FuY2VsbGVkJyBhZnRlciBmdXJpb3VzIGJhY2tsYXNoIG92ZXIgdHJhbnNnZW5kZXIgY29tbWVudHMgaW4gaGlzIHNwZWNpYWwgVGhlIENsb3NlciA8L2xpPiA8bGk+IEpvaG4gTXVsYW5leSBhbm5vdW5jZXMgRnJvbSBTY3JhdGNoIHRvdXIuLi4gYXMgY29tZWRpYW4gaGl0cyB0aGUgcm9hZCBmb3IgZmlyc3QgdGltZSBzaW5jZSBkaXZvcmNlIGFuZCBiYWJ5IGFubm91bmNlbWVudCB3aXRoIE9saXZpYSBNdW5uIDwvbGk+IDxsaT4gT2Zjb20gQ0xFQVJTIExCQyByYWRpbyBob3N0IFN0ZXZlIEFsbGVuIG9mIGJyZWFjaGluZyBicm9hZGNhc3Rpbmcgc3RhbmRhcmRzIGFmdGVyIGhlIGNhbGxlZCBHb3Jkb24gUmFtc2F5J3MgU3RyaWN0bHkgc3RhciBkYXVnaHRlciBUaWxseSBhICdjaHViYnkgbGl0dGxlIHRoaW5nJyA8L2xpPiA8bGk+ICdJJ20gbm90IHN1cmUgaWYgaXQncyBlYXNpZXIgaW4gdGhlIGNhc3RsZSBvciBoZXJlIScgV2F5bmUgQnJpZGdlIGFkbWl0cyBoZSdzICdtZXNzZWQgdXAgYSBmZXcgdGltZXMnIHdoaWxlIGxvb2tpbmcgYWZ0ZXIgc29ucyBpbiBGcmFua2llJ3MgSUFDIHN0aW50IDwvbGk+IDxsaT4gJ0l0J3Mgbm90IHBhcnQgb2YgdGhlIGpvYiByZXF1aXJlbWVudCcgUmViZWNjYSBBZGxpbmd0b24gc2xhbXMgY3J1ZWwgdHJvbGxzIHdobyBjcml0aWNpc2VkIGhlciBsb29rcyBkdXJpbmcgaGVyIHRpbWUgYXMgYW4gT2x5bXBpYyBzd2ltbWVyIDwvbGk+IDxsaT4gRmVhcm5lIENvdHRvbiByZXZlYWxzIGhvdyB0aGUgcGFuZGVtaWMgaGFzIGltcGFjdGVkIGhlciBsb3ZlIGxpZmUgYXMgc2hlIHNheXMgaGVyIGJvb2JzIGFyZSAnZGVmbGF0ZWQnIGFuZCBhZG1pdHMgc2hlIG1pc3NlcyBoZXIgJ2JpZyBtaWxreSB0KnRzJyA8L2xpPiA8bGkgPiBMYXN0IG9yZGVycyEgRW1tZXJkYWxlIGZpcmUgbGVhdmVzIGljb25pYyBwdWIgVGhlIFdvb2xwYWNrIGNsb3NlZCBmb3IgYnVzaW5lc3MgYXMgaW1hZ2VzIHJldmVhbCBjaGFycmVkIGJyaWNrd29yayBhbmQgYm9hcmRlZCB3aW5kb3dzIDwvbGk+IDxsaT4gRmVlbGluZyBmZXN0aXZlISBDcm93biBQcmluY2VzcyBWaWN0b3JpYSBvZiBTd2VkZW4gZGF6emxlcyBpbiBhIHNwYXJrbHkgc2VxdWluIHR3by1waWVjZSBkdXJpbmcgc2Vjb25kIGRheSBvZiB3aGlybHdpbmQgdmlzaXQgdG8gUGFyaXMgPC9saT4gPGxpPiBDb2xlZW4gYW5kIFdheW5lIFJvb25leSBzcGxhc2ggb3V0ICfCozEwLDAwMCBvbiBDaHJpc3RtYXMgZGVjb3JhdGlvbnMnIGZvciB0aGVpciDCozIwbSBtYW5zaW9uIGluIENoZXNoaXJlIDwvbGk+IDxsaT4gSnVzc2llIFNtb2xsZXR0IHRlc3RpZmllcyB0aGF0IGhlIGhhZCBiZWVuIHRvIGdheSBiYXRoaG91c2VzLCBkb25lIGRydWdzIGFuZCAnbWFzdHVyYmF0ZWQgdG9nZXRoZXInIHdpdGggb25lIG9mIHRoZSB0d28gTmlnZXJpYW4gYnJvdGhlcnMgPC9saT4gPGxpPiBDaHJpc3N5IFRlaWdlbiBhbmQgSm9obiBMZWdlbmQgYnV5IG91dCBlbnRpcmUgcm93IGF0IE5ZQydzIHZheCBvbmx5IFJhZGlvIENpdHkgTXVzaWMgSGFsbCAndG8gYXZvaWQgY3Jvd2RzIGFuZCBvbmxvb2tlcnMnIDwvbGk+IDwvdWw+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGgyID5OZXh0IHN0b3J5PC9oMj4gPHAgPiBGdXJpb3VzIFRvcmllcyBzbGFtIERvbWluaWMgUmFhYiBvdmVyICdzaGFtZWZ1bCcgQWZnaGFuaXN0YW4gZGViYWNsZSBhcyBoZSBkaXNtaXNzZXMgZGFtbmluZyBldmlkZW5jZSBmcm9tIHdoaXN0bGVibG93ZXIgc2F5aW5nIHRob3VzYW5kcyBvZiBlbWFpbHMgd2VudCB1bnJlYWQgYW5kIEFmZ2hhbnMgd2VyZSBsZWZ0IHRvIGRpZSB3aGlsZSBXRkggY2l2aWwgc2VydmFudHMgcmVmdXNlZCB0byBkbyBvdmVydGltZSA8L3A+IDxkaXYgPiA8dWwgPiA8bGkgPiAyLjVrIGNvbW1lbnRzIDwvbGk+IDxsaSA+IDQgdmlkZW9zIDwvbGk+IDwvdWw+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+TkVXIEFSVElDTEVTSG9tZVRvcCA8ZGl2ID5TaGFyZTwvZGl2PiA8L2Rpdj4gPC9kaXY+PGRpdiA+IDx1bCA+IDxsaSA+IEJhY2sgdG8gdG9wIDwvbGk+IDwvdWw+IDxkaXYgPiA8dWwgPiA8bGkgPiBIb21lIDwvbGk+IDxsaSA+IE5ld3MgPC9saT4gPGxpID4gVS5TLiA8L2xpPiA8bGkgPiBTcG9ydCA8L2xpPiA8bGkgPiBUVlNob3diaXogPC9saT4gPGxpID4gQXVzdHJhbGlhIDwvbGk+IDxsaSA+IEZlbWFpbCA8L2xpPiA8bGkgPiBIZWFsdGggPC9saT4gPGxpID4gU2NpZW5jZSA8L2xpPiA8bGkgPiBNb25leSA8L2xpPiA8bGkgPiBWaWRlbyA8L2xpPiA8bGkgPiBUcmF2ZWwgPC9saT4gPGxpID4gQmVzdCBCdXlzIDwvbGk+IDxsaSA+IERpc2NvdW50cyA8L2xpPiA8L3VsPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiBTaXRlbWFwIEFyY2hpdmUgVmlkZW8gQXJjaGl2ZSBUb3BpY3MgSW5kZXggTW9iaWxlIEFwcHMgU2NyZWVuc2F2ZXIgUlNTIFRleHQtYmFzZWQgc2l0ZSBSZWFkZXIgUHJpbnRzIE91ciBQYXBlcnMgVG9wIG9mIHBhZ2UgRGFpbHkgTWFpbCBNYWlsIG9uU3VuZGF5IFRoaXMgaXMgTW9uZXkgTWV0cm8gSm9ic2l0ZSBNYWlsIFRyYXZlbCBab29wbGEuY28udWsgUHJpbWUgTG9jYXRpb24gPC9kaXY+IDxkaXYgPiA8cD5QdWJsaXNoZWQgYnkgQXNzb2NpYXRlZCBOZXdzcGFwZXJzIEx0ZDwvcD4gPHA+UGFydCBvZiB0aGUgRGFpbHkgTWFpbCwgVGhlIE1haWwgb24gU3VuZGF5IE1ldHJvIE1lZGlhIEdyb3VwPC9wPiBkbWcgbWVkaWEgQ29udGFjdCB1cyBIb3cgdG8gY29tcGxhaW4gTGVhZGVyc2hpcCBUZWFtIEFkdmVydGlzZSB3aXRoIHVzIENvbnRyaWJ1dG9ycyBUZXJtcyBEbyBub3Qgc2VsbCBteSBpbmZvIFByaXZhY3kgcG9saWN5IGNvb2tpZXMgPC9kaXY+IDwvZGl2PjxkaXYgPjxkaXYgPkFkdmVydGlzZW1lbnQ8L2Rpdj4gPC9kaXY+PGRpdiA+PGRpdiA+PHNwYW4gPkFkdmVydGlzZW1lbnQ8L3NwYW4+PC9kaXY+IDwvZGl2PiA8L2Rpdj48L2JvZHk+","title":"60","article":"78"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fhealth%2Farticle-10281223%2FWhy-massage-help-repair-muscles-faster.html","text":"","title":"67","article":"82"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fhealth%2Farticle-10281357%2FDR-JONATHAN-DARROW-drug-labelled-say-actually-works.html","text":"","title":"67","article":"83"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fhealth%2Farticle-10281219%2FDR-MARTIN-SCURR-answers-health-questions.html","text":"","title":"67","article":"83"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fhealth%2Farticle-10281201%2FEveryone-froze-Chris-47-began-choking-known-save-life.html","text":"","title":"67","article":"85"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Ffemail%2Farticle-10200299%2FThis-life-changing-gift-help-loved-ones-track.html","text":"","title":"70","article":"86"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Ffemail%2Farticle-10170637%2FThe-vital-facts-need-know-vitamins-pregnancy.html","text":"","title":"70","article":"87"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Ffemail%2Farticle-10251901%2F10-tips-minute-Christmas-gifting-guaranteed-impress.html","text":"","title":"70","article":"89"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Ffemail%2Farticle-10178443%2FTHIS-delicious-supplement-secret-feeling-fabulous-Christmas.html","text":"","title":"70","article":"92"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fbest-buys%2Fdorma-bedding-at-dunelm","text":"","title":"77","article":"93"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fbest-buys%2Fgeorge-at-asda-4-in-padded-coat-tik-tok","text":"","title":"77","article":"93"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fbest-buys%2Fkate-middleton-inspired-gilets","text":"","title":"77","article":"93"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fbest-buys%2Fhotel-chocolat-velvetiser-review","text":"","title":"77","article":"94"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fbest-buys%2Fdyson-airwrap-complete-long-review","text":"","title":"77","article":"94"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fbest-buys%2Fhow-to-buy-laptop","text":"","title":"77","article":"94"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Ffemail%2Farticle-10246599%2FGive-woman-life-gift-shell-LOVE-year.html","text":"","title":"70","article":"96"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Ffemail%2Farticle-10256537%2FJoJo-Siwa-counts-Kardashians-fans-starred-DWTS-reveals-whats-next.html","text":"","title":"70","article":"98"}
{"url":"https%3A%2F%2Fwww.dailymail.co.uk%2Fnews%2Farticle-10259501%2FMarilyn-Manson-threatened-Evan-Rachel-Woodss-son-actress-claims.html","text":"","title":"70","article":"106"}
