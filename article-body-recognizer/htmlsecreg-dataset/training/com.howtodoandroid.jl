{"url":"https%3A%2F%2Fhowtodoandroid.com%2Fmvvm-kotlin-coroutines-retrofit%2F","text":"<body > <amp-auto-ads > </amp-auto-ads> <div > <a >Skip to content</a> <header > <div > <div > <div > <div > <p ><a >Howtodoandroid</a></p> <p >Learn android by examples</p> </div> </div> </div> </div>  <div > <div ><ul ><li ><a >Kotlin</a></li> <li ><a >Jetpack Compose</a></li> <li ><a >Material Design</a></li> <li ><a >Library</a></li> <li ><a >Jetpack</a></li> <li ><a >Recyclerview</a></li> <li ><a >About</a></li> </ul></div> </div> </header> <div > <div > <div > <main > <article > <div > Kotlin</div> <header > <h1 >MVVM with Kotlin Coroutines and Retrofit [Example]</h1><div > by Velmurugan<span ><a ><time >June 1, 2021</time><time >November 9, 2021</time></a></span></div> </header> <div > <p>Coroutines are a neat new feature of the Kotlin language that allow us to write asynchronous code in a more idiomatic way. — This also means you can write asynchronous code the same way you would normally write synchronous code in your project.</p> <p>Already, I have explained MVVM in detail in another post. Please check that for a better understanding of MVVM. in this post, I am focusing on coroutines and retrofit working together.</p> <p>MVVM With Retrofit and Recyclerview in Kotlin [Example]</p> <p>before getting started to learn more about kotlin, Please check</p> <p>Beginning Android Development with Kotlin</p> <p>Kotlin High Order Functions and Lambdas Explained</p> <p>Kotlin Coroutines for Android Development</p> <p>Kotlin Scope Functions Explained [Example]</p> <p>koin | Dependency Injection In Android</p> <p> Ktor|Networking Client For Android </p> <p>The flow diagram for the coroutines with retrofit in ViewModel.</p> <p>Coroutines are helpful in two main problems,</p> <ol><li>A long-running task that can block the main thread</li><li>Main safety allows you to ensure that any suspend function can be called from the main thread</li></ol> <p>According to the Kotlin docs it is stated that coroutines are a lightweight alternative to threads.</p> <p>“Coroutines provide a way to avoid blocking a thread and replace it with a cheaper and more controllable operation”</p> <p>Before we begin I would like to briefly address the concept and the commonly used functions in Coroutine.</p> <p >Coroutines build upon regular functions by adding two new operations. In addition to invoke (or call) and return, coroutines add suspend and resume.</p> <ul><li>suspend — pause the execution of the current coroutine, saving all local variables</li><li>resume — continue a suspended coroutine from the place it was paused</li></ul> <div > <div > <p >Table of Contents</p> </div> <ul ><li >Suspend Function </li><li >Launch and Async</li><li >Coroutine Scope</li><li >Coroutines in your Android Project</li><li >Making it work with Retrofit?<ul ><li >Declaring our interface.</li><li >Building Retrofit Service</li></ul></li><li >ViewModel with Coroutines<ul ><li >Coroutines and LiveData</li></ul></li><li >Exception Handling in Kotlin Coroutines</li><li >Kotlin Coroutines With Retrofit Example<ul ><li >Required Dependencies</li></ul></li></ul></div> <h2>Suspend Function </h2> <p>A suspending function is just a regular Kotlin function with an additional suspend modifier which indicates that the function can suspend the execution of a coroutine.</p> <pre > suspend fun getAllMovies() : Response&lt;List&lt;Movie&gt;&gt;</pre> <p>You can only call suspend functions from other suspend functions, or by using a coroutine builder like <code>launch</code> to start a new coroutine.</p> <p>We use call back functions when we get response from our Async task. Suspend and resume work together to replace callbacks.</p> <p>To understand suspend functions, we should also know about provided dispatchers by Kotlin.</p> <p>To specify where the coroutines should run, Kotlin provides three dispatchers that you can use:</p> <ul><li>Dispatchers.Main – Use this dispatcher to run a coroutine on the main Android thread. This should be used only for interacting with the UI and performing quick work. Examples include calling <code>suspend</code> functions, running Android UI framework operations, and updating LiveData objects.</li><li>Dispatchers.IO – This dispatcher is optimized to perform disk or network I/O outside of the main thread. Examples include using the Room component, reading from or writing to files, and running any network operations.</li><li>Dispatchers.Default – This dispatcher is optimized to perform CPU-intensive work outside of the main thread. Example use cases include sorting a list and parsing JSON.</li></ul> <p>Lets, see this with an example -&gt; We are calling our api through coroutines. So, we use Dispatchers.IO.</p> <pre >CoroutineScope(Dispatchers.IO + exceptionHandler).launch { val response = mainRepository.getAllMovies() }</pre> <p>When we call getAllMovies() suspend method, then it suspends our coroutine. The coroutine on the main thread will be resumed with the result as soon as the withContext block is complete.</p> <p>Note: Using suspend doesn’t tell Kotlin to run a function on a background thread. It’s normal for suspend functions to operate on the main thread.</p> <h2>Launch and Async</h2> <p>launch and async are the most commonly used Coroutine builder.</p> <p>launch– Launches new coroutine without blocking current thread and returns a reference to the coroutine as a Job. The coroutine is canceled when the resulting job is cancelled.</p> <p>async– Creates new coroutine and returns its future result as an implementation of Deferred. The running coroutine is canceled when the resulting object is cancelled.</p> <p>Take a look at this piece of code as an example.</p> <pre >launch { delay(2000) println("launch block") } val result: Deferred&lt;String&gt; = async { delay(3000) "async block" } println(result.await())</pre> <p>From the example, the difference between launch and async is that async can return the future result which has a type of Deferred&lt;T&gt;, and we can call await() function to the Deferred variable to get the result of the Coroutine while launch only executes the code in the block without returning the result.</p> <h2>Coroutine Scope</h2> <p>Coroutine Scope defines a scope for coroutines. Every coroutine builder (like launch, async, etc) is an extension on CoroutineScope. When the scope dies, the Coroutines inside will be out of the picture too. Fortunately, the Android lifecycle-viewmodel-ktx provides a really easy way to get a Coroutine Scope in the ViewModel. I will show you how to do so later.</p> <p>To learn more about kotlin coroutines, check my other post.</p> <p>Kotlin Coroutines for Android Development</p> <h2>Coroutines in your Android Project</h2> <p>To begin add the following library to your <code>build.gradle</code> file dependencies:</p> <pre >implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1" implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2"</pre> <p> Note: You’ll also need to be on kotlin version 1.3 or better.</p> <h2>Making it work with Retrofit?</h2> <p>Retrofit is a type-safe HTTP client for Android and Java.</p> <p>Starting from Retrofit 2.6.0 you no longer require the Call Adapter as Retrofit now includes built-in support for Kotlin suspend modifier on functions.</p> <p>In order to begin, let’s add the retrofit dependencies into our app level build.gradle file:</p> <pre >// Networking implementation "com.squareup.retrofit2:retrofit:2.9.0" implementation "com.squareup.okhttp3:okhttp:4.7.2" implementation "com.squareup.okhttp3:logging-interceptor:4.7.2" implementation "com.squareup.retrofit2:converter-gson:2.9.0"</pre> <h3 >Declaring our interface.</h3> <p >For this example I am using https://howtodoandroid.com/movielist.json api to get list of movies.</p> <p >Observe the below snippet for our interface:</p> <pre >interface RetrofitService { @GET("movielist.json") suspend fun getAllMovies() : Response&lt;List&lt;Movie&gt;&gt; }</pre> <p >You may notice that instead of <code>Call&lt;T&gt;</code>, we now have a function with the <code>suspend </code>modifier defined in our interface function.</p> <p >According to Retrofit documentation this function will, behind the scenes behave as a normal <code>Call.enqueue</code> operation.</p> <p >Also we wrap our response in a <code>Response</code> object to get metadata about our request response e.g. information like response code.</p> <p >We no longer have to <code>await()</code> anymore as this is handled automatically! As with all networking on Android its done on the background. And this is a very clean way of doing so!</p> <h3 >Building Retrofit Service</h3> <p >Our Retrofit instance will look like the following code snippet:</p> <pre >interface RetrofitService { @GET("movielist.json") suspend fun getAllMovies() : Response&lt;List&lt;Movie&gt;&gt; companion object { var retrofitService: RetrofitService? = null fun getInstance() : RetrofitService { if (retrofitService == null) { val retrofit = Retrofit.Builder() .baseUrl("https://howtodoandroid.com/") .addConverterFactory(GsonConverterFactory.create()) .build() retrofitService = retrofit.create(RetrofitService::class.java) } return retrofitService!! } } }</pre> <h2>ViewModel with Coroutines</h2> <p>A CoroutineScope keeps track of all coroutines it creates. Therefore, if you cancel a scope, you cancel all coroutines it created. This is particularly important if you’re running coroutines in a ViewModel. </p> <p>If your ViewModel is getting destroyed, all the asynchronous work that it might be doing must be stopped. Otherwise, you’ll waste resources and potentially leaking memory. If you consider that certain asynchronous work should persist after ViewModel destruction, it is because it should be done in a lower layer of your app’s architecture.</p> <p>Add a CoroutineScope to your ViewModel by creating a new scope with a SupervisorJob that you cancel in onCleared() method. The coroutines created with that scope will live as long as the ViewModel is being used. </p> <h3>Coroutines and LiveData</h3> <p>LiveData is an observable value holder for UI and we are expected to be able to access the value from the main thread. With the release of livedata-2.1.0-alpha1, google provided the interoperability between LiveData and Coroutines.</p> <pre >class MainViewModel constructor(private val mainRepository: MainRepository) : ViewModel() { val errorMessage = MutableLiveData&lt;String&gt;() val movieList = MutableLiveData&lt;List&lt;Movie&gt;&gt;() var job: Job? = null val loading = MutableLiveData&lt;Boolean&gt;() fun getAllMovies() { job = CoroutineScope(Dispatchers.IO).launch { val response = mainRepository.getAllMovies() withContext(Dispatchers.Main) { if (response.isSuccessful) { movieList.postValue(response.body()) loading.value = false } else { onError("Error : ${response.message()} ") } } } } private fun onError(message: String) { errorMessage.value = message loading.value = false } override fun onCleared() { super.onCleared() job?.cancel() } }</pre> <h2>Exception Handling in Kotlin Coroutines</h2> <p>If you consider the above example, you can see we are wrapping our code inside a try-catch exception. But, when we are working with coroutines we can handle an exception using a global coroutine exception handler called CoroutineExceptionHandler.</p> <p>To use it, first, we create an exception handler in our ViewModel,</p> <pre >val exceptionHandler = CoroutineExceptionHandler { _, throwable -&gt; onError("Exception handled: ${throwable.localizedMessage}") }</pre> <p>and then we attach the handler to the ViewModelScope.</p> <p>So, our code looks like,</p> <pre >class MainViewModel constructor(private val mainRepository: MainRepository) : ViewModel() { val errorMessage = MutableLiveData&lt;String&gt;() val movieList = MutableLiveData&lt;List&lt;Movie&gt;&gt;() var job: Job? = null val exceptionHandler = CoroutineExceptionHandler { _, throwable -&gt; onError("Exception handled: ${throwable.localizedMessage}") } val loading = MutableLiveData&lt;Boolean&gt;() fun getAllMovies() { job = CoroutineScope(Dispatchers.IO + exceptionHandler).launch { val response = mainRepository.getAllMovies() withContext(Dispatchers.Main) { if (response.isSuccessful) { movieList.postValue(response.body()) loading.value = false } else { onError("Error : ${response.message()} ") } } } } private fun onError(message: String) { errorMessage.value = message loading.value = false } override fun onCleared() { super.onCleared() job?.cancel() } }</pre> <h2>Kotlin Coroutines With Retrofit Example</h2> <p>Now, lets see the example of list movies using kotlin coroutines and retrofit.</p> <h3>Required Dependencies</h3> <p>Here are the things you need to add to your build.gradle</p> <pre >// Networking implementation "com.squareup.retrofit2:retrofit:2.9.0" implementation "com.squareup.okhttp3:okhttp:4.7.2" implementation "com.squareup.okhttp3:logging-interceptor:4.7.2" implementation "com.squareup.retrofit2:converter-gson:2.9.0" //Coroutine implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1" implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.2" implementation 'com.google.code.gson:gson:2.8.6' //viewModel implementation "android.arch.lifecycle:extensions:1.1.1" //Glide implementation 'com.github.bumptech.glide:glide:4.12.0' kapt 'com.github.bumptech.glide:compiler:4.12.0'</pre> <p>First, setup the retrofit service.</p> <p>Model.kt</p> <pre >data class Movie(val name: String, val imageUrl: String, val category: String)</pre> <p>RetrofitService.kt</p> <pre >interface RetrofitService { @GET("movielist.json") suspend fun getAllMovies() : Response&lt;List&lt;Movie&gt;&gt; companion object { var retrofitService: RetrofitService? = null fun getInstance() : RetrofitService { if (retrofitService == null) { val retrofit = Retrofit.Builder() .baseUrl("https://howtodoandroid.com/") .addConverterFactory(GsonConverterFactory.create()) .build() retrofitService = retrofit.create(RetrofitService::class.java) } return retrofitService!! } } }</pre> <p>Next step is to setup the repository.</p> <p>MainRepository.kt</p> <pre >class MainRepository constructor(private val retrofitService: RetrofitService) { suspend fun getAllMovies() = retrofitService.getAllMovies() }</pre> <p>Setup the ViewModel,</p> <p>MyViewModelFactory.kt</p> <pre >class MyViewModelFactory constructor(private val repository: MainRepository): ViewModelProvider.Factory { override fun &lt;T : ViewModel&gt; create(modelClass: Class&lt;T&gt;): T { return if (modelClass.isAssignableFrom(MainViewModel::class.java)) { MainViewModel(this.repository) as T } else { throw IllegalArgumentException("ViewModel Not Found") } } }</pre> <p>MainViewModel.kt</p> <pre >class MainViewModel constructor(private val mainRepository: MainRepository) : ViewModel() { val errorMessage = MutableLiveData&lt;String&gt;() val movieList = MutableLiveData&lt;List&lt;Movie&gt;&gt;() var job: Job? = null val exceptionHandler = CoroutineExceptionHandler { _, throwable -&gt; onError("Exception handled: ${throwable.localizedMessage}") } val loading = MutableLiveData&lt;Boolean&gt;() fun getAllMovies() { job = CoroutineScope(Dispatchers.IO + exceptionHandler).launch { val response = mainRepository.getAllMovies() withContext(Dispatchers.Main) { if (response.isSuccessful) { movieList.postValue(response.body()) loading.value = false } else { onError("Error : ${response.message()} ") } } } } private fun onError(message: String) { errorMessage.value = message loading.value = false } override fun onCleared() { super.onCleared() job?.cancel() } }</pre> <p>Finally, in our MainActivity setup the viewmodel and call the getAllMovies() method of the viewModel.</p> <pre >class MainActivity : AppCompatActivity() { lateinit var viewModel: MainViewModel private val adapter = MovieAdapter() lateinit var binding: ActivityMainBinding override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) binding = ActivityMainBinding.inflate(layoutInflater) setContentView(binding.root) val retrofitService = RetrofitService.getInstance() val mainRepository = MainRepository(retrofitService) binding.recyclerview.adapter = adapter viewModel = ViewModelProvider(this, MyViewModelFactory(mainRepository)).get(MainViewModel::class.java) viewModel.movieList.observe(this, { adapter.setMovies(it) }) viewModel.errorMessage.observe(this, { Toast.makeText(this, it, Toast.LENGTH_SHORT).show() }) viewModel.loading.observe(this, Observer { if (it) { binding.progressDialog.visibility = View.VISIBLE } else { binding.progressDialog.visibility = View.GONE } }) viewModel.getAllMovies() } }</pre> <p>Screenshot</p> <p>Thanks for reading. checkout this example in GITHUB.</p> </div> </article> <div > <div > <h4 >Velmurugan</h4> View all posts by Velmurugan → </div> </div> <div > <h3 >You might also like</h3> <div > <div > <h3 > koin – Dependency Injection In Android </h3> <div ><span ><a ><time >March 3, 2021</time><time >November 9, 2021</time></a></span></div> </div> <div > <h3 > Kotlin Scope Functions Explained [Example] </h3> <div ><span ><a ><time >September 17, 2021</time><time >November 9, 2021</time></a></span></div> </div> <div > <h3 > Beginning Android Development with Kotlin </h3> <div ><span ><a ><time >March 4, 2021</time><time >November 9, 2021</time></a></span></div> </div> </div> </div> <div > <div > <h3 >Leave a Reply <small><a >Cancel reply</a></small></h3></div> </div> </main> </div> </div> </div> </div> <div > <a > Go to mobile version</a> </div> </body>","title":"37","article":"43"}
{"url":"https%3A%2F%2Fhowtodoandroid.com%2Fmaterial-menus-android%2F","text":"<body > <amp-auto-ads > </amp-auto-ads> <div > <a >Skip to content</a> <header > <div > <div > <div > <div > <p ><a >Howtodoandroid</a></p> <p >Learn android by examples</p> </div> </div> </div> </div>  <div > <div ><ul ><li ><a >Kotlin</a></li> <li ><a >Jetpack Compose</a></li> <li ><a >Material Design</a></li> <li ><a >Library</a></li> <li ><a >Jetpack</a></li> <li ><a >Recyclerview</a></li> <li ><a >About</a></li> </ul></div> </div> </header> <div > <div > <div > <main > <article > <div > Material Design</div> <header > <h1 >Material Menus – Material Component For Android</h1><div > by Velmurugan<span ><a ><time >March 23, 2021</time><time >November 9, 2021</time></a></span></div> </header> <div > <p>A menu displays a list of choices on a temporary surface. They appear when users interact with a button, action, or other control.</p> <p>Before getting into details. Check out my other post on material design,</p> <p>Progress Indicators – Material Components For Android</p> <p>Sliders – Material Component For Android</p> <p>Android Chips – Material Component For Android</p> <p> Android Snackbar Example </p> <p> Material Menus – Material Component For Android </p> <p>To work with material design, First, we need to add material design dependency.</p> <pre > implementation 'com.google.android.material:material:1.3.0'</pre> <div > <div > <p >Table of Contents</p> </div> <ul ><li >Types of menus</li><li >Dropdown Menus<ul ><li >Overflow menus</li><li >Context menus</li><li >Popup menus</li><li >Adding icons on popup menus</li><li >List popup window menus</li></ul></li><li >Exposed dropdown menus</li></ul></div> <h2>Types of menus</h2> <ol><li>Dropdown menus</li><li>Exposed dropdown menus</li></ol> <h2>Dropdown Menus</h2> <p>Dropdown menus display a list of options, triggered by an icon, button, or action. Their placement varies based on the element that opens them.</p> <p>Based on the usage and design, dropdown menus are used in four different ways.</p> <ol><li>Overflow menus</li><li>Context menus</li><li>Popup menus</li><li>List popup window menus</li></ol> <h3>Overflow menus</h3> <p>The menu which appears after tapping these 3 dots located in the action bar.</p> <p>To create the overflow menu, First create a menu XML file.</p> <p>option_menu.xml:</p> <pre >&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"&gt; &lt;item android:id="@+id/option_1" android:title="Home" /&gt; &lt;item android:id="@+id/option_2" android:title="Settings" /&gt; &lt;item android:id="@+id/option_3" android:title="Logout" /&gt; &lt;/menu&gt;</pre> <p>Then, inflate the menu XML layout on onCreateOptionsMenu.</p> <p>in your MainActivity.kt:</p> <pre >override fun onCreateOptionsMenu(menu: Menu?): Boolean { val inflater: MenuInflater = menuInflater inflater.inflate(R.menu.option_menu, menu) return true }</pre> <h3>Context menus</h3> <p>The context menu that appears when a TextView is long pressed.</p> <p>First, create Textview in your activity_main.xml layout,</p> <pre >&lt;TextView android:id="@+id/textview" android:layout_width="match_parent" android:layout_height="wrap_content" app:layout_constraintTop_toTopOf="parent" app:layout_constraintStart_toStartOf="parent" android:text="@string/lorem_ipsum" android:padding="8dp"/&gt;</pre> <p>In your code, inflate the context menu layout in onCreateContextMenu.</p> <pre >override fun onCreateContextMenu(menu: ContextMenu?, v: View?, menuInfo: ContextMenu.ContextMenuInfo?) { super.onCreateContextMenu(menu, v, menuInfo) val inflater: MenuInflater = menuInflater inflater.inflate(R.menu.option_menu, menu) }</pre> <p>Also, you can override the onContextItemSelected to handle context menu item click.</p> <pre >override fun onContextItemSelected(item: MenuItem): Boolean { return when (item.itemId) { R.id.home -&gt; { // Respond to context menu home click. Toast.makeText(this, "Home", Toast.LENGTH_SHORT).show() true } R.id.settings -&gt; { // Respond to context menu settings click. true } R.id.logout -&gt; { // Respond to context menu logout click. true } else -&gt; super.onContextItemSelected(item) } }</pre> <h3>Popup menus</h3> <p>The popup menu shows when a button is clicked.</p> <p>Create a button in activity_main.xml, </p> <pre >&lt;Button android:id="@+id/showMenu" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Show Popup Menu" android:visibility="visible" app:layout_constraintTop_toTopOf="parent" app:layout_constraintStart_toStartOf="parent" app:layout_constraintEnd_toEndOf="parent"/&gt;</pre> <p>With the click of the button, we need to create a PopupMenu() and inflate the menu layout into the popup menu.</p> <pre >activityMainBinding.showMenu.setOnClickListener { val popup = PopupMenu(this, it) popup.menuInflater.inflate(R.menu.option_menu, popup.menu) popup.setOnMenuItemClickListener { menuItem: MenuItem -&gt; // Respond to menu item click. return@setOnMenuItemClickListener true } popup.setOnDismissListener { // Respond to popup being dismissed. } // Show the popup menu. popup.show() }</pre> <p>Also, you can add click listener for the popup menu by setting setOnMenuItemClickListener into the popup menu.</p> <h3>Adding icons on popup menus</h3> <p>Currently, there is no public API to add icons on popup menus. The following workaround is for API 21+, and uses library-only APIs, and is not guaranteed to work in future versions.</p> <p>create a menu layout with icon,</p> <pre >&lt;menu xmlns:android="http://schemas.android.com/apk/res/android"&gt; &lt;item android:id="@+id/home" android:icon="@drawable/ic_baseline_home_24" android:title="Home" /&gt; &lt;item android:id="@+id/settings" android:icon="@drawable/ic_baseline_settings_24" android:title="Settings" /&gt; &lt;item android:id="@+id/logout" android:icon="@drawable/ic_baseline_exit_to_app_24" android:title="Logout" /&gt; &lt;/menu&gt;</pre> <p>In code:</p> <pre >activityMainBinding.showMenu.setOnClickListener { val popup = PopupMenu(this, it) popup.menuInflater.inflate(R.menu.option_menu, popup.menu) if (popup.menu is MenuBuilder) { val menuBuilder = popup.menu as MenuBuilder menuBuilder.setOptionalIconsVisible(true) for (item in menuBuilder.visibleItems) { val iconMarginPx = TypedValue.applyDimension( TypedValue.COMPLEX_UNIT_DIP, ICON_MARGIN.toFloat(), resources.displayMetrics) .toInt() if (item.icon != null) { if (Build.VERSION.SDK_INT &gt; Build.VERSION_CODES.LOLLIPOP) { item.icon = InsetDrawable(item.icon, iconMarginPx, 0, iconMarginPx,0) } else { item.icon = object : InsetDrawable(item.icon, iconMarginPx, 0, iconMarginPx, 0) { override fun getIntrinsicWidth(): Int { return intrinsicHeight + iconMarginPx + iconMarginPx } } } } } } popup.show() } </pre> <h3>List popup window menus</h3> <p>We can show the list items in popup menu using the ListPopupWindow() .</p> <p>In code, First create a listPopupWindow with list of menu items.</p> <pre >val listPopupWindow = ListPopupWindow(this, null, R.attr.listPopupWindowStyle) // Set button as the list popup's anchor listPopupWindow.anchorView = activityMainBinding.showMenu // Set list popup's content val items = listOf("List Item 1", "List Item 2", "List Item 3") val adapter = ArrayAdapter(this, R.layout.list_item, items) listPopupWindow.setAdapter(adapter) // Set list popup's item click listener listPopupWindow.setOnItemClickListener { parent: AdapterView&lt;*&gt;?, view: View?, position: Int, id: Long -&gt; // Respond to list popup window item click. // Dismiss popup. listPopupWindow.dismiss() }</pre> <p>Then, show the list popup menu on by clicking of the button.</p> <pre >activityMainBinding.showMenu.setOnClickListener { listPopupWindow.show() }</pre> <h2>Exposed dropdown menus</h2> <p>Exposed dropdown menus display the currently selected menu item above the list of options. the exposed dropdown menus behavior same as a spinner. So, this will be the best alternative for the spinners.</p> <p>The exposed dropdown menu is implemented through the TextInputLayout.</p> <p>In the layout:</p> <pre >&lt;com.google.android.material.textfield.TextInputLayout android:id="@+id/textInputLayout" style="@style/Widget.MaterialComponents.TextInputLayout.FilledBox.ExposedDropdownMenu" android:layout_width="match_parent" android:layout_height="wrap_content" app:layout_constraintTop_toTopOf="parent" app:layout_constraintStart_toStartOf="parent" android:hint="Select city"&gt; &lt;AutoCompleteTextView android:id="@+id/menuAutocomplete" android:layout_width="match_parent" android:layout_height="wrap_content" /&gt; &lt;/com.google.android.material.textfield.TextInputLayout&gt;</pre> <p>in code, set the arrayAdapter into autoCompleteTextView.</p> <pre >val items = listOf("Chennai", "Delhi", "Mumbai", "Pune") val adapter = ArrayAdapter(this, R.layout.list_item, items) activityMainBinding.menuAutocomplete.setAdapter(adapter)</pre> <p>In the item layout (list_item.xml):</p> <pre >&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;TextView xmlns:android="http://schemas.android.com/apk/res/android" android:layout_width="match_parent" android:layout_height="wrap_content" xmlns:tools="http://schemas.android.com/tools" android:ellipsize="end" android:maxLines="1" android:padding="16dp" tools:text="List " android:textAppearance="?attr/textAppearanceSubtitle1" /&gt;</pre> <p>To have an outlined variation of the exposed dropdown menu, set the style to @style/Widget.MaterialComponents.TextInputLayout.OutlinedBox.ExposedDropdownMenu:</p> <p>Non-editable variationDisable the user input in the AutoCompleteTextView to have a non editable variation of the menu by setting android:inputType=”none” on the AutoCompleteTextView.</p> <pre >&lt;AutoCompleteTextView android:id="@+id/menuAutocomplete" android:layout_width="match_parent" android:layout_height="wrap_content" android:inputType="none" /&gt;</pre> <p>Setting a default valueIn order to have a pre-selected value displayed, you can call setText(CharSequence text, boolean filter) on the AutoCompleteTextView with the filter set to false.</p> <p>That’s it. Thank you for reading.</p> </div> </article> <div > <div > <h4 >Velmurugan</h4> View all posts by Velmurugan → </div> </div> <div > <h3 >You might also like</h3> <div > <div > <h3 > Progress Indicators – Material Components For Android </h3> <div ><span ><a ><time >March 3, 2021</time><time >November 1, 2021</time></a></span></div> </div> <div > <h3 > ShapeableImageView – Material components for android [Example] </h3> <div ><span ><a ><time >March 3, 2021</time><time >November 9, 2021</time></a></span></div> </div> <div > <h3 > Cardview with Recyclerview Android Example [beginners] </h3> <div ><span ><a ><time >March 3, 2021</time><time >November 1, 2021</time></a></span></div> </div> </div> </div> <div > <h2 > One thought on “Material Menus – Material Component For Android”</h2> <ol > <li > <article > <div > <p>How to hide navigation bar when PopupMenu is showing?</p> </div> <div ><a >Reply</a></div></article> </li> </ol> <div > <h3 >Leave a Reply <small><a >Cancel reply</a></small></h3></div> </div> </main> </div> </div> </div> </div> <div > <a > Go to mobile version</a> </div> </body>","title":"37","article":"43"}
{"url":"https%3A%2F%2Fhowtodoandroid.com%2Fgetting-started-with-workmanager%2F","text":"<body > <amp-auto-ads > </amp-auto-ads> <div > <a >Skip to content</a> <header > <div > <div > <div > <div > <p ><a >Howtodoandroid</a></p> <p >Learn android by examples</p> </div> </div> </div> </div>  <div > <div ><ul ><li ><a >Kotlin</a></li> <li ><a >Jetpack Compose</a></li> <li ><a >Material Design</a></li> <li ><a >Library</a></li> <li ><a >Jetpack</a></li> <li ><a >Recyclerview</a></li> <li ><a >About</a></li> </ul></div> </div> </header> <div > <div > <div > <main > <article > <div > Jetpack</div> <header > <h1 >Getting started with WorkManager [Example]</h1><div > by Velmurugan<span ><a ><time >May 27, 2021</time><time >November 9, 2021</time></a></span></div> </header> <div > <p>WorkManager is one of the Android Architecture Components and part of Android Jetpack, a new and opinionated take on how to build modern Android applications. WorkManager is an Android library that runs deferrable background work when the work’s constraints are satisfied.</p> <p>Earlier we had AlarmManager, JobScheduler, FirebaseJobDispatcher for scheduling the background tasks. But the issues were</p> <ul><li>JobScheduler – Available only for API &gt;= 21</li><li>FirebaseJobDispatcher – For backward compatibility</li></ul> <p>So developer had to understand which method to use when. To overcome these issues we have WorkManager, and it will automatically choose the best method for your task and you do not need to write the logic for it. So basically WorkManager is providing an abstraction layer. It gives us a clean interface hiding all the complexities and giving the guaranteed execution of the task.</p> <p>Before getting started, check out another post on the jetpack,</p> <p>Android ConstraintLayout Example</p> <p>View Binding in Android Jetpack [Updated]</p> <p>Dependency injection on Android with Hilt[Example]</p> <p>Room Database Android Example [Beginners]</p> <p>MVVM With Retrofit and Recyclerview in Kotlin [Example]</p> <p>DataStore – Jetpack alternative for SharedPreference</p> <p>To get started using WorkManager, first import the library into your Android project.</p> <p>Add the following dependencies to your app’s build.gradle file:</p> <pre >dependencies { def work_version = "2.5.0" // (Java only) implementation "androidx.work:work-runtime:$work_version" // Kotlin + coroutines implementation "androidx.work:work-runtime-ktx:$work_version" // optional - RxJava2 support implementation "androidx.work:work-rxjava2:$work_version" // optional - GCMNetworkManager support implementation "androidx.work:work-gcm:$work_version" // optional - Test helpers androidTestImplementation "androidx.work:work-testing:$work_version" // optional - Multiprocess support implementation "androidx.work:work-multiprocess:$work_version" }</pre> <div > <div > <p >Table of Contents</p> </div> <ul ><li >WorkManager Features</li><li >Schedule tasks with WorkManager</li><li >Important classes in WorkManager</li><li >Creating Your WorkRequest<ul ><li >Define the work</li><li >Creating a One-Time WorkRequest</li><li >Creating a Periodic WorkRequest</li><li >Creating a Delayed WorkRequest</li></ul></li><li >Sending And Receiving Data to/from WorkManager<ul ><li >Sending Data</li><li >Receiving Data</li></ul></li><li >Features of WorkManager<ul ><li >Work Constraints</li><li >Flexible Retry Policy</li><li >Work Chaining</li><li >Canceling Work</li></ul></li><li >WorkManager Android Example</li></ul></div> <h2>WorkManager Features</h2> <ul ><li>Support for both asynchronous one-off and periodic tasks</li><li>Support for constraints such as network conditions, storage space, and charging status</li><li>Chaining of complex work requests, including running work in parallel</li><li>Output from one work request used as input for the next</li><li>Handles API level compatibility back to API level 14 (see note)</li><li>Works with or without Google Play services</li><li>Follows system health best practices</li><li>LiveData support to easily display work request state in UI</li></ul> <h2>Schedule tasks with WorkManager</h2> <p>WorkManager is an API that makes it easy to schedule deferrable, asynchronous tasks that are expected to run even if the app exits or the device restarts. The WorkManager API is a suitable and recommended replacement for all previous Android background scheduling APIs, including FirebaseJobDispatcher, GcmNetworkManager, and Job Scheduler. WorkManager incorporates the features of its predecessors in a modern, consistent API that works back to API level 14 while also being conscious of battery life.</p> <h2>Important classes in WorkManager</h2> <ul><li>Worker: The main class where we will put the work that needs to be done.</li><li>WorkRequest: defines an individual task, like it will define which worker class should execute the task.</li><li>WorkManager: The class used to enqueue the work requests.</li><li>WorkInfo: The class contains information about the works. For each WorkRequest, we can get a LiveData using WorkManager. The LiveData holds the WorkInfo and by observing it we can determine the Work Informations.</li></ul> <h2>Creating Your WorkRequest</h2> <p>To create workrequest, first we need to define the worker class.</p> <h3>Define the work</h3> <p>Work is defined using the Worker class. The doWork() method runs asynchronously on a background thread provided by WorkManager.</p> <p>To create some work for WorkManager to run, extend the Worker class and override the doWork() method. For example, to create a Worker that download images, you can do the following:</p> <pre >class DownloadWorker(val context: Context, workerParameters: WorkerParameters) : Worker(context, workerParameters) { override fun doWork(): Result { //Download Image downloadImage() return Result.success(outputData) } }</pre> <p>The Result returned from doWork() informs the WorkManager service whether the work succeeded and, in the case of failure, whether or not the work should be retried.</p> <p>Result.success(): The work finished successfully.Result.failure(): The work failed.Result.retry(): The work failed and should be tried at another time according to its retry policy.</p> <h3>Creating a One-Time WorkRequest</h3> <p>OneTimeWorkRequest is Used when we want to perform the work only once.</p> <pre > val oneTimeWorkRequest = OneTimeWorkRequest.Builder(DownloadWorker::class.java).build()</pre> <p>Finally, you need to submit your WorkRequest to WorkManager using the enqueue() method.</p> <pre > WorkManager.getInstance(this).enqueue(oneTimeWorkRequest)</pre> <h3>Creating a Periodic WorkRequest</h3> <p>Occasionally, your work needs to run several times, such as daily backups of a messaging app. In such cases, you use a PeriodicWorkRequest to create your WorkRequest.</p> <pre > val periodicWorkRequest = PeriodicWorkRequest.Builder(DownloadWorker::class.java, 10, TimeUnit.HOURS).build()</pre> <p>Finally, you need to submit your PeriodicWorkRequest to WorkManager using the enqueue() method.</p> <pre >WorkManager.getInstance(this).enqueueUniquePeriodicWork( "periodicImageDownload", ExistingPeriodicWorkPolicy.KEEP, periodicWorkRequest )</pre> <p>In PeriodicWorkRequest,</p> <ol><li>Use PeriodicWorkRequestBuilder to define your work. Notice that it takes time as a parameter. A restriction requires the interval between successive executions of your work to be at least 15 minutes.</li><li>Submit the work to WorkManager by calling enqueueUniquePeriodicWork. You need to pass the uniqueWorkName, existingPeriodicWorkPolicy, and the imageWorker itself.</li></ol> <h3>Creating a Delayed WorkRequest</h3> <p>A delayed WorkRequest is a OneTime WorkRequest whose execution is delayed by a given duration.</p> <pre >val delayedWorkRequest = OneTimeWorkRequest.Builder(DownloadWorker::class.java) .setInitialDelay(20, TimeUnit.SECONDS) .build()</pre> <p>you need to submit your WorkRequest to WorkManager using the enqueue() method.</p> <pre >WorkManager.getInstance(this).enqueueUniqueWork( "delayedImageDownload", ExistingWorkPolicy.KEEP, delayedWorkRequest )</pre> <h2>Sending And Receiving Data to/from WorkManager</h2> <p>We can also pass to data to our WorkManager class and we can also get back some data after finishing the work. So let’s see how we can do this.</p> <h3>Sending Data</h3> <p>To send the data to worker, we need to create Data.Builder() and add the data into workRequest using setInputData() .</p> <pre >val data: Data = Data.Builder().putString("task", "The task data").build() val oneTimeWorkRequest = OneTimeWorkRequest.Builder(DownloadWorker::class.java) .setInputData(data) .build()</pre> <p>Then, In your Worker we need to use getInputData() to get data inside the doWork().</p> <pre >override fun doWork(): Result { //get data val taskDesc = inputData.getString("task") return Result.success() }</pre> <h3>Receiving Data</h3> <p>For receiving we can again use the same concept inside doWork() method. </p> <pre >override fun doWork(): Result { val outputData = workDataOf("task" to "task details") return Result.success(outputData) }</pre> <p>And we can receive this data inside the observer in MainActivity.</p> <pre >val oneTimeWorkRequest = OneTimeWorkRequest.Builder(DownloadWorker::class.java) .setInputData(data) .build() WorkManager.getInstance(this).getWorkInfoByIdLiveData(oneTimeWorkRequest.id).observe(this, { workInfo -&gt; val task = workInfo?.outputData?.getString("task") })</pre> <h2>Features of WorkManager</h2> <h3>Work Constraints</h3> <p>Let’s add some constraints in our work so that it will execute at a specific time. We have many constraints available for example.</p> <ul><li>setRequiresCharging(boolean b): If it is set to true the work will be only done when the device is charging.</li><li>setRequiresBatteryNotLow(boolean b): Work will be done only when the battery of the device is not low.</li><li>setRequiresDeviceIdle(boolean b): Work will be done only when the device is idle.</li></ul> <pre >val constraints: Constraints = Constraints.Builder().setRequiresCharging(true) .build() val oneTimeWorkRequest = OneTimeWorkRequest.Builder(DownloadWorker::class.java) .setConstraints(constraints) .build()</pre> <p>Now after doing this change if you will run your application then the work will only be executed if the device is charging.</p> <h3>Flexible Retry Policy</h3> <p>If you require that WorkManager retry your work, you can return Result.retry() it from your worker. Your work is then rescheduled according to a backoff delay and backoff policy.</p> <ul><li>Backoff delay specifies the minimum amount of time to wait before retrying your work after the first attempt. This value can be no less than 10 seconds (or MIN_BACKOFF_MILLIS).</li><li>Backoff policy defines how the backoff delay should increase over time for subsequent retry attempts. WorkManager supports 2 backoff policies, <code>LINEAR</code> and <code>EXPONENTIAL</code>.</li></ul> <p>Every work request has a backoff policy and backoff delay. The default policy is <code>EXPONENTIAL</code> with a delay of 10 seconds, but you can override this in your work request configuration.</p> <p>Here is an example of customizing the backoff delay and policy.</p> <pre >val myWorkRequest = OneTimeWorkRequestBuilder&lt;MyWork&gt;() .setBackoffCriteria( BackoffPolicy.LINEAR, OneTimeWorkRequest.MIN_BACKOFF_MILLIS, TimeUnit.MILLISECONDS) .build() </pre> <p>In this example, the minimum backoff delay is set to the minimum allowed value, 10 seconds. Since the policy is <code>LINEAR</code> the retry interval will increase by approximately 10 seconds with each new attempt. For instance, the first run finishing with <code>Result.retry()</code> will be attempted again after 10 seconds, followed by 20, 30, 40, and so on, if the work continues to return <code>Result.retry()</code> after subsequent attempts. If the backoff policy were set to <code>EXPONENTIAL</code>, the retry duration sequence would be closer to 20, 40, 80, and so on.</p> <h3>Work Chaining</h3> <p>You can make works chain for sequential works. Imagine you fetch the image from the network and blur that to image in the application. We can chain the work for sequential processes or executing some works parallelly.</p> <pre >val constraints: Constraints = Constraints.Builder().setRequiresCharging(true) .build() val oneTimeWorkRequest = OneTimeWorkRequest.Builder(DownloadWorker::class.java) .setConstraints(constraints) .build() val blurRequest = OneTimeWorkRequest.Builder(BlurWorker::class.java).build() WorkManager.getInstance(this). beginWith(oneTimeWorkRequest) .then(blurRequest) .enqueue();</pre> <h3>Canceling Work</h3> <p >We can cancel ongoing works with methods in <code>WorkManager</code> instance.</p> <ul><li>cancelAllWork()</li><li>cancelAllWorkByTag</li><li>cancelUniqueWork</li><li>cancelWorkById</li></ul> <p >Work having unique id is replaced with newly enqueued work.</p> <p >In the case of works have a unique id, if we enqueue work has the same name with existing work and <code>ExistingWorkPolicty</code> is set <code>REPLACE</code>, the existing work is immediately terminated.</p> <pre >val oneTimeWorkRequest = OneTimeWorkRequest.Builder(DownloadWorker::class.java) .setConstraints(constraints) .build() WorkManager.getInstance(this).cancelWorkById(oneTimeWorkRequest.id)</pre> <h2>WorkManager Android Example</h2> <p>In this example, we are going to download image and blur image using work manager.</p> <p>First we need to add worker class for download image.</p> <p>DownloadWorker.kt</p> <pre >class DownloadWorker(val context: Context, workerParameters: WorkerParameters) : Worker(context, workerParameters) { override fun doWork(): Result { val myImageFileUri: Uri val client = OkHttpClient() val request = Request.Builder() .url("https://i.pinimg.com/originals/49/70/17/497017869c892b73b128ff72f2732035.jpg") .build() try { val response = client.newCall(request).execute() val bitmap = BitmapFactory.decodeStream(response.body?.byteStream()) myImageFileUri = writeBitmapToFile(context,bitmap) } catch (e: Exception) { e.printStackTrace() return Result.failure() } val outputData = workDataOf(KEY_IMAGE_URI to myImageFileUri.toString()) return Result.success(outputData) } }</pre> <p>Then, we need to blur image using BlurWorker class.</p> <p>BlurWorker.kt</p> <pre >class BlurWorker(ctx: Context, params: WorkerParameters) : Worker(ctx, params) { override fun doWork(): Result { val appContext = applicationContext val resourceUri = inputData.getString(KEY_IMAGE_URI) makeStatusNotification("Blurring image", appContext) sleep() return try { if (TextUtils.isEmpty(resourceUri)) { //Timber.e("Invalid input uri") throw IllegalArgumentException("Invalid input uri") } val resolver = appContext.contentResolver val picture = BitmapFactory.decodeStream( resolver.openInputStream(Uri.parse(resourceUri))) val output = blurBitmap(picture, appContext) // Write bitmap to a temp file val outputUri = writeBitmapToFile(appContext, output) val outputData = workDataOf(KEY_IMAGE_URI to outputUri.toString()) Result.success(outputData) } catch (throwable: Throwable) { //Timber.e(throwable, "Error applying blur") Result.failure() } } } </pre> <p>WorkerUtils.kt</p> <pre >fun makeStatusNotification(message: String, context: Context) { // Make a channel if necessary if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) { // Create the NotificationChannel, but only on API 26+ because // the NotificationChannel class is new and not in the support library val name = VERBOSE_NOTIFICATION_CHANNEL_NAME val description = VERBOSE_NOTIFICATION_CHANNEL_DESCRIPTION val importance = NotificationManager.IMPORTANCE_HIGH val channel = NotificationChannel(CHANNEL_ID, name, importance) channel.description = description // Add the channel val notificationManager = context.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager? notificationManager?.createNotificationChannel(channel) } // Create the notification val builder = NotificationCompat.Builder(context, CHANNEL_ID) .setSmallIcon(R.drawable.ic_launcher_foreground) .setContentTitle(NOTIFICATION_TITLE) .setContentText(message) .setPriority(NotificationCompat.PRIORITY_HIGH) .setVibrate(LongArray(0)) // Show the notification NotificationManagerCompat.from(context).notify(NOTIFICATION_ID, builder.build()) } /** * Method for sleeping for a fixed about of time to emulate slower work */ fun sleep() { try { Thread.sleep(DELAY_TIME_MILLIS, 0) } catch (e: InterruptedException) { //Timber.e(e.message) } } /** * Blurs the given Bitmap image * @param bitmap Image to blur * @param applicationContext Application context * @return Blurred bitmap image */ @WorkerThread fun blurBitmap(bitmap: Bitmap, applicationContext: Context): Bitmap { lateinit var rsContext: RenderScript try { // Create the output bitmap val output = Bitmap.createBitmap( bitmap.width, bitmap.height, bitmap.config) // Blur the image rsContext = RenderScript.create(applicationContext, RenderScript.ContextType.DEBUG) val inAlloc = Allocation.createFromBitmap(rsContext, bitmap) val outAlloc = Allocation.createTyped(rsContext, inAlloc.type) val theIntrinsic = ScriptIntrinsicBlur.create(rsContext, Element.U8_4(rsContext)) theIntrinsic.apply { setRadius(10f) theIntrinsic.setInput(inAlloc) theIntrinsic.forEach(outAlloc) } outAlloc.copyTo(output) return output } finally { rsContext.finish() } } /** * Writes bitmap to a temporary file and returns the Uri for the file * @param applicationContext Application context * @param bitmap Bitmap to write to temp file * @return Uri for temp file with bitmap * @throws FileNotFoundException Throws if bitmap file cannot be found */ @Throws(FileNotFoundException::class) fun writeBitmapToFile(applicationContext: Context, bitmap: Bitmap): Uri { val name = String.format("blur-filter-output-%s.png", UUID.randomUUID().toString()) val outputDir = File(applicationContext.externalCacheDir, OUTPUT_PATH) if (!outputDir.exists()) { outputDir.mkdirs() // should succeed } val outputFile = File(outputDir, name) var out: FileOutputStream? = null try { out = FileOutputStream(outputFile) bitmap.compress(Bitmap.CompressFormat.PNG, 0 /* ignored for PNG */, out) } finally { out?.let { try { it.close() } catch (ignore: IOException) { } } } return Uri.fromFile(outputFile) } </pre> <p>Finally, in your MainAcitivity.kt call the worker class.</p> <p>MainAcitivity.kt</p> <pre >class MainActivity : AppCompatActivity() { private var downloadedImageUri: String? = null override fun onCreate(savedInstanceState: Bundle?) { super.onCreate(savedInstanceState) setContentView(R.layout.activity_main) val imageViewNormal = findViewById&lt;ImageView&gt;(R.id.imageViewNormal) val imageViewBlur = findViewById&lt;ImageView&gt;(R.id.imageViewBlur) val blurImage = findViewById&lt;Button&gt;(R.id.blurImage) val downloadImage = findViewById&lt;Button&gt;(R.id.downloadImage) val oneTimeWorkRequest = OneTimeWorkRequest.Builder(DownloadWorker::class.java).build() val blurRequest = OneTimeWorkRequest.Builder(BlurWorker::class.java) WorkManager.getInstance(this).getWorkInfoByIdLiveData(oneTimeWorkRequest.id).observe(this, { workInfo -&gt; val imageUri = workInfo?.outputData?.getString(KEY_IMAGE_URI) imageUri?.let { imageViewNormal.setImageURI(Uri.parse(imageUri)) downloadedImageUri = it } }) downloadImage.setOnClickListener { WorkManager.getInstance(this).enqueue(oneTimeWorkRequest) WorkManager.getInstance(this). beginWith(oneTimeWorkRequest) .then(blurRequest.build()) .enqueue() } blurImage.setOnClickListener { val builder = Data.Builder() builder.putString(KEY_IMAGE_URI, downloadedImageUri) blurRequest.setInputData(builder.build()) val blurBuilder = blurRequest.build() WorkManager.getInstance(this).getWorkInfoByIdLiveData(blurBuilder.id).observe(this@MainActivity, { workInfo2 -&gt; val imageUri2 = workInfo2?.outputData?.getString(KEY_IMAGE_URI) imageUri2?.let { imageViewBlur.setImageURI(Uri.parse(imageUri2)) } }) WorkManager.getInstance(this@MainActivity).enqueue(blurBuilder) } } }</pre> <p>activity_main.xml</p> <pre >&lt;?xml version="1.0" encoding="utf-8"?&gt; &lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android" xmlns:app="http://schemas.android.com/apk/res-auto" xmlns:tools="http://schemas.android.com/tools" android:layout_width="match_parent" android:layout_height="match_parent" tools:context=".MainActivity"&gt; &lt;ImageView android:id="@+id/imageViewNormal" android:layout_width="match_parent" android:layout_height="200dp" app:layout_constraintTop_toTopOf="parent" app:layout_constraintStart_toStartOf="parent" app:layout_constraintEnd_toEndOf="parent"/&gt; &lt;ImageView android:id="@+id/imageViewBlur" android:layout_width="match_parent" android:layout_height="200dp" app:layout_constraintTop_toBottomOf="@id/imageViewNormal" app:layout_constraintStart_toStartOf="parent" app:layout_constraintEnd_toEndOf="parent"/&gt; &lt;Button android:id="@+id/downloadImage" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Start Image Download" app:layout_constraintLeft_toLeftOf="parent" app:layout_constraintRight_toRightOf="parent" app:layout_constraintTop_toBottomOf="@id/imageViewBlur" /&gt; &lt;Button android:id="@+id/blurImage" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Blur Image" app:layout_constraintLeft_toLeftOf="parent" app:layout_constraintRight_toRightOf="parent" app:layout_constraintTop_toBottomOf="@id/downloadImage" /&gt; &lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</pre> <p>Constants.kt</p> <pre >@JvmField val VERBOSE_NOTIFICATION_CHANNEL_NAME: CharSequence = "Verbose WorkManager Notifications" const val VERBOSE_NOTIFICATION_CHANNEL_DESCRIPTION = "Shows notifications whenever work starts" @JvmField val NOTIFICATION_TITLE: CharSequence = "WorkRequest Starting" const val CHANNEL_ID = "VERBOSE_NOTIFICATION" const val NOTIFICATION_ID = 1 // The name of the image manipulation work const val IMAGE_MANIPULATION_WORK_NAME = "image_manipulation_work" // Other keys const val OUTPUT_PATH = "blur_filter_outputs" const val KEY_IMAGE_URI = "KEY_IMAGE_URI" const val TAG_OUTPUT = "OUTPUT" const val DELAY_TIME_MILLIS: Long = 3000</pre> <p>Thanks for reading. you can download this example in GITHUB.</p> </div> </article> <div > <div > <h4 >Velmurugan</h4> View all posts by Velmurugan → </div> </div> <div > <h3 >You might also like</h3> <div > <div > <h3 > DataStore – Jetpack alternative for SharedPreference </h3> <div ><span ><a ><time >March 3, 2021</time><time >November 9, 2021</time></a></span></div> </div> <div > <h3 > Android ConstraintLayout Example </h3> <div ><span ><a ><time >March 4, 2021</time><time >November 9, 2021</time></a></span></div> </div> <div > <h3 > Room Database Android Example [Beginners] </h3> <div ><span ><a ><time >March 4, 2021</time><time >November 9, 2021</time></a></span></div> </div> </div> </div> <div > <div > <h3 >Leave a Reply <small><a >Cancel reply</a></small></h3></div> </div> </main> </div> </div> </div> </div> <div > <a > Go to mobile version</a> </div> </body>","title":"37","article":"43"}
