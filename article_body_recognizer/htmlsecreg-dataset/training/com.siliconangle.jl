{"url":"https://siliconangle.com/2021/11/13/heres-amazons-microsofts-cloud-momentum-accelerating/","text":"","title":"14","article":"20"}
{"url":"https://siliconangle.com/2021/11/20/investors-cash-users-fight-perpetual-cyberwar/","text":"","title":"14","article":"20"}
{"url":"https://siliconangle.com/2021/11/22/walmart-will-now-start-sending-goods-peoples-homes-drone-arkansas/","text":"PGJvZHkgPiA8aGVhZGVyID4gIDwvaGVhZGVyPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxtYWluID4gPGRpdiA+IDxwID4gVVBEQVRFRCAyMjowMSBFU1QgLyBOT1ZFTUJFUiAyMiAyMDIxIDwvcD4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gRU1FUkdJTkcgVEVDSCA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8aDMgPiBXYWxtYXJ0IHdpbGwgbm93IHN0YXJ0IHNlbmRpbmcgZ29vZHMgdG8gcGVvcGxl4oCZcyBob21lcyBieSBkcm9uZSBpbiBBcmthbnNhczwvaDM+IDxkaXYgPiA8ZGl2PiA8cCA+IGJ5IDxhID4gSmFtZXMgRmFycmVsbCA8L2E+IDwvcD4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8cD5JZiB5b3UgbGl2ZSBjbG9zZSB0byBXYWxtYXJ0IEluYy7igJlzIHN0b3JlIGluIEZhcm1pbmd0b24sIEFya2Fuc2FzLCB5b3UgbWF5IHNvb24gcmVjZWl2ZSB5b3VyIGZpcnN0IGRlbGl2ZXJ5IHZpYSBkcm9uZS48L3A+IDxwPlRoZSByZXRhaWwgZ2lhbnQgYW5ub3VuY2VkIHRvZGF5IHRoYXQgaXQgaGFzIHRlYW1lZCB1cCB3aXRoIERyb25lVXAgTExDLCBhIFZpcmdpbmlhLWJhc2VkIHN0YXJ0dXAgdGhhdCBmb2N1c2VzIG9uIGRyb25lIHRlY2hub2xvZ3kuIFRoZSBwYXJ0bmVyc2hpcCB3aWxsIG1lYW4gaXRzIGRyb25lIGVuZ2luZWVycyB3aWxsIGVuc3VyZSB0aGUgcGFja2FnZXMgYXJyaXZlIGF0IHRoZSByaWdodCBzcG90LCBhbHRob3VnaCB0aGF0IHNwb3QgbXVzdCBiZSBsb2NhdGVkIHdpdGhpbiBhIDEuMTUtbWlsZSByYWRpdXMgb2YgdGhlIHN0b3JlLjwvcD4gPHA+4oCcV2hlbiB3ZSBpbnZlc3RlZCBpbiBEcm9uZVVwIGVhcmxpZXIgdGhpcyB5ZWFyLCB3ZSBlbnZpc2lvbmVkIGEgZHJvbmUgZGVsaXZlcnkgb3BlcmF0aW9uIHRoYXQgY291bGQgYmUgcXVpY2tseSBleGVjdXRlZCBhbmQgcmVwbGljYXRlZCBhY3Jvc3MgbXVsdGlwbGUgc3RvcmVzLOKAnSBUb20gV2FyZCwgc2VuaW9yIHZpY2UgcHJlc2lkZW50IG9mIGxhc3QgbWlsZSBhdCBXYWxtYXJ0IFUuUy4sIHNhaWQgaW4gYSBwcmVzcyByZWxlYXNlLiDigJxPcGVuaW5nIG91ciBmaXJzdCBodWIgd2l0aGluIG1vbnRocyBvZiBvdXIgaW5pdGlhbCBjb25jZXB0IHNob3djYXNlcyBEcm9uZVVw4oCZcyBhYmlsaXR5IHRvIHNhZmVseSBleGVjdXRlIGRyb25lIGRlbGl2ZXJ5IG9wZXJhdGlvbnMgd2l0aCBzcGVlZC7igJ08L3A+IDxwPlRoZSBkcm9uZXMgd2lsbCBub3QgZHJvcCBpdGVtcyBmcm9tIHRoZSBza3kgYnV0IGxvd2VyIHRoZW0gZG93biBvbiBjYWJsZXMuIEFsdGhvdWdoIHRoaXMgbWlnaHQgc291bmQgZXhjaXRpbmcsIGl0IG1lYW5zIHRoZXJl4oCZcyBhIGxpbWl0IHRvIHdoYXQgb25lIG9mIERyb25lVXDigJlzIHZlaGljbGVzIGNhbiBjYXJyeS4gRm9yIG5vdywgdGhlIHdlaWdodCBsaW1pdCBpcyBmb3VyIHBvdW5kcywgYW5kIHRoZXJl4oCZcyBhIGRlbGl2ZXJ5IGZlZSBvZiAkMTAuPC9wPiA8cD5Db21pbmcgc29vbiB3aWxsIGJlIHR3byBvdGhlciBsb2NhdGlvbnM6IFdhbG1hcnQgTmVpZ2hib3Job29kIE1hcmtldCBpbiBSb2dlcnMsIEFya2Fuc2FzLCBhbmQgV2FsbWFydCBTdXBlcmNlbnRlciBpbiBCZW50b252aWxsZSwgQXJrYW5zYXMuIFdhbG1hcnQgc2F5cyB0aGF0IHdpdGggaXRzIDQsNzAwIHN0b3JlcyBzaXR0aW5nIHdpdGhpbiAxMCBtaWxlcyBvZiA5MCUgb2YgdGhlIFUuUy4sIGRyb25lIGRlbGl2ZXJ5IGlzIHRoZSB3YXkgdG8gZ28uPC9wPiA8cD7igJxEcm9uZXMgYXJlIHVuaXF1ZWx5IHZhbHVhYmxlIGR1ZSB0byB0aGVpciBmbGV4aWJpbGl0eSwgc3BlZWQgYW5kIGxvdyBjb3N0LOKAnSB0aGUgY29tcGFueSBzYWlkLiDigJxEcm9uZXMgYWxzbyByZXF1aXJlIGZld2VyIGZvc3NpbCBmdWVsLXBvd2VyZWQgdmVoaWNsZXMgZm9yIHNob3J0IGRlbGl2ZXJ5IHRyaXBzLiBEcm9uZVVwIGhhcyB3b3JrZWQgY2xvc2VseSBhbmQgY29udGludW91c2x5IHdpdGggdGhlIEZBQSB0byBlbnN1cmUgdGhlIHNhZmUgb3BlcmF0aW9uIG9mIGRyb25lcyBpbiB0aGUgTmF0aW9uYWwgQWlyc3BhY2UgYW5kIGhhcyBtb3JlIHRoYW4gMTkwIGFjdGl2ZSB3YWl2ZXJzIGFuZCBhdXRob3JpemF0aW9ucyB3aXRoIHRoZSBGQUEgdG8gc3VwcG9ydCBEcm9uZVVwIGZsaWdodHMgYWNyb3NzIHRoZSBVLlMu4oCdPC9wPiA8cD5Db21tZXJjaWFsIGRlbGl2ZXJ5IHZpYSBkcm9uZSBoYXMgYmVlbiBvbiBXYWxtYXJ04oCZcyByYWRhciBmb3Igc29tZSB0aW1lIG5vdy4gSW4gU2VwdGVtYmVyLCBpdCBhbm5vdW5jZWQgaXQgd2FzIHRlYW1pbmcgdXAgd2l0aCBaaXBsaW5lIEluYy4sIGEgZHJvbmUgY29tcGFueSB0aGF0IHNwZWNpYWxpemVzIGluIGRlbGl2ZXJpbmcgZW1lcmdlbmN5IGhlYWx0aCBwcm9kdWN0cy4gSW4gTm92ZW1iZXIsIHRoZSBmaXJzdCBtZWRpY2FsIGFuZCBoZWFsdGggaXRlbXMgd2VyZSBkZWxpdmVyZWQgdG8gcGVvcGxlIGluIEFya2Fuc2FzIGFzIGEgcmVzdWx0IG9mIHRoZSBwYXJ0bmVyc2hpcC48L3A+IDxwPlRoZSBkcm9uZSBkZWxpdmVyeSBidXNpbmVzcyBsb29rcyBjZXJ0YWluIHRvIHRha2Ugb2ZmIHNvb24sIHdpdGggQW1hem9uLmNvbSBJbmMuIGFuZCBHb29nbGUgTExDIDxhID5hbHJlYWR5IG1ha2luZyBoZWFkd2F5PC9hPsKgYXMgd2VsbC48L3A+IDxoNT5QaG90bzogV2FsbWFydDwvaDU+IDxkaXYgPiA8aDE+QSBtZXNzYWdlIGZyb20gSm9obiBGdXJyaWVyLCBjby1mb3VuZGVyIG9mIFNpbGljb25BTkdMRTo8L2gxPiA8aDM+U2hvdyB5b3VyIHN1cHBvcnQgZm9yIG91ciBtaXNzaW9uIGJ5IGpvaW5pbmcgb3VyIEN1YmUgQ2x1YiBhbmQgQ3ViZSBFdmVudCBDb21tdW5pdHkgb2YgZXhwZXJ0cy4gSm9pbiB0aGUgY29tbXVuaXR5IHRoYXQgaW5jbHVkZXMgQW1hem9uIFdlYiBTZXJ2aWNlcyBhbmQgQW1hem9uLmNvbSBDRU8gQW5keSBKYXNzeSwgRGVsbCBUZWNobm9sb2dpZXMgZm91bmRlciBhbmQgQ0VPIE1pY2hhZWwgRGVsbCwgSW50ZWwgQ0VPIFBhdCBHZWxzaW5nZXIgYW5kIG1hbnkgbW9yZSBsdW1pbmFyaWVzIGFuZCBleHBlcnRzLjwvaDM+IDxkaXY+IDxoMz5Kb2luIE91ciBDb21tdW5pdHnCoDwvaDM+IDxwID48YSA+Q2xpY2sgaGVyZSB0byBqb2luIHRoZSBmcmVlIGFuZCBvcGVuIFN0YXJ0dXAgU2hvd2Nhc2UgZXZlbnQuPC9hPjwvcD4gPHA+V2UgcmVhbGx5IHdhbnQgdG8gaGVhciBmcm9tIHlvdSwgYW5kIHdl4oCZcmUgbG9va2luZyBmb3J3YXJkIHRvIHNlZWluZyB5b3UgYXQgdGhlIGV2ZW50IGFuZCBpbiB0aGVDVUJFIENsdWIuPC9wPiA8cD48YSA+Q2xpY2sgaGVyZSB0byBqb2luIHRoZSBmcmVlIGFuZCBvcGVuIFN0YXJ0dXAgU2hvd2Nhc2UgZXZlbnQuPC9hPjwvcD4gPC9kaXY+IDwvZGl2PjwvZGl2PiA8L2Rpdj4gPGRpdiA+PGRpdiA+PGRpdiA+PGRpdiA+PGg1ID5MQVRFU1QgU1RPUklFUzwvaDU+PC9kaXY+PC9kaXY+PGRpdiA+PGRpdiA+PHVsID48bGkgPjxhID48cCA+V2FsbWFydCB3aWxsIG5vdyBzdGFydCBzZW5kaW5nIGdvb2RzIHRvIHBlb3BsZeKAmXMgaG9tZXMgYnkgZHJvbmUgaW4gQXJrYW5zYXM8L3A+PC9hPjwvbGk+PGxpID48YSA+PHAgPkRhdGEgb2YgMS4yTSBjdXN0b21lcnMgc3RvbGVuIGluIEdvRGFkZHkncyBsYXRlc3QgZGF0YSBicmVhY2g8L3A+PC9hPjwvbGk+PGxpID48YSA+PHAgPlpvb20ncyBzdG9jayBmYWxscyBkZXNwaXRlIHN0cm9uZyByZXZlbnVlIGFuZCBjdXN0b21lciBncm93dGg8L3A+PC9hPjwvbGk+PGxpID48YSA+PHAgPlJlbmRlciByYWlzZXMgJDIwTSBpbiBmdW5kaW5nIGZvciBpdHMg4oCYemVybyBEZXZPcHPigJkgY2xvdWQgcGxhdGZvcm08L3A+PC9hPjwvbGk+PGxpID48YSA+PHAgPkN5YmVyc2VjdXJpdHkgc3RhcnR1cCBYTSBDeWJlciBhY3F1aXJlZCBmb3IgJDcwME0gYnkgU2Nod2FyeiBHcm91cDwvcD48L2E+PC9saT48bGkgPjxhID48cCA+QXZheWEgc2hhcmVzIHNvYXIgYWZ0ZXIgc3Ryb25nIGVhcm5pbmdzIHJlc3VsdHM8L3A+PC9hPjwvbGk+PC91bD48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2ID48ZGl2ID48ZGl2ID48aDUgPkxBVEVTVCBTVE9SSUVTPC9oNT48L2Rpdj48L2Rpdj48ZGl2ID48ZGl2ID48dWwgPjxsaSA+PGRpdiA+PGRpdiA+PGEgPjxwID5XYWxtYXJ0IHdpbGwgbm93IHN0YXJ0IHNlbmRpbmcgZ29vZHMgdG8gcGVvcGxl4oCZcyBob21lcyBieSBkcm9uZSBpbiBBcmthbnNhczwvcD48L2E+PHAgPkVNRVJHSU5HIFRFQ0ggLSBCWSBKQU1FUyBGQVJSRUxMIC4gOCBNSU5TIEFHTzwvcD48L2Rpdj48L2Rpdj48L2xpPjxsaSA+PGRpdiA+PGRpdiA+PGEgPjxwID5EYXRhIG9mIDEuMk0gY3VzdG9tZXJzIHN0b2xlbiBpbiBHb0RhZGR5J3MgbGF0ZXN0IGRhdGEgYnJlYWNoPC9wPjwvYT48cCA+U0VDVVJJVFkgLSBCWSBEVU5DQU4gUklMRVkgLiAyOSBNSU5TIEFHTzwvcD48L2Rpdj48L2Rpdj48L2xpPjxsaSA+PGRpdiA+PGRpdiA+PGEgPjxwID5ab29tJ3Mgc3RvY2sgZmFsbHMgZGVzcGl0ZSBzdHJvbmcgcmV2ZW51ZSBhbmQgY3VzdG9tZXIgZ3Jvd3RoPC9wPjwvYT48cCA+Q0xPVUQgLSBCWSBNSUtFIFdIRUFUTEVZIC4gMyBIT1VSUyBBR088L3A+PC9kaXY+PC9kaXY+PC9saT48bGkgPjxkaXYgPjxkaXYgPjxhID48cCA+UmVuZGVyIHJhaXNlcyAkMjBNIGluIGZ1bmRpbmcgZm9yIGl0cyDigJh6ZXJvIERldk9wc+KAmSBjbG91ZCBwbGF0Zm9ybTwvcD48L2E+PHAgPkNMT1VEIC0gQlkgTUFSSUEgREVVVFNDSEVSIC4gNiBIT1VSUyBBR088L3A+PC9kaXY+PC9kaXY+PC9saT48bGkgPjxkaXYgPjxkaXYgPjxhID48cCA+Q3liZXJzZWN1cml0eSBzdGFydHVwIFhNIEN5YmVyIGFjcXVpcmVkIGZvciAkNzAwTSBieSBTY2h3YXJ6IEdyb3VwPC9wPjwvYT48cCA+U0VDVVJJVFkgLSBCWSBNQVJJQSBERVVUU0NIRVIgLiA3IEhPVVJTIEFHTzwvcD48L2Rpdj48L2Rpdj48L2xpPjxsaSA+PGRpdiA+PGRpdiA+PGEgPjxwID5BdmF5YSBzaGFyZXMgc29hciBhZnRlciBzdHJvbmcgZWFybmluZ3MgcmVzdWx0czwvcD48L2E+PHAgPjxzcGFuPkNMT1VEIC0gQlkgTUFSSUEgREVVVFNDSEVSIC4gOSBIT1VSUyBBR088L3NwYW4+PC9wPjwvZGl2PjwvZGl2PjwvbGk+PC91bD48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L21haW4+IDwvZGl2PiA8L2FzaWRlPiA8L2Rpdj4gPC9kaXY+IDwvYXNpZGU+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+PGgzPkNvb2tpZXM8L2gzPldlIGVtcGxveSB0aGUgdXNlIG9mIGNvb2tpZXMuIEZpbmQgb3V0IG1vcmUuPC9kaXY+IDwvZGl2PjwvZGl2PjwvYm9keT4=","title":"14","article":"20"}
{"url":"https://siliconangle.com/2021/11/06/cutting-noise-full-stack-observability/","text":"","title":"14","article":"21"}
{"url":"https://siliconangle.com/2021/11/17/druva-data-resiliency-cloud-meets-the-challenge-of-evolving-ransomware-cubeconversations/","text":"","title":"18","article":"24"}
{"url":"https://siliconangle.com/2021/11/17/netscout-threat-intelligence-report-spotlights-new-threat-actor-attack-methods-cubeconversations/","text":"","title":"18","article":"24"}
{"url":"https://siliconangle.com/2021/11/19/pandemic-drives-computing-innovation-edge-vmware-dell-weigh-cubeconversations/","text":"","title":"18","article":"24"}
