{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Fjack-dorseys-twitter-failed-african-countries%2F","text":"","title":"58","article":"69"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Fhackers-drain-31-million-from-crypto-service%2F","text":"","title":"58","article":"69"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Ffungi-climate-change-medicine-health%2F","text":"","title":"58","article":"69"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Fthink-climate-change-is-messy-wait-until-geoengineering%2F","text":"","title":"60","article":"71"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Fomicron-variant-facts%2F","text":"","title":"60","article":"71"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Fomicron-europe-contact-tracing%2F","text":"","title":"60","article":"71"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Fplanned-parenthood-la-hack-predictive-policing-ubiquiti%2F","text":"PGJvZHkgPjxkaXYgPjxkaXYgPjxhID5Ta2lwIHRvIG1haW4gY29udGVudDwvYT48ZGl2ID48aGVhZGVyID48ZGl2ID48ZGl2ID48ZGl2ID48c3BhbiA+PHA+VG8gcmV2aXN0IHRoaXMgYXJ0aWNsZSwgdmlzaXQgTXkgUHJvZmlsZSwgdGhlbiBWaWV3IHNhdmVkIHN0b3JpZXMuPC9wPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2ID48ZGl2ID5TZWN1cml0eSBOZXdzIFRoaXMgV2VlazogQSBQbGFubmVkIFBhcmVudGhvb2QgTEEgSGFjayBBZmZlY3RzIDQwMCwwMDAgUGF0aWVudHM8L2Rpdj48ZGl2ID48ZGl2ID48ZGl2PjxkaXYgPjxkaXYgPk1vcmU8L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2ID48ZGl2ID48ZGl2ID48ZGl2ID48c3BhbiA+PHA+VG8gcmV2aXN0IHRoaXMgYXJ0aWNsZSwgdmlzaXQgTXkgUHJvZmlsZSwgdGhlbiBWaWV3IHNhdmVkIHN0b3JpZXMuPC9wPjwvc3Bhbj48L2Rpdj48L2Rpdj5TaWduIEluPC9kaXY+PC9kaXY+U2VhcmNoPC9oZWFkZXI+PGRpdiA+PHVsPjxsaT5CYWNrY2hhbm5lbDwvbGk+PGxpPkJ1c2luZXNzPC9saT48bGk+Q3VsdHVyZTwvbGk+PGxpPkdlYXI8L2xpPjxsaT5JZGVhczwvbGk+PGxpPlNjaWVuY2U8L2xpPjxsaT5TZWN1cml0eTwvbGk+PC91bD48L2Rpdj48ZGl2ID48dWw+PGxpPlBvZGNhc3RzPC9saT48bGk+VmlkZW88L2xpPjxsaT5BcnRpZmljaWFsIEludGVsbGlnZW5jZTwvbGk+PGxpPkNsaW1hdGU8L2xpPjxsaT5HYW1lczwvbGk+PGxpPk5ld3NsZXR0ZXJzPC9saT48bGk+TWFnYXppbmU8L2xpPjxsaT5FdmVudHM8L2xpPjxsaT5XaXJlZCBJbnNpZGVyPC9saT48bGk+Q291cG9uczwvbGk+PC91bD48L2Rpdj48L2Rpdj48bWFpbiA+PGFydGljbGUgPjxkaXYgPjxoZWFkZXIgPjxkaXYgPjxkaXYgPjxkaXYgPjxkaXYgPjxwID5CcmlhbiBCYXJyZXR0PC9wPjwvZGl2PjxkaXYgPjxkaXYgPlNlY3VyaXR5PC9kaXY+PHRpbWUgPjEyLjA0LjIwMjEgMTE6MTAgQU08L3RpbWU+PC9kaXY+PC9kaXY+PGgxID5TZWN1cml0eSBOZXdzIFRoaXMgV2VlazogQSBQbGFubmVkIFBhcmVudGhvb2QgTEEgSGFjayBBZmZlY3RzIDQwMCwwMDAgUGF0aWVudHM8L2gxPjwvZGl2PjxkaXYgPjxkaXYgPlBsdXM6IEEgVWJpcXVpdGkgaGFjayByZXZlbGF0aW9uLCBwcmVkaWN0aXZlIHBvbGljaW5nLCBhbmQgbW9yZSBvZiB0aGUgd2VlaydzIHRvcCBzZWN1cml0eSBuZXdzLjwvZGl2PjxkaXYgPjx1bCA+PGRpdiA+PGRpdiA+PHNwYW4gPjxwPlRvIHJldmlzdCB0aGlzIGFydGljbGUsIHZpc2l0IE15IFByb2ZpbGUsIHRoZW4gVmlldyBzYXZlZCBzdG9yaWVzLjwvcD48L3NwYW4+PC9kaXY+PC9kaXY+PC91bD48L2Rpdj48L2Rpdj48L2Rpdj48L2hlYWRlcj48L2Rpdj48ZGl2ID48ZGl2ID48ZGl2ID48ZGl2ID48ZGl2ID48ZGl2ID48cD5Gb3IgbW9udGhzLCBoYWNrZXJzIGhhdmUgdGFyZ2V0ZWQgSXJhbidzIHB1YmxpYyBpbmZyYXN0cnVjdHVyZSwgaGl0dGluZyBldmVyeXRoaW5nIGZyb20gdHJhaW5zIHRvIGdhcyBzdGF0aW9ucyB0byBhaXJsaW5lcy4gSXQgYXBwZWFycyB0byBiZSBhbiBlc2NhbGF0aW9uIGluIGxvbmctcnVubmluZyB0ZW5zaW9ucyB3aXRoIElzcmFlbOKAlG9uZSB0aGF0IHNob3dzIGhvdyBjeWJlcmF0dGFja3MgY2FuIGhhdmUgaW1wYWN0IGluIHRoZSByZWFsIHdvcmxkLiBJbiB0aGlzIGNhc2UgdGhvc2UgcmVwZXJjdXNzaW9ucyBhcmUgcGFydGljdWxhcmx5IGNvbmNlcm5pbmcgYmVjYXVzZSB0aGV5J3JlIGZlbHQgcHJpbWFyaWx5IGJ5IGNpdmlsaWFucy4gPC9wPjxwID5JbiBvdGhlciByZWdpb25hbCBuZXdzLCBzcHl3YXJlIGZyb20gdGhlIElzcmFlbC1iYXNlZCA8YSA+TlNPIEdyb3VwIHdhcyByZXBvcnRlZGx5IGZvdW5kIG9uIHRoZSBwaG9uZXMgb2YgbmVhcmx5IGEgZG96ZW4gVVMgU3RhdGUgRGVwYXJ0bWVudCBvZmZpY2lhbHM8L2E+LiBUaGUgdmljdGltcyB3ZXJlIGVpdGhlciBsaXZpbmcgaW4gVWdhbmRhIG9yIHdvcmtpbmcgb24gaXNzdWVzIHJlbGF0ZWQgdG8gdGhlIGNvdW50cnkuIFRoZSBpbmNpZGVudCBsYXlzIGJhcmUgaG93IHRoaW4gTlNPIEdyb3VwJ3MgcmF0aW9uYWxpemF0aW9ucyBvZiBpdHMgZmxhZ3NoaXAgc3VydmVpbGxhbmNlIHByb2R1Y3QgaGF2ZSBhbHdheXMgYmVlbiwgYWx0aG91Z2ggaXQgcmVtYWlucyB1bmNsZWFyIGlmIGFueXRoaW5nIHdpbGwgY3VyYiB0aGUgbmVhci1jb25zdGFudCBhYnVzZXMgY2FycmllZCBvdXQgYnkgYXV0aG9yaXRhcmlhbiBnb3Zlcm5tZW50cy48L3A+PHAgPlNlY3VyaXR5IHJlc2VhcmNoZXJzIHRoaW5rIHRoZXkndmUgZm91bmQgYSBiZXR0ZXIgd2F5IHRvIDxhID5zcG90IHN0YXRlLXNwb25zb3JlZCB0cm9sbHMgb24gUmVkZGl0PC9hPi4gTWFsaWNpb3VzIGFwcHMgZGVzaWduZWQgdG8gc3RlYWwgYmFua2luZyBpbmZvcm1hdGlvbiA8YSA+c251Y2sgaW50byB0aGUgR29vZ2xlIFBsYXkgU3RvcmU8L2E+IGFuZCB3ZXJlIGRvd25sb2FkZWQgbW9yZSB0aGFuIDMwMCwwMCB0aW1lcyBiZWZvcmUgZ2V0dGluZyBib290ZWQuIEFuZCBhIGJ1ZyBpbiBjcnlwdG9jdXJyZW5jeSBzZXJ2aWNlIE1vbm9YIEZpbmFuY2UgbGV0IGhhY2tlcnMgPGEgPmdldCBhd2F5IHdpdGggYSAkMzEgbWlsbGlvbiBoZWlzdDwvYT4uwqA8L3A+PHAgPkZhY2Vib29rIHdpbGwgcmVxdWlyZSA8YSA+aXRzIG1vc3QgYXQtcmlzayB1c2VyczwvYT4gdG8gPGEgPnB1dCB0d28tZmFjdG9yIGF1dGhlbnRpY2F0aW9uPC9hPiBvbiB0aGVpciBhY2NvdW50cy4gQXMgQW5kcm9pZCAxMiByb2xscyBvdXQgdG8gbW9yZSBkZXZpY2VzLCB3ZSB0b29rIGEgbG9vayBhdCB0aGUgPGEgPnByaXZhY3kgc2V0dGluZ3MgeW91IHNob3VsZCBjaGVjayByaWdodCBub3c8L2E+LiBBbmQgc28tY2FsbGVkIDxhID53YXRlcmluZyBob2xlIGF0dGFja3M8L2E+IGhhdmUgYmVjb21lIGluY3JlYXNpbmdseSBjb21tb247IHdlIHRhbGtlZCB0aHJvdWdoIHdoYXQgdGhleSBhcmUsIGFuZCB3aHkgdGhleSdyZSBzbyBpbnNpZGlvdXMuPC9wPjxwID5MYXN0bHksIGFsbCBhcG9sb2dpZXMgdG8gU25lYWtlcnMsIEhhY2tlcnMsIGFuZCBXYXJHYW1lcywgYnV0IDxhID5UaGUgTWF0cml4PC9hPiBpcyB0aGUgYmVzdCBoYWNrZXIgbW92aWUgb2YgYWxsIHRpbWUuPC9wPjxwID5BbmQgdGhlcmUncyBtb3JlISBFYWNoIHdlZWsgd2Ugcm91bmQgdXAgYWxsIHRoZSBzZWN1cml0eSBuZXdzIFdJUkVEIGRpZG7igJl0IGNvdmVyIGluIGRlcHRoLiBDbGljayBvbiB0aGUgaGVhZGxpbmVzIHRvIHJlYWQgdGhlIGZ1bGwgc3Rvcmllcy48L3A+PGRpdiA+PGEgPlBsYW5uZWQgUGFyZW50aG9vZCBIYWNrIEFmZmVjdGVkIDQwMCwwMDAgUGF0aWVudHM8L2E+PC9kaXY+PHAgPkJldHdlZW4gT2N0b2JlciA3IGFuZCBPY3RvYmVyIDE5LCBhIGhhY2tlciBnYWluZWQgYWNjZXNzIHRvIHRoZSBuZXR3b3JrIG9mIFBsYW5uZWQgUGFyZW50aG9vZCdzIExvcyBBbmdlbGVzIG91dHBvc3QgYW5kIHN0b2xlIGRhdGEgcmVsYXRlZCB0byA0MDAsMDAwIHBhdGllbnRzLiBUaGUgb3JnYW5pemF0aW9uIGRpc2Nsb3NlZCB0byB2aWN0aW1zIHRoYXQgdGhlIGluZm9ybWF0aW9uIGluY2x1ZGVkIG5vdCBvbmx5IHRoZWlyIG5hbWUsIGFkZHJlc3MsIGFuZCBvdGhlciBpZGVudGlmeWluZyBpbmZvcm1hdGlvbiwgYnV0IGFsc28gZGV0YWlscyBhYm91dCB0aGVpciBwcm9jZWR1cmVzIGFuZCBwcmVzY3JpcHRpb25zLiBXaGlsZSB0aGUgbmV3cyBjb21lcyB0aGUgc2FtZSB3ZWVrIHRoYXQgdGhlIFVTIFN1cHJlbWUgQ291cnQgaGVhcmQgb3JhbCBhcmd1bWVudHMgaW4gYW4gY2FzZSByZWxhdGVkIHRvIGEgY29udHJvdmVyc2lhbCBNaXNzaXNzaXBwaSBhYm9ydGlvbiBsYXcsIHRoZSBoYWNrIGl0c2VsZiBhcHBlYXJzIHRvIGhhdmUgYmVlbiByYW5zb213YXJlLXJlbGF0ZWQgcmF0aGVyIHRoYW4gcG9saXRpY2FsbHkgbW90aXZhdGVkLsKgPC9wPjxkaXYgPjxhID5Ib3cgUHJlZGljdGl2ZSBQb2xpY2luZyBQZXJwZXR1YXRlcyBEaXNjcmltaW5hdGlvbjwvYT48L2Rpdj48cCA+V2UndmUgd3JpdHRlbiBiZWZvcmUgYWJvdXQgdGhlIDxhID5zaG9ydGZhbGxzIG9mIHNvLWNhbGxlZCBwcmVkaWN0aXZlIHBvbGljaW5nPC9hPiwgaW4gd2hpY2ggbGF3IGVuZm9yY2VtZW50IHVzZXMgZGF0YSB0byBndWVzcyB3aGVyZSBjcmltZXMgd2lsbCBoYXBwZW4gYW5kIHdobyB3aWxsIGNvbW1pdCB0aGVtIGFuZCBhbGxvY2F0ZXMgcmVzb3VyY2VzIGFjY29yZGluZ2x5LiBUaGlzIHdlZWssIG5ldyByZXBvcnRpbmcgZnJvbSB0aGUgTWFya3VwIGFuZCBHaXptb2RvIHNob3dlZCB0aGF0IHRoZXNlIHN5c3RlbXMgZGlzcHJvcG9ydGlvbmFsbHkgYWZmZWN0IEJsYWNrIGFuZCBMYXRpbm8gbmVpZ2hib3Job29kcy4gSXQncyBhIGRhbW5pbmcgZGVlcCBkaXZlIHRoYXQncyB3ZWxsIHdvcnRoIHlvdXIgdGltZS7CoDwvcD48ZGl2ID48YSA+U29tZW9uZSdzIE9wZXJhdGluZyBIdW5kcmVkcyBvZiBNYWxpY2lvdXMgVG9yIFNlcnZlcnM8L2E+PC9kaXY+PHAgPlRvciBpcyBhbiA8YSA+aW52YWx1YWJsZSBhbm9ueW1pdHkgdG9vbDwvYT4gdGhhdCByZWxpZXMgb24gdGhvdXNhbmRzIG9mIHByb3h5IHNlcnZlcnMgdG8gcm91dGUgZW5jcnlwdGVkIHRyYWZmaWMgdGhyb3VnaC4gSXQgdHVybnMgb3V0LCB0aG91Z2gsIHRoYXQgYSBzb3BoaXN0aWNhdGVkIGFjdG9yIGhhcyBiZWVuIHJ1bm5pbmcgaHVuZHJlZHMgb2YgdGhvc2Ugc2VydmVycyBpbiBiYWQgZmFpdGguIE9uIGNsb3NlciBvYnNlcnZhdGlvbiwgb25lIHJlc2VhcmNoZXIgc3VzcGVjdHMgdGhhdCB0aGV5J3JlIGF0dGVtcHRpbmcgdG8gZ2F0aGVyIGluZm9ybWF0aW9uIGFib3V0IHBlb3BsZSB1c2luZyB0aGUgVG9yIG5ldHdvcmsuIFRoZSBUb3IgUHJvamVjdCBoYXMgYmVlbiB0YWtpbmcgcmVtb3ZpbmcgdGhlIG1hbGljaW91cyBzZXJ2ZXJzIGZyb20gdGhlIG5ldHdvcmsgYXMgdGhleSd2ZSBiZWVuIHJlcG9ydGVkLCBidXQgYXQgb25lIHBvaW50IHRoZSB0aHJlYXQgYWN0b3IgcmFuIGFzIG1hbnkgYXMgOTAwIGF0IG9uZSB0aW1lLjwvcD48ZGl2ID48YSA+VGhlIFViaXF1aXRpIEhhY2sgVGFrZXMgYSBTdXJwcmlzaW5nIFR1cm48L2E+PC9kaXY+PHAgPkVhcmxpZXIgdGhpcyB5ZWFyLCByb3V0ZXIgbWFudWZhY3R1cmVyIFViaXF1aXRpIHN1ZmZlcmVkIGEgaGFjayB0aGF0IGFuIGFwcGFyZW50IHdoaXN0bGVibG93ZXIgYXR0cmlidXRlZCB0byBvdXRzaWRlIGhhY2tlcnMuIE5vdywgYSBKdXN0aWNlIERlcGFydG1lbnQgaW5kaWN0bWVudCBhbGxlZ2VzIHRoYXQgdGhlIGluY2lkZW50IHdhcyBhY3R1YWxseSBhbiBpbnNpZGVyIGpvYiwgYW5kIHRoYXQgdGhlIHdoaXN0bGVibG93ZXIgd2FzIGluIGZhY3QgdGhlIGFzc2FpbGFudCBhbGwgYWxvbmcuIElmIHRoZSBhbGxlZ2F0aW9ucyBob2xkIHVwLCBpdCdzIGFuIGluY3JlZGlibHkgYnJhemVuIHNlcmllcyBvZiBhY3Rpb25zLCBhbmQgd2VsbCB3b3J0aCB0YWtpbmcgYSBmZXcgbWludXRlcyB0byBzaWZ0IHRocm91Z2guPC9wPjxkaXYgPk1vcmUgR3JlYXQgV0lSRUQgU3RvcmllczwvZGl2Pjx1bCA+PGxpPvCfk6kgVGhlIGxhdGVzdCBvbiB0ZWNoLCBzY2llbmNlLCBhbmQgbW9yZTogPGEgPkdldCBvdXIgbmV3c2xldHRlcnM8L2E+ITwvbGk+PGxpPjxhID5EYXZpZCBBdHRlbmJvcm91Z2jigJlzIHVuZW5kaW5nIG1pc3Npb248L2E+IHRvIHNhdmUgb3VyIHBsYW5ldDwvbGk+PGxpPkl04oCZcyB0aW1lIHRvIHJlaW1hZ2luZSA8YSA+dGhlIGZ1dHVyZSBvZiBjeWJlcnB1bms8L2E+PC9saT48bGk+PGEgPlBhcmVudHMgYnVpbHQgYSBzY2hvb2wgYXBwPC9hPi4gVGhlbiB0aGUgY2l0eSBjYWxsZWQgdGhlIGNvcHM8L2xpPjxsaT5UaGUgY3V0ZXN0IHdheSB0byBmaWdodCBjbGltYXRlIGNoYW5nZT8gPGEgPlNlbmQgaW4gdGhlIG90dGVyczwvYT48L2xpPjxsaT5UaGUgYmVzdCA8YSA+c3Vic2NyaXB0aW9uIGJveGVzIGZvciBnaWZ0aW5nPC9hPjwvbGk+PGxpPvCfkYHvuI8gRXhwbG9yZSBBSSBsaWtlIG5ldmVyIGJlZm9yZSB3aXRoIDxhID5vdXIgbmV3IGRhdGFiYXNlPC9hPjwvbGk+PGxpPvCfjqcgVGhpbmdzIG5vdCBzb3VuZGluZyByaWdodD8gQ2hlY2sgb3V0IG91ciBmYXZvcml0ZSA8YSA+d2lyZWxlc3MgaGVhZHBob25lczwvYT4sIDxhID5zb3VuZGJhcnM8L2E+LCBhbmQgPGEgPkJsdWV0b290aCBzcGVha2VyczwvYT48L2xpPjwvdWw+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9hcnRpY2xlPjxkaXYgPjxkaXYgPjxkaXYgPjxkaXYgPjxkaXYgPjxkaXYgPjxkaXYgPjxhID5CcmlhbiBCYXJyZXR0PC9hPiBpcyBFeGVjdXRpdmUgRWRpdG9yLCBOZXdzIGF0IFdJUkVELCBvdmVyc2VlaW5nIGRheSB0byBkYXkgY292ZXJhZ2UgYWNyb3NzIHRoZSBzaXRlLiBQcmlvciB0byBXSVJFRCBoZSB3YXMgdGhlIGVkaXRvciBpbiBjaGllZiBvZiB0aGUgdGVjaCBhbmQgY3VsdHVyZSBzaXRlIEdpem1vZG8gYW5kIHdhcyBhIGJ1c2luZXNzIHJlcG9ydGVyIGZvciB0aGUgWW9taXVyaSBTaGltYnVuLCBKYXBhbuKAmXMgbGFyZ2VzdCBkYWlseSBuZXdzcGFwZXIuPC9kaXY+PGRpdiA+RXhlY3V0aXZlIEVkaXRvciwgTmV3czwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgPjxkaXYgPjxkaXYgPlRvcGljczxhID5zZWN1cml0eSByb3VuZHVwPC9hPjxhID5zZWN1cml0eTwvYT48YSA+Y3liZXJzZWN1cml0eTwvYT48YSA+aGFja2luZzwvYT48YSA+cmFuc29td2FyZTwvYT48L2Rpdj48L2Rpdj48L2Rpdj48L2Rpdj48L21haW4+PC9kaXY+PC9kaXY+PC9ib2R5Pg==","title":"58","article":"72"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Fmovement-hold-ai-accountable-gains-steam%2F","text":"PGJvZHkgPjxkaXYgPjxkaXYgPjxhID5Ta2lwIHRvIG1haW4gY29udGVudDwvYT48ZGl2ID48aGVhZGVyID48ZGl2ID48ZGl2ID48ZGl2ID48c3BhbiA+PHA+VG8gcmV2aXN0IHRoaXMgYXJ0aWNsZSwgdmlzaXQgTXkgUHJvZmlsZSwgdGhlbiBWaWV3IHNhdmVkIHN0b3JpZXMuPC9wPjwvc3Bhbj48L2Rpdj48L2Rpdj48L2Rpdj48ZGl2ID48ZGl2ID5UaGUgTW92ZW1lbnQgdG8gSG9sZCBBSSBBY2NvdW50YWJsZSBHYWlucyBNb3JlIFN0ZWFtPC9kaXY+PGRpdiA+PGRpdiA+PGRpdj48ZGl2ID48ZGl2ID5Nb3JlPC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiA+PGRpdiA+PGRpdiA+PGRpdiA+PHNwYW4gPjxwPlRvIHJldmlzdCB0aGlzIGFydGljbGUsIHZpc2l0IE15IFByb2ZpbGUsIHRoZW4gVmlldyBzYXZlZCBzdG9yaWVzLjwvcD48L3NwYW4+PC9kaXY+PC9kaXY+U2lnbiBJbjwvZGl2PjwvZGl2PlNlYXJjaDwvaGVhZGVyPjxkaXYgPjx1bD48bGk+QmFja2NoYW5uZWw8L2xpPjxsaT5CdXNpbmVzczwvbGk+PGxpPkN1bHR1cmU8L2xpPjxsaT5HZWFyPC9saT48bGk+SWRlYXM8L2xpPjxsaT5TY2llbmNlPC9saT48bGk+U2VjdXJpdHk8L2xpPjwvdWw+PC9kaXY+PGRpdiA+PHVsPjxsaT5Qb2RjYXN0czwvbGk+PGxpPlZpZGVvPC9saT48bGk+QXJ0aWZpY2lhbCBJbnRlbGxpZ2VuY2U8L2xpPjxsaT5DbGltYXRlPC9saT48bGk+R2FtZXM8L2xpPjxsaT5OZXdzbGV0dGVyczwvbGk+PGxpPk1hZ2F6aW5lPC9saT48bGk+RXZlbnRzPC9saT48bGk+V2lyZWQgSW5zaWRlcjwvbGk+PGxpPkNvdXBvbnM8L2xpPjwvdWw+PC9kaXY+PC9kaXY+PG1haW4gPjxhcnRpY2xlID48ZGl2ID48aGVhZGVyID48ZGl2ID48ZGl2ID48ZGl2ID48ZGl2ID48cCA+S2hhcmkgSm9obnNvbjwvcD48L2Rpdj48ZGl2ID48ZGl2ID5CdXNpbmVzczwvZGl2Pjx0aW1lID4xMi4wMi4yMDIxIDA3OjAwIEFNPC90aW1lPjwvZGl2PjwvZGl2PjxoMSA+VGhlIE1vdmVtZW50IHRvIEhvbGQgQUkgQWNjb3VudGFibGUgR2FpbnMgTW9yZSBTdGVhbTwvaDE+PC9kaXY+PGRpdiA+PGRpdiA+QSBOZXcgWW9yayBDaXR5IGxhdyByZXF1aXJlcyBhbGdvcml0aG1zIHVzZWQgaW4gaGlyaW5nIHRvIGJlIOKAnGF1ZGl0ZWTigJ0gZm9yIGJpYXMuIEl04oCZcyB0aGUgZmlyc3QgaW4gdGhlIFVT4oCUYW5kIHBhcnQgb2YgYSBsYXJnZXIgcHVzaCB0b3dhcmQgcmVndWxhdGlvbi48L2Rpdj48ZGl2ID48dWwgPjxkaXYgPjxkaXYgPjxzcGFuID48cD5UbyByZXZpc3QgdGhpcyBhcnRpY2xlLCB2aXNpdCBNeSBQcm9maWxlLCB0aGVuIFZpZXcgc2F2ZWQgc3Rvcmllcy48L3A+PC9zcGFuPjwvZGl2PjwvZGl2PjwvdWw+PC9kaXY+PC9kaXY+PC9kaXY+PC9oZWFkZXI+PC9kaXY+PGRpdiA+PGRpdiA+PGRpdiA+PGRpdiA+PGRpdiA+VGhlIEFJIERhdGFiYXNlIOKGkjwvZGl2PjxkaXYgPjxkaXYgPjxwID5BcHBsaWNhdGlvbjwvcD48YSA+PHAgPlJlZ3VsYXRpb248L3A+PC9hPjwvZGl2PjxkaXYgPjxwID5TZWN0b3I8L3A+PGEgPjxwID5JVDwvcD48L2E+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiA+PGRpdiA+PGRpdiA+PGRpdiA+PGRpdiA+PHA+QWxnb3JpdGhtcyBwbGF5IGEgZ3Jvd2luZyByb2xlIGluIG91ciBsaXZlcywgZXZlbiBhcyB0aGVpciBmbGF3cyBhcmUgYmVjb21pbmcgbW9yZSBhcHBhcmVudDogQSBNaWNoaWdhbiBtYW4gd3JvbmdseSBhY2N1c2VkIG9mIGZyYXVkIGhhZCB0byBmaWxlIGZvciBiYW5rcnVwdGN5OyBhdXRvbWF0ZWQgc2NyZWVuaW5nIHRvb2xzIGRpc3Byb3BvcnRpb25hdGVseSBoYXJtIHBlb3BsZSBvZiBjb2xvciB3aG8gd2FudCB0byA8YSA+YnV5IGEgaG9tZTwvYT4gb3IgPGEgPnJlbnQgYW4gYXBhcnRtZW50PC9hPjsgQmxhY2sgRmFjZWJvb2sgdXNlcnMgd2VyZSA8YSA+c3ViamVjdGVkIHRvIG1vcmUgYWJ1c2U8L2E+IHRoYW4gd2hpdGUgdXNlcnMuIE90aGVyIGF1dG9tYXRlZCBzeXN0ZW1zIGhhdmUgaW1wcm9wZXJseSByYXRlZCB0ZWFjaGVycywgZ3JhZGVkIHN0dWRlbnRzLCBhbmQgPGEgPmZsYWdnZWQgcGVvcGxlIHdpdGggZGFyayBza2luPC9hPiBtb3JlIG9mdGVuIGZvciBjaGVhdGluZyBvbiB0ZXN0cy48L3A+PHAgPk5vdywgZWZmb3J0cyBhcmUgdW5kZXJ3YXkgdG8gYmV0dGVyIHVuZGVyc3RhbmQgaG93IEFJIHdvcmtzIGFuZCBob2xkIHVzZXJzIGFjY291bnRhYmxlLiBOZXcgWW9ya+KAmXMgQ2l0eSBDb3VuY2lsIGxhc3QgbW9udGggYWRvcHRlZCBhIDxhID5sYXc8L2E+IHJlcXVpcmluZyBhdWRpdHMgb2YgPGEgPmFsZ29yaXRobXM8L2E+IHVzZWQgYnkgZW1wbG95ZXJzIGluIGhpcmluZyBvciBwcm9tb3Rpb24uIFRoZSBsYXcsIHRoZSBmaXJzdCBvZiBpdHMga2luZCBpbiB0aGUgbmF0aW9uLCByZXF1aXJlcyBlbXBsb3llcnMgdG8gYnJpbmcgaW4gb3V0c2lkZXJzIHRvIGFzc2VzcyB3aGV0aGVyIGFuIGFsZ29yaXRobSBleGhpYml0cyBiaWFzIGJhc2VkIG9uIHNleCwgcmFjZSwgb3IgZXRobmljaXR5LiBFbXBsb3llcnMgYWxzbyBtdXN0IHRlbGwgam9iIGFwcGxpY2FudHMgd2hvIGxpdmUgaW4gTmV3IFlvcmsgd2hlbiA8YSA+YXJ0aWZpY2lhbCBpbnRlbGxpZ2VuY2U8L2E+IHBsYXlzIGEgcm9sZSBpbiBkZWNpZGluZyB3aG8gZ2V0cyBoaXJlZCBvciBwcm9tb3RlZC48L3A+PHAgPkluIFdhc2hpbmd0b24sIERDLCBtZW1iZXJzIG9mIENvbmdyZXNzIGFyZSBkcmFmdGluZyBhIGJpbGwgdGhhdCB3b3VsZCByZXF1aXJlIGJ1c2luZXNzZXMgdG8gZXZhbHVhdGUgYXV0b21hdGVkIGRlY2lzaW9ubWFraW5nIHN5c3RlbXMgdXNlZCBpbiBhcmVhcyBzdWNoIGFzIGhlYWx0aCBjYXJlLCBob3VzaW5nLCBlbXBsb3ltZW50LCBvciBlZHVjYXRpb24sIGFuZCByZXBvcnQgdGhlIGZpbmRpbmdzIHRvIHRoZSBGZWRlcmFsIFRyYWRlIENvbW1pc3Npb247IHRocmVlIG9mIHRoZSBGVEPigJlzIGZpdmUgbWVtYmVycyBzdXBwb3J0IHN0cm9uZ2VyIHJlZ3VsYXRpb24gb2YgYWxnb3JpdGhtcy4gQW4gPGEgPkFJIEJpbGwgb2YgUmlnaHRzPC9hPiBwcm9wb3NlZCBsYXN0IG1vbnRoIGJ5IHRoZSBXaGl0ZSBIb3VzZSBjYWxscyBmb3IgZGlzY2xvc2luZyB3aGVuIEFJIG1ha2VzIGRlY2lzaW9ucyB0aGF0IGltcGFjdCBhIHBlcnNvbuKAmXMgY2l2aWwgcmlnaHRzLCBhbmQgaXQgc2F5cyBBSSBzeXN0ZW1zIHNob3VsZCBiZSDigJxjYXJlZnVsbHkgYXVkaXRlZOKAnSBmb3IgYWNjdXJhY3kgYW5kIGJpYXMsIGFtb25nIG90aGVyIHRoaW5ncy48L3A+PHAgPkVsc2V3aGVyZSwgRXVyb3BlYW4gVW5pb24gbGF3bWFrZXJzIGFyZSBjb25zaWRlcmluZyBsZWdpc2xhdGlvbiByZXF1aXJpbmcgaW5zcGVjdGlvbiBvZiA8YSA+QUkgZGVlbWVkIGhpZ2gtcmlzazwvYT4gYW5kIGNyZWF0aW5nIGEgcHVibGljIHJlZ2lzdHJ5IG9mIGhpZ2gtcmlzayBzeXN0ZW1zLiBDb3VudHJpZXMgaW5jbHVkaW5nIENoaW5hLCBDYW5hZGEsIEdlcm1hbnksIGFuZCB0aGUgVUsgaGF2ZSBhbHNvIHRha2VuIHN0ZXBzIHRvIHJlZ3VsYXRlIEFJIGluIHJlY2VudCB5ZWFycy48L3A+PHAgPkp1bGlhIFN0b3lhbm92aWNoLCBhbiBhc3NvY2lhdGUgcHJvZmVzc29yIGF0IE5ldyBZb3JrIFVuaXZlcnNpdHkgd2hvIHNlcnZlZCBvbiB0aGUgTmV3IFlvcmsgQ2l0eSBBdXRvbWF0ZWQgRGVjaXNpb24gU3lzdGVtcyBUYXNrIEZvcmNlLCBzYXlzIHNoZSBhbmQgc3R1ZGVudHMgcmVjZW50bHkgZXhhbWluZWQgYSBoaXJpbmcgdG9vbCBhbmQgZm91bmQgaXQgYXNzaWduZWQgcGVvcGxlIGRpZmZlcmVudCBwZXJzb25hbGl0eSBzY29yZXMgYmFzZWQgb24gdGhlIHNvZnR3YXJlIHByb2dyYW0gd2l0aCB3aGljaCB0aGV5IGNyZWF0ZWQgdGhlaXIgcsOpc3Vtw6kuIE90aGVyIHN0dWRpZXMgaGF2ZSBmb3VuZCB0aGF0IGhpcmluZyBhbGdvcml0aG1zIGZhdm9yIGFwcGxpY2FudHMgYmFzZWQgb24gd2hlcmUgdGhleSB3ZW50IHRvIHNjaG9vbCwgdGhlaXIgYWNjZW50LCB3aGV0aGVyIHRoZXkgd2VhciBnbGFzc2VzLCBvciB3aGV0aGVyIHRoZXJl4oCZcyBhIDxhID5ib29rc2hlbGYgaW4gdGhlIGJhY2tncm91bmQ8L2E+LjwvcD48cCA+U3RveWFub3ZpY2ggc3VwcG9ydHMgdGhlIGRpc2Nsb3N1cmUgcmVxdWlyZW1lbnQgaW4gdGhlIE5ldyBZb3JrIENpdHkgbGF3LCBidXQgc2hlIHNheXMgdGhlIGF1ZGl0aW5nIHJlcXVpcmVtZW50IGlzIGZsYXdlZCBiZWNhdXNlIGl0IG9ubHkgYXBwbGllcyB0byBkaXNjcmltaW5hdGlvbiBiYXNlZCBvbiBnZW5kZXIgb3IgcmFjZS4gU2hlIHNheXMgdGhlIGFsZ29yaXRobSB0aGF0IHJhdGVkIHBlb3BsZSBiYXNlZCBvbiB0aGUgZm9udCBpbiB0aGVpciByw6lzdW3DqSB3b3VsZCBwYXNzIG11c3RlciB1bmRlciB0aGUgbGF3IGJlY2F1c2UgaXQgZGlkbuKAmXQgZGlzY3JpbWluYXRlIG9uIHRob3NlIGdyb3VuZHMuPC9wPjxwID7igJxTb21lIG9mIHRoZXNlIHRvb2xzIGFyZSB0cnVseSBub25zZW5zaWNhbCzigJ0gc2hlIHNheXMuIOKAnFRoZXNlIGFyZSB0aGluZ3Mgd2UgcmVhbGx5IHNob3VsZCBrbm93IGFzIG1lbWJlcnMgb2YgdGhlIHB1YmxpYyBhbmQganVzdCBhcyBwZW9wbGUuIEFsbCBvZiB1cyBhcmUgZ29pbmcgdG8gYXBwbHkgZm9yIGpvYnMgYXQgc29tZSBwb2ludC7igJ08L3A+PHAgPlNvbWUgcHJvcG9uZW50cyBvZiBncmVhdGVyIHNjcnV0aW55IGZhdm9yIG1hbmRhdG9yeSBhdWRpdHMgb2YgYWxnb3JpdGhtcyBzaW1pbGFyIHRvIHRoZSBhdWRpdHMgb2YgY29tcGFuaWVzJyBmaW5hbmNpYWxzLiBPdGhlcnMgcHJlZmVyIOKAnGltcGFjdCBhc3Nlc3NtZW50c+KAnSBha2luIHRvIGVudmlyb25tZW50YWwgaW1wYWN0IHJlcG9ydHMuIEJvdGggZ3JvdXBzIGFncmVlIHRoYXQgdGhlIGZpZWxkIGRlc3BlcmF0ZWx5IG5lZWRzIHN0YW5kYXJkcyBmb3IgaG93IHN1Y2ggcmV2aWV3cyBzaG91bGQgYmUgY29uZHVjdGVkIGFuZCB3aGF0IHRoZXkgc2hvdWxkIGluY2x1ZGUuIFdpdGhvdXQgc3RhbmRhcmRzLCBidXNpbmVzc2VzIGNvdWxkIGVuZ2FnZSBpbiDigJxldGhpY3Mgd2FzaGluZ+KAnSBieSBhcnJhbmdpbmcgZm9yIGZhdm9yYWJsZSBhdWRpdHMuIFByb3BvbmVudHMgc2F5IHRoZSByZXZpZXdzIHdvbuKAmXQgc29sdmUgYWxsIHByb2JsZW1zIGFzc29jaWF0ZWQgd2l0aCBhbGdvcml0aG1zLCBidXQgdGhleSB3b3VsZCBoZWxwIGhvbGQgdGhlIG1ha2VycyBhbmQgdXNlcnMgb2YgQUkgbGVnYWxseSBhY2NvdW50YWJsZS48L3A+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiA+PGRpdiA+PGRpdiA+PHAgPkEgZm9ydGhjb21pbmcgcmVwb3J0IGJ5IHRoZSBBbGdvcml0aG1pYyBKdXN0aWNlIExlYWd1ZSAoQUpMKSwgYSBwcml2YXRlIG5vbnByb2ZpdCwgcmVjb21tZW5kcyByZXF1aXJpbmcgZGlzY2xvc3VyZSB3aGVuIGFuIEFJIG1vZGVsIGlzIHVzZWQgYW5kIGNyZWF0aW5nIGEgcHVibGljIHJlcG9zaXRvcnkgb2YgaW5jaWRlbnRzIHdoZXJlIEFJIGNhdXNlZCBoYXJtLiBUaGUgcmVwb3NpdG9yeSBjb3VsZCBoZWxwIGF1ZGl0b3JzIHNwb3QgcG90ZW50aWFsIHByb2JsZW1zIHdpdGggYWxnb3JpdGhtcywgYW5kIGhlbHAgcmVndWxhdG9ycyBpbnZlc3RpZ2F0ZSBvciBmaW5lIHJlcGVhdCBvZmZlbmRlcnMuIEFKTCBmb3VuZGVyIEpveSBCdW9sYW13aW5pIGNvYXV0aG9yZWQgYW4gPGEgPmluZmx1ZW50aWFsIDIwMTggYXVkaXQ8L2E+IHRoYXQgZm91bmQgZmFjaWFsLXJlY29nbml0aW9uIGFsZ29yaXRobXMgd29yayBiZXN0IG9uIHdoaXRlIG1lbiBhbmQgd29yc3Qgb24gd29tZW4gd2l0aCBkYXJrIHNraW4uPC9wPjxwID5UaGUgcmVwb3J0IHNheXMgaXTigJlzIGNydWNpYWwgdGhhdCBhdWRpdG9ycyBiZSBpbmRlcGVuZGVudCBhbmQgcmVzdWx0cyBiZSBwdWJsaWNseSByZXZpZXdhYmxlLiBXaXRob3V0IHRob3NlIHNhZmVndWFyZHMsIOKAnHRoZXJl4oCZcyBubyBhY2NvdW50YWJpbGl0eSBtZWNoYW5pc20gYXQgYWxsLOKAnSBzYXlzIEFKTCBoZWFkIG9mIHJlc2VhcmNoIFNhc2hhIENvc3RhbnphLUNob2NrLiDigJxJZiB0aGV5IHdhbnQgdG8sIHRoZXkgY2FuIGp1c3QgYnVyeSBpdDsgaWYgYSBwcm9ibGVtIGlzIGZvdW5kLCB0aGVyZeKAmXMgbm8gZ3VhcmFudGVlIHRoYXQgaXTigJlzIGFkZHJlc3NlZC4gSXTigJlzIHRvb3RobGVzcywgaXTigJlzIHNlY3JldGl2ZSwgYW5kIHRoZSBhdWRpdG9ycyBoYXZlIG5vIGxldmVyYWdlLuKAnTwvcD48cCA+RGViIFJhamkgaXMgYSBmZWxsb3cgYXQgdGhlIEFKTCB3aG8gZXZhbHVhdGVzIGF1ZGl0cywgYW5kIHNoZSBwYXJ0aWNpcGF0ZWQgaW4gdGhlIDIwMTggYXVkaXQgb2YgZmFjaWFsLXJlY29nbml0aW9uIGFsZ29yaXRobXMuIFNoZSBjYXV0aW9ucyB0aGF0IEJpZyBUZWNoIGNvbXBhbmllcyBhcHBlYXIgdG8gYmUgdGFraW5nIGEgbW9yZSBhZHZlcnNhcmlhbCBhcHByb2FjaCB0byBvdXRzaWRlIGF1ZGl0b3JzLCBzb21ldGltZXMgdGhyZWF0ZW5pbmcgbGF3c3VpdHMgYmFzZWQgb24gcHJpdmFjeSBvciBhbnRpLWhhY2tpbmcgZ3JvdW5kcy4gSW4gQXVndXN0LCBGYWNlYm9vayA8YSA+cHJldmVudGVkIE5ZVSBhY2FkZW1pY3M8L2E+IGZyb20gbW9uaXRvcmluZyBwb2xpdGljYWwgYWQgc3BlbmRpbmcgYW5kIHRod2FydGVkIGVmZm9ydHMgYnkgYSBHZXJtYW4gcmVzZWFyY2hlciB0byBpbnZlc3RpZ2F0ZSB0aGUgSW5zdGFncmFtIGFsZ29yaXRobS48L3A+PHAgPlJhamkgY2FsbHMgZm9yIGNyZWF0aW5nIGFuIGF1ZGl0IG92ZXJzaWdodCBib2FyZCB3aXRoaW4gYSBmZWRlcmFsIGFnZW5jeSB0byBkbyB0aGluZ3MgbGlrZSBlbmZvcmNlIHN0YW5kYXJkcyBvciBtZWRpYXRlIGRpc3B1dGVzIGJldHdlZW4gYXVkaXRvcnMgYW5kIGNvbXBhbmllcy4gU3VjaCBhIGJvYXJkIGNvdWxkIGJlIGZhc2hpb25lZCBhZnRlciB0aGUgRmluYW5jaWFsIEFjY291bnRpbmcgU3RhbmRhcmRzIEJvYXJkIG9yIHRoZSBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9u4oCZcyBzdGFuZGFyZHMgZm9yIGV2YWx1YXRpbmcgbWVkaWNhbCBkZXZpY2VzLjwvcD48cCA+U3RhbmRhcmRzIGZvciBhdWRpdHMgYW5kIGF1ZGl0b3JzIGFyZSBpbXBvcnRhbnQgYmVjYXVzZSBncm93aW5nIGNhbGxzIHRvIHJlZ3VsYXRlIEFJIGhhdmUgbGVkIHRvIHRoZSBjcmVhdGlvbiBvZiBhIG51bWJlciBvZiA8YSA+YXVkaXRpbmcgc3RhcnR1cHM8L2E+LCBzb21lIGJ5IGNyaXRpY3Mgb2YgQUksIGFuZCBvdGhlcnMgdGhhdCBtaWdodCBiZSBtb3JlIGZhdm9yYWJsZSB0byB0aGUgY29tcGFuaWVzIHRoZXkgYXJlIGF1ZGl0aW5nLiBJbiAyMDE5LCBhIGNvYWxpdGlvbiBvZiBBSSByZXNlYXJjaGVycyBmcm9tIDMwIG9yZ2FuaXphdGlvbnMgPGEgPnJlY29tbWVuZGVkPC9hPiBvdXRzaWRlIGF1ZGl0cyBhbmQgcmVndWxhdGlvbiB0aGF0IGNyZWF0ZXMgYSBtYXJrZXRwbGFjZSBmb3IgYXVkaXRvcnMgYXMgcGFydCBvZiBidWlsZGluZyBBSSB0aGF0IHBlb3BsZSB0cnVzdCB3aXRoIHZlcmlmaWFibGUgcmVzdWx0cy48L3A+PHAgPkNhdGh5IE/igJlOZWlsIHN0YXJ0ZWQgYSBjb21wYW55LCBPJ05laWwgUmlzayBDb25zdWx0aW5nIEFsZ29yaXRobWljIEF1ZGl0aW5nIChPcmNhYSksIGluIHBhcnQgdG8gYXNzZXNzIEFJIHRoYXTigJlzIGludmlzaWJsZSBvciBpbmFjY2Vzc2libGUgdG8gdGhlIHB1YmxpYy4gRm9yIGV4YW1wbGUsIE9yY2FhIHdvcmtzIHdpdGggdGhlIGF0dG9ybmV5cyBnZW5lcmFsIG9mIGZvdXIgVVMgc3RhdGVzIHRvIGV2YWx1YXRlIGZpbmFuY2lhbCBvciBjb25zdW1lciBwcm9kdWN0IGFsZ29yaXRobXMuIEJ1dCBP4oCZTmVpbCBzYXlzIHNoZSBsb3NlcyBwb3RlbnRpYWwgY3VzdG9tZXJzIGJlY2F1c2UgY29tcGFuaWVzIHdhbnQgdG8gbWFpbnRhaW4gcGxhdXNpYmxlIGRlbmlhYmlsaXR5IGFuZCBkb27igJl0IHdhbnQgdG8ga25vdyBpZiBvciBob3cgdGhlaXIgQUkgaGFybXMgcGVvcGxlLjwvcD48cCA+RWFybGllciB0aGlzIHllYXIgT3JjYWEgcGVyZm9ybWVkIGFuIGF1ZGl0IG9mIGFuIGFsZ29yaXRobSB1c2VkIGJ5IEhpcmVWdWUgdG8gYW5hbHl6ZSBwZW9wbGXigJlzIGZhY2VzIGR1cmluZyBqb2IgaW50ZXJ2aWV3cy4gQSBwcmVzcyByZWxlYXNlIGJ5IHRoZSBjb21wYW55IGNsYWltZWQgdGhlIGF1ZGl0IGZvdW5kIG5vIGFjY3VyYWN5IG9yIGJpYXMgaXNzdWVzLCBidXQgdGhlIGF1ZGl0IG1hZGUgbm8gYXR0ZW1wdCB0byBhc3Nlc3MgdGhlIHN5c3RlbeKAmXMgY29kZSwgdHJhaW5pbmcgZGF0YSwgb3IgcGVyZm9ybWFuY2UgZm9yIGRpZmZlcmVudCBncm91cHMgb2YgcGVvcGxlLiA8YSA+Q3JpdGljcyBzYWlkPC9hPiBIaXJlVnVl4oCZcyBjaGFyYWN0ZXJpemF0aW9uIG9mIHRoZSBhdWRpdCB3YXMgbWlzbGVhZGluZyBhbmQgZGlzaW5nZW51b3VzLiBTaG9ydGx5IGJlZm9yZSB0aGUgcmVsZWFzZSBvZiB0aGUgYXVkaXQsIEhpcmVWdWUgc2FpZCBpdCB3b3VsZCBzdG9wIHVzaW5nIHRoZSBBSSBpbiB2aWRlbyBqb2IgaW50ZXJ2aWV3cy48L3A+PHAgPk/igJlOZWlsIHRoaW5rcyBhdWRpdHMgY2FuIGJlIHVzZWZ1bCwgYnV0IHNoZSBzYXlzIGluIHNvbWUgcmVzcGVjdHMgaXTigJlzIHRvbyBlYXJseSB0byB0YWtlIHRoZSBhcHByb2FjaCBwcmVzY3JpYmVkIGJ5IHRoZSBBSkwsIGluIHBhcnQgYmVjYXVzZSB0aGVyZSBhcmUgbm8gc3RhbmRhcmRzIGZvciBhdWRpdHMgYW5kIHdlIGRvbuKAmXQgZnVsbHkgdW5kZXJzdGFuZCB0aGUgd2F5cyBpbiB3aGljaCBBSSBoYXJtcyBwZW9wbGUuIEluc3RlYWQsIE/igJlOZWlsIGZhdm9ycyBhbm90aGVyIGFwcHJvYWNoOiBhbGdvcml0aG1pYyBpbXBhY3QgYXNzZXNzbWVudHMuPC9wPjxwID5XaGlsZSBhbiBhdWRpdCBtYXkgZXZhbHVhdGUgdGhlIG91dHB1dCBvZiBhbiBBSSBtb2RlbCB0byBzZWUgaWYsIGZvciBleGFtcGxlLCBpdCB0cmVhdHMgbWVuIGRpZmZlcmVudGx5IHRoYW4gd29tZW4sIGFuIGltcGFjdCBhc3Nlc3NtZW50IG1heSBmb2N1cyBtb3JlIG9uIGhvdyBhbiBhbGdvcml0aG0gd2FzIGRlc2lnbmVkLCB3aG8gY291bGQgYmUgaGFybWVkLCBhbmQgd2hv4oCZcyByZXNwb25zaWJsZSBpZiB0aGluZ3MgZ28gd3JvbmcuIEluIENhbmFkYSwgYnVzaW5lc3NlcyBtdXN0IGFzc2VzcyB0aGUgcmlzayB0byBpbmRpdmlkdWFscyBhbmQgY29tbXVuaXRpZXMgb2YgZGVwbG95aW5nIGFuIGFsZ29yaXRobTsgaW4gdGhlIFVTLCBhc3Nlc3NtZW50cyBhcmUgYmVpbmcgZGV2ZWxvcGVkIHRvIGRlY2lkZSA8YSA+d2hlbiBBSSBpcyBsb3ctIG9yIGhpZ2gtcmlzazwvYT4gYW5kIHRvIDxhID5xdWFudGlmeSBob3cgbXVjaCBwZW9wbGUgdHJ1c3QgQUk8L2E+LjwvcD48cCA+VGhlIGlkZWEgb2YgbWVhc3VyaW5nIGltcGFjdCBhbmQgcG90ZW50aWFsIGhhcm0gYmVnYW4gaW4gdGhlIDE5NzBzIHdpdGggdGhlIE5hdGlvbmFsIEVudmlyb25tZW50YWwgUHJvdGVjdGlvbiBBY3QsIHdoaWNoIGxlZCB0byB0aGUgY3JlYXRpb24gb2YgZW52aXJvbm1lbnRhbCBpbXBhY3Qgc3RhdGVtZW50cy4gVGhvc2UgcmVwb3J0cyB0YWtlIGludG8gYWNjb3VudCBmYWN0b3JzIGZyb20gcG9sbHV0aW9uIHRvIHRoZSBwb3RlbnRpYWwgZGlzY292ZXJ5IG9mIGFuY2llbnQgYXJ0aWZhY3RzOyBzaW1pbGFybHkgaW1wYWN0IGFzc2Vzc21lbnRzIGZvciBhbGdvcml0aG1zIHdvdWxkIGNvbnNpZGVyIGEgYnJvYWQgcmFuZ2Ugb2YgZmFjdG9ycy48L3A+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiA+PGRpdiA+PGRpdiA+PHAgPlVDTEEgbGF3IHByb2Zlc3NvciBBbmRyZXcgU2VsYnN0IHdhcyBvbmUgb2YgdGhlIGZpcnN0IHRvIHN1Z2dlc3QgaW1wYWN0IGFzc2Vzc21lbnRzIGZvciBhbGdvcml0aG1zLiBUaGUgQUkgTm93IEluc3RpdHV0ZSwgc2V2ZXJhbCBvZiB3aG9zZSBrZXkgcGxheWVycyBub3cgYWR2aXNlIHRoZSBGVEMsIGVuZG9yc2VkIGEgc2ltaWxhciBhcHByb2FjaCBieSBmZWRlcmFsIGFnZW5jaWVzIGluIDIwMTguPC9wPjxwID5JbiBhIDxhID5wYXBlciBmb3J0aGNvbWluZzwvYT4gaW4gdGhlIEhhcnZhcmQgSm91cm5hbCBvZiBMYXcgVGVjaG5vbG9neSwgU2VsYnN0IGNoYW1waW9ucyBkb2N1bWVudGF0aW9uIGJlY2F1c2Ugd2UgZG9u4oCZdCB5ZXQgZnVsbHkgdW5kZXJzdGFuZCBob3cgQUkgaGFybXMgcGVvcGxlLiBSZXNlYXJjaCBpbnRvIGFsZ29yaXRobWljIGhhcm0gaXMgb25seSBhIGZldyB5ZWFycyBvbGQsIGFuZCB2ZXJ5IGxpdHRsZSBpcyBrbm93biBhYm91dCBBSeKAmXMgaW1wYWN0IG9uIGdyb3VwcyBzdWNoIGFzIDxhID5wZW9wbGUgd2hvIGlkZW50aWZ5IGFzIHF1ZWVyPC9hPiwgZm9yIGV4YW1wbGUuIERvY3VtZW50YXRpb24gb2YgaW1wYWN0IGFzc2Vzc21lbnRzLCBoZSBzYWlkLCB3aWxsIGJlIG5lY2Vzc2FyeSBmb3IgcGVvcGxlIGludGVyZXN0ZWQgaW4gZmlsaW5nIGxhd3N1aXRzLjwvcD48cCA+4oCcV2UgbmVlZCB0byBrbm93IGhvdyB0aGUgbWFueSBzdWJqZWN0aXZlIGRlY2lzaW9ucyB0aGF0IGdvIGludG8gYnVpbGRpbmcgYSBtb2RlbCBsZWFkIHRvIHRoZSBvYnNlcnZlZCByZXN1bHRzLCBhbmQgd2h5IHRob3NlIGRlY2lzaW9ucyB3ZXJlIHRob3VnaHQganVzdGlmaWVkIGF0IHRoZSB0aW1lLCBqdXN0IHRvIGhhdmUgYSBjaGFuY2UgYXQgZGlzZW50YW5nbGluZyBldmVyeXRoaW5nIHdoZW4gc29tZXRoaW5nIGdvZXMgd3Jvbmcs4oCdIHRoZSBwYXBlciByZWFkcy4g4oCcQWxnb3JpdGhtaWMgaW1wYWN0IGFzc2Vzc21lbnRzIGNhbm5vdCBzb2x2ZSBhbGwgYWxnb3JpdGhtaWMgaGFybXMsIGJ1dCB0aGV5IGNhbiBwdXQgdGhlIGZpZWxkIGFuZCByZWd1bGF0b3JzIGluIGJldHRlciBwb3NpdGlvbnMgdG8gYXZvaWQgdGhlIGhhcm1zIGluIHRoZSBmaXJzdCBwbGFjZSBhbmQgdG8gYWN0IG9uIHRoZW0gb25jZSB3ZSBrbm93IG1vcmUu4oCdPC9wPjxwID5BIHJldmFtcGVkIHZlcnNpb24gb2YgdGhlIEFsZ29yaXRobWljIEFjY291bnRhYmlsaXR5IEFjdCwgZmlyc3QgaW50cm9kdWNlZCBpbiAyMDE5LCBpcyBub3cgYmVpbmcgZGlzY3Vzc2VkIGluIENvbmdyZXNzLiBBY2NvcmRpbmcgdG8gYSBkcmFmdCB2ZXJzaW9uIG9mIHRoZSBsZWdpc2xhdGlvbiByZXZpZXdlZCBieSBXSVJFRCwgdGhlIGJpbGwgd291bGQgcmVxdWlyZSBidXNpbmVzc2VzIHRoYXQgdXNlIGF1dG9tYXRlZCBkZWNpc2lvbm1ha2luZyBzeXN0ZW1zIGluIGFyZWFzIHN1Y2ggYXMgaGVhbHRoIGNhcmUsIGhvdXNpbmcsIGVtcGxveW1lbnQsIG9yIGVkdWNhdGlvbiB0byBjYXJyeSBvdXQgaW1wYWN0IGFzc2Vzc21lbnRzIGFuZCByZWd1bGFybHkgcmVwb3J0IHJlc3VsdHMgdG8gdGhlIEZUQy4gQSBzcG9rZXNwZXJzb24gZm9yIFNlbmF0b3IgUm9uIFd5ZGVuIChELU9yZWdvbiksIGEgY29zcG9uc29yIG9mIHRoZSBiaWxsLCBzYXlzIGl0IGNhbGxzIG9uIHRoZSBGVEMgdG8gY3JlYXRlIGEgcHVibGljIHJlcG9zaXRvcnkgb2YgYXV0b21hdGVkIGRlY2lzaW9ubWFraW5nIHN5c3RlbXMgYW5kIGFpbXMgdG8gZXN0YWJsaXNoIGFuIGFzc2Vzc21lbnQgcHJvY2VzcyB0byBlbmFibGUgZnV0dXJlIHJlZ3VsYXRpb24gYnkgQ29uZ3Jlc3Mgb3IgYWdlbmNpZXMgbGlrZSB0aGUgRlRDLiBUaGUgZHJhZnQgYXNrcyB0aGUgRlRDIHRvIGRlY2lkZSB3aGF0IHNob3VsZCBiZSBpbmNsdWRlZCBpbiBpbXBhY3QgYXNzZXNzbWVudHMgYW5kIHN1bW1hcnkgcmVwb3J0cy48L3A+PHAgPkZpb25hIFNjb3R0IE1vcnRvbiBpcyBhIHByb2Zlc3NvciBhdCB0aGUgWWFsZSBVbml2ZXJzaXR5IFNjaG9vbCBvZiBNYW5hZ2VtZW50IGFuZCBzZXJ2ZWQgYXMgY2hpZWYgZWNvbm9taXN0IGluIHRoZSBVUyBEZXBhcnRtZW50IG9mIEp1c3RpY2UgZHVyaW5nIHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbi4gU2hlIGJlbGlldmVzIHRvb2xzIHN1Y2ggYXMgYXVkaXRzIG9yIGFzc2Vzc21lbnRzIGNvdWxkIGNoYW5nZSBob3cgY29tcGFuaWVzIGJ1aWxkaW5nIEFJIGFyZSBzZWVuIGJ5IGNvdXJ0cyBhbmQganVkZ2VzLCBiZWNhdXNlIGl04oCZcyBlYXNpZXIgdG8gc2F5IGFuIGluc3RhbmNlIG9mIGhhcm0gY2F1c2VkIGJ5IEFJIHdhcyBhbiBhY2NpZGVudCB0aGFuIGl0IGlzIHRvIHJlZnV0ZSBkb2N1bWVudGF0aW9uIGZyb20gYW4gYXVkaXQgb3IgaW1wYWN0IGFzc2Vzc21lbnQuIEJ1dCBNb3J0b24gdGhpbmtzIGl0J3MgdW5saWtlbHkgQ29uZ3Jlc3Mgd2lsbCByZXF1aXJlIGF1ZGl0cyBvZiBhbGdvcml0aG1zOyBzaGUgdGhpbmtzIGNoYW5nZSBpcyBtb3JlIGxpa2VseSBmcm9tIGEgQmlkZW4gYWRtaW5pc3RyYXRpb24gZXhlY3V0aXZlIG9yZGVyIG9yIGRpcmVjdGl2ZXMgYnkgZmVkZXJhbCBhZ2VuY2llcy48L3A+PHAgPlRocm91Z2hvdXQgdGhlIHBhc3QgeWVhciwgcGVvcGxlIHdpdGggZXhwZXJpZW5jZSBkb2N1bWVudGluZyBob3cgQUkgY2FuIGNhdXNlIGhhcm0gaGF2ZSBoaWdobGlnaHRlZCB0aGUgc3RlcHMgdGhleSBmZWVsIGFyZSBuZWNlc3NhcnkgZm9yIGF1ZGl0cyBhbmQgaW1wYWN0IGFzc2Vzc21lbnRzIHRvIHN1Y2NlZWQgYW5kIGhvdyB0aGV5IGNhbiBmYWlsLiBTb21lIGRyYXcgbGVzc29ucyBmcm9tIGluaXRpYWwgZWZmb3J0cyB0byByZWd1bGF0ZSBBSSBhcm91bmQgdGhlIHdvcmxkIGFuZCBwYXN0IGVmZm9ydHMgdG8gcHJvdGVjdCBwZW9wbGUgb3IgdGhlIGVudmlyb25tZW50IGZyb20gZGFuZ2Vyb3VzIHRlY2hub2xvZ3kuPC9wPjxwID5JbiBBdWd1c3QsIHRoZSBDZW50ZXIgZm9yIExvbmctVGVybSBDeWJlcnNlY3VyaXR5IGF0IFVDIEJlcmtlbGV5IHN1Z2dlc3RlZCB0aGF0IGEgcmlzayBhc3Nlc3NtZW50IHRvb2wgZm9yIGV2YWx1YXRpbmcgQUkgYmVpbmcgZGV2ZWxvcGVkIGJ5IHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgaW5jbHVkZSBmYWN0b3JzIHN1Y2ggYXMgYSBzeXN0ZW3igJlzIGNhcmJvbiBmb290cHJpbnQgYW5kIHRoZSBwb3RlbnRpYWwgdG8gZXhhY2VyYmF0ZSBpbmVxdWFsaXR5OyB0aGUgY2VudGVyIHN1Z2dlc3RlZCB0aGUgZ292ZXJubWVudCB0YWtlIGEgc3Ryb25nZXIgYXBwcm9hY2ggb24gQUkgdGhhbiBpdCBkaWQgZm9yIGN5YmVyc2VjdXJpdHkuIFRoZSBBSkwgYWxzbyBzZWVzIGxlc3NvbnMgaW4gY3liZXJzZWN1cml0eSBwcmFjdGljZXMuIEEgZm9ydGhjb21pbmcgcmVwb3J0IGNvYXV0aG9yZWQgYnkgUmFqaSBjYWxscyBmb3IgYnVzaW5lc3NlcyB0byBjcmVhdGUgcHJvY2Vzc2VzIHRvIGhhbmRsZSBpbnN0YW5jZXMgb2YgQUkgaGFybSBha2luIHRvIHRoZSB3YXkgSVQgc2VjdXJpdHkgd29ya2VycyB0cmVhdCBidWdzIGFuZCBzZWN1cml0eSBwYXRjaCB1cGRhdGVzLiBTb21lIG9mIEFKTOKAmXMgcmVjb21tZW5kYXRpb25z4oCUdGhhdCBjb21wYW5pZXMgc2hvdWxkIG9mZmVyIDxhID5iaWFzIGJvdW50aWVzPC9hPiwgcHVibGljbHkgcmVwb3J0IG1ham9yIGluY2lkZW50cywgYW5kIGRldmVsb3AgaW50ZXJuYWwgc3lzdGVtcyBmb3IgdGhlIGVzY2FsYXRpb24gb2YgaGFybSBpbmNpZGVudHPigJRhcmUgZHJhd24gZnJvbSBjeWJlcnNlY3VyaXR5LjwvcD48cCA+SW4gYSA8YSA+cmVwb3J0PC9hPiBlYXJsaWVyIHRoaXMgeWVhciwgcmVzZWFyY2hlcnMgYXQgQ29ybmVsbCBVbml2ZXJzaXR5IGFuZCBNaWNyb3NvZnQgUmVzZWFyY2ggc3VnZ2VzdCBBSSBhdWRpdG9ycyBsZWFybiBmcm9tIGhvdyBzb2Npb2xvZ2lzdHMgd29ya2VkIHdpdGggY29tbXVuaXRpZXMgaW4gdGhlIDE5NDBzIGFuZCAxOTUwcyB0byBkb2N1bWVudCBpbnN0YW5jZXMgb2YgZGlzY3JpbWluYXRpb24gaW4gaG91c2luZyBhbmQgaGlyaW5nIGFwcGxpY2F0aW9ucy48L3A+PC9kaXY+PC9kaXY+PC9kaXY+PGRpdiA+PGRpdiA+PGRpdiA+PHAgPlRoZSBhdXRob3JzIHN1Z2dlc3QgdGhhdCBhbGdvcml0aG0gYXVkaXRvcnMgbG9vayBmb3IgbW9yZSBjb2xsYWJvcmF0aXZlIHdheXMgdG8gaW52b2x2ZSBjb21tdW5pdGllcyBhbmQgc29jaWV0eSBpbiBhc3Nlc3NpbmcgQUkgc3lzdGVtcy4gUGVvcGxlIHdpdGggbm8gZXhwZXJpZW5jZSBpbiBtYWNoaW5lIGxlYXJuaW5nIGhhdmUgaWRlbnRpZmllZCBwcm9ibGVtcyB3aXRoIEFJIGluIHRoZSBwYXN0LiBMYXN0IHllYXIsIHVzZXJzIGhlbHBlZCB1bmNvdmVyIGJpYXMgdGhhdCBkaXNjcmltaW5hdGVzIGFnYWluc3QgcGVvcGxlIHdpdGggZGFyayBza2luIG9uIFR3aXR0ZXIgYW5kIFpvb20uIFRoZXNlIGRpc2NvdmVyaWVzIGxlZCBab29tIHRvIHR3ZWFrIGl0cyBhbGdvcml0aG0gYW5kIDxhID5Ud2l0dGVyIHRvIGVuZCB1c2Ugb2YgaXRzIEFJPC9hPiBmb3IgY3JvcHBpbmcgcGhvdG9zLjwvcD48cCA+QW5vdGhlciA8YSA+cmVwb3J0PC9hPiwgcmVsZWFzZWQgaW4gSnVuZSBieSB0aGUgQUkgb24gdGhlIEdyb3VuZCB0ZWFtIGF0IERhdGEgU29jaWV0eSwgYXJndWVzIHRoYXQgY29tbXVuaXR5IGFjdGl2aXN0cywgY3JpdGljYWwgc2Nob2xhcnMsIHBvbGljeW1ha2VycywgYW5kIHRlY2hub2xvZ2lzdHMgd29ya2luZyBmb3IgdGhlIHB1YmxpYyBpbnRlcmVzdCBzaG91bGQgYmUgaW52b2x2ZWQgaW4gYXNzZXNzaW5nIGFsZ29yaXRobXMuIFRoZSByZXBvcnQgc2F5cyB3aGF0IGNvdW50cyBhcyBhbiBpbXBhY3Qgb2Z0ZW4gcmVmbGVjdHMgdGhlIHdhbnRzIGFuZCBuZWVkcyBvZiBwZW9wbGUgaW4gcG93ZXIuIERvbmUgd3JvbmcsIHRoZXkgc2F5LCBpbXBhY3QgYXNzZXNzbWVudHMgY2FuIHJlcGxpY2F0ZSBleGlzdGluZyBwb3dlciBzdHJ1Y3R1cmVzIHdoaWxlIGFsbG93aW5nIGJ1c2luZXNzZXMgYW5kIGdvdmVybm1lbnRzIHRvIGFwcGVhciBhY2NvdW50YWJsZSwgaW5zdGVhZCBvZiBnaXZpbmcgcmVndWxhciBwZW9wbGUgYSB3YXkgdG8gYWN0IHdoZW4gdGhpbmdzIGdvIHdyb25nLjwvcD48cCA+QmFjayBpbiBOZXcgWW9yaywgU3RveWFub3ZpY2ggc2F5cyBzaGUgaG9wZXMgdGhlIGRpc2Nsb3N1cmUgcHJvdmlzaW9uIGluIHRoZSBuZXcgY2l0eSBsYXcgc3RhcnRzIGEgbW92ZW1lbnQgdG93YXJkIG1lYW5pbmdmdWwgZW1wb3dlcm1lbnQgb2YgaW5kaXZpZHVhbHMsIGVzcGVjaWFsbHkgd2hlbiBpdCBjb21lcyB0byBpbnN0YW5jZXMgd2hlbiBhIHBlcnNvbuKAmXMgbGl2ZWxpaG9vZCBvciBmcmVlZG9tIGFyZSBhdCBzdGFrZS4gU2hlIGFkdm9jYXRlcyBwdWJsaWMgaW5wdXQgaW4gYXVkaXRzIG9mIGFsZ29yaXRobXMuPC9wPjxwID7igJxJIHJlYWxseSBiZWxpZXZlIHRoYXQgdGhpcyBjYW5ub3QgYmUgYSBzcGFjZSB3aGVyZSBhbGwgdGhlIGRlY2lzaW9ucyBhbmQgZml4aW5nIGNvbWVzIGZyb20gYSBoYW5kZnVsIG9mIGV4cGVydCBlbnRpdGllcyzigJ0gc2hlIHNheXMuIOKAnFRoZXJlIG5lZWRzIHRvIGJlIGEgcHVibGljIG1vdmVtZW50IGhlcmUuIFVubGVzcyB0aGUgcHVibGljIGFwcGxpZXMgcHJlc3N1cmUsIHdlIHdvbid0IGJlIGFibGUgdG8gcmVndWxhdGUgdGhpcyBpbiBhbnkgd2F5IHRoYXTigJlzIG1lYW5pbmdmdWwsIGFuZCBidXNpbmVzcyBpbnRlcmVzdHMgd2lsbCBhbHdheXMgcHJldmFpbC7igJ08L3A+PHAgPlVwZGF0ZWQsIDEyLTItMjEsIDJwbSBFVDogQW4gZWFybGllciB2ZXJzaW9uIG9mIHRoaXMgYXJ0aWNsZSBpbmNvcnJlY3RseSBzYWlkIEp1bGlhIFN0b3lhbm92aWNoIHNlcnZlcyBvbiBOZXcgWW9yaydzIEF1dG9tYXRlZCBEZWNpc2lvbiBTeXN0ZW1zIFRhc2sgRm9yY2UsIGFuZCB0aGF0IHRoZSBoaXJpbmcgdG9vbCBzaGUgYW5kIGhlciBzdHVkZW50cyByZXZpZXdlZCBnYXVnZWQgYXBwbGljYW50cyBiYXNlZCBvbiB0aGUgZm9udCB1c2VkIGluIHRoZWlyIHLDqXN1bcOpLsKgPC9wPjxkaXYgPk1vcmUgR3JlYXQgV0lSRUQgU3RvcmllczwvZGl2Pjx1bCA+PGxpPvCfk6kgVGhlIGxhdGVzdCBvbiB0ZWNoLCBzY2llbmNlLCBhbmQgbW9yZTogPGEgPkdldCBvdXIgbmV3c2xldHRlcnM8L2E+ITwvbGk+PGxpPkF0IHRoZSBlbmQgb2YgdGhlIHdvcmxkLCBpdOKAmXMgPGEgPmh5cGVyb2JqZWN0cyBhbGwgdGhlIHdheSBkb3duPC9hPjwvbGk+PGxpPkNhcnMgYXJlIGdvaW5nIGVsZWN0cmljLiA8YSA+V2hhdCBoYXBwZW5zIHRvIHVzZWQgYmF0dGVyaWVzPC9hPj88L2xpPjxsaT5GaW5hbGx5LCBhIHByYWN0aWNhbCB1c2UgPGEgPmZvciBudWNsZWFyIGZ1c2lvbjwvYT48L2xpPjxsaT48YSA+VGhlIG1ldGF2ZXJzZSBpcyBzaW1wbHkgQmlnIFRlY2g8L2E+LCBidXQgYmlnZ2VyPC9saT48bGk+PGEgPkFuYWxvZyBnaWZ0cyBmb3IgcGVvcGxlPC9hPiB3aG8gbmVlZCBhIGRpZ2l0YWwgZGV0b3g8L2xpPjxsaT7wn5GB77iPIEV4cGxvcmUgQUkgbGlrZSBuZXZlciBiZWZvcmUgd2l0aCA8YSA+b3VyIG5ldyBkYXRhYmFzZTwvYT48L2xpPjxsaT7wn5K7IFVwZ3JhZGUgeW91ciB3b3JrIGdhbWUgd2l0aCBvdXIgR2VhciB0ZWFt4oCZcyA8YSA+ZmF2b3JpdGUgbGFwdG9wczwvYT4sIDxhID5rZXlib2FyZHM8L2E+LCA8YSA+dHlwaW5nIGFsdGVybmF0aXZlczwvYT4sIGFuZCA8YSA+bm9pc2UtY2FuY2VsaW5nIGhlYWRwaG9uZXM8L2E+PC9saT48L3VsPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvYXJ0aWNsZT48ZGl2ID48ZGl2ID48ZGl2ID48ZGl2ID48ZGl2ID48ZGl2ID48ZGl2ID48YSA+S2hhcmkgSm9obnNvbjwvYT4gaXMgYSBzZW5pb3Igd3JpdGVyIGZvciBXSVJFRCBjb3ZlcmluZyBhcnRpZmljaWFsIGludGVsbGlnZW5jZSBhbmQgdGhlIHBvc2l0aXZlIGFuZCBuZWdhdGl2ZSB3YXlzIEFJIHNoYXBlcyBodW1hbiBsaXZlcy4gSGUgd2FzIHByZXZpb3VzbHkgYSBzZW5pb3Igd3JpdGVyIGF0IFZlbnR1cmVCZWF0LCB3aGVyZSBoZSB3cm90ZSBzdG9yaWVzIGFib3V0IHBvd2VyLCBwb2xpY3ksIGFuZCBub3ZlbCBvciBub3Rld29ydGh5IHVzZXMgb2YgQUkgYnkgYnVzaW5lc3NlcyBhbmQgZ292ZXJubWVudHMuIEhlIGlzIGJhc2VkLi4uIDxhID5SZWFkIG1vcmU8L2E+PC9kaXY+PGRpdiA+U2VuaW9yIFdyaXRlcjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjxkaXYgPjxkaXYgPjxkaXYgPlRvcGljczxhID5hcnRpZmljaWFsIGludGVsbGlnZW5jZTwvYT48YSA+YWxnb3JpdGhtczwvYT48YSA+bWFjaGluZSBsZWFybmluZzwvYT48YSA+ZXRoaWNzPC9hPjxhID5SZWd1bGF0aW9uPC9hPjwvZGl2PjwvZGl2PjwvZGl2PjwvZGl2PjwvbWFpbj48L2Rpdj48L2Rpdj48L2JvZHk+","title":"58","article":"82"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Famazon-warehouse-robots-worker-shortage%2F","text":"","title":"58","article":"97"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Fex-googler-timnit-gebru-starts-ai-research-center%2F","text":"","title":"58","article":"97"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Ffuture-of-reality-cybercities%2F","text":"","title":"73","article":"143"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Freimagine-future-cyberpunk%2F","text":"","title":"73","article":"143"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Ftickets-for-the-simulation%2F","text":"","title":"73","article":"143"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Fmatrix-best-hacker-movie%2F","text":"","title":"73","article":"144"}
{"url":"https%3A%2F%2Fwww.wired.com%2Fstory%2Ffuture-of-reality-matrix-opener%2F","text":"","title":"73","article":"146"}
