{"url":"https://www.nybooks.com/articles/2021/08/19/speculative-bubbles-waiting-to-deflate/","text":"","title":"145","article":"177"}
{"url":"https://www.nybooks.com/articles/2021/08/19/katherine-angel-sex-burden-of-yes/","text":"","title":"146","article":"183"}
{"url":"https://www.nybooks.com/articles/2021/08/19/katherine-angel-sex-burden-of-yes/","text":"","title":"146","article":"183"}
{"url":"https://www.nybooks.com/articles/2021/11/18/law-justice-making-room-for-forgiveness/","text":"PGJvZHkgPiA8ZGl2ID4gPGRpdiA+IDxwID5BZHZlcnRpc2VtZW50PC9wPiA8L2Rpdj4gPC9kaXY+IDxoZWFkZXIgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGEgPiBQb2xpdGljcyA8L2E+IDxhID4gTGl0ZXJhdHVyZSA8L2E+IDxhID4gQXJ0cyA8L2E+IDxhID4gSWRlYXMgPC9hPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8YSA+IFNpZ24gSW4gPC9hPiA8YSA+U3Vic2NyaWJlPC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8YSA+IFBvbGl0aWNzIDwvYT4gPGEgPiBMaXRlcmF0dXJlIDwvYT4gPGEgPiBBcnRzIDwvYT4gPGEgPiBJZGVhcyA8L2E+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGEgPiBQb2xpdGljcyA8L2E+IDxhID4gVW5pdGVkIFN0YXRlcyA8L2E+IDxhID4gSW50ZXJuYXRpb25hbCA8L2E+IDxhID4gSHVtYW4gUmlnaHRzIDwvYT4gPGEgPiBDbGltYXRlIENoYW5nZSA8L2E+IDwvZGl2PiA8ZGl2ID4gPGEgPiBMaXRlcmF0dXJlIDwvYT4gPGEgPiBGaWN0aW9uIDwvYT4gPGEgPiBQb2V0cnkgPC9hPiA8YSA+IEJpb2dyYXBoeSBNZW1vaXIgPC9hPiA8YSA+IEluIFRyYW5zbGF0aW9uIDwvYT4gPGEgPiBFc3NheXMgPC9hPiA8L2Rpdj4gPGRpdiA+IDxhID4gQXJ0cyA8L2E+IDxhID4gVmlzdWFsIEFydHMgPC9hPiA8YSA+IFBlcmZvcm1pbmcgQXJ0cyA8L2E+IDxhID4gRmlsbSBUZWxldmlzaW9uIDwvYT4gPGEgPiBNdXNpYyA8L2E+IDxhID4gU29jaWV0eSBDdWx0dXJlIDwvYT4gPC9kaXY+IDxkaXYgPiA8YSA+IElkZWFzIDwvYT4gPGEgPiBIaXN0b3J5IDwvYT4gPGEgPiBFY29ub21pY3MgPC9hPiA8YSA+IFNjaWVuY2UgVGVjaG5vbG9neSA8L2E+IDxhID4gTGF3IDwvYT4gPGEgPiBQaGlsb3NvcGh5IFJlbGlnaW9uIDwvYT4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8cCA+TW9yZSBmcm9tIHRoZSBSZXZpZXc8L3A+IDxkaXYgPiA8ZGl2ID4gPGEgPiBBYm91dCBVcyA8L2E+IDxhID4gQWxsIElzc3VlcyA8L2E+IDwvZGl2PiA8ZGl2ID4gPGEgPiBTaG9wIDwvYT4gPGEgPiBCb29rcyA8L2E+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8cCA+U3Vic2NyaWJlIHRvIG91ciBOZXdzbGV0dGVyPC9wPiA8cCA+QmVzdCBvZiBUaGUgTmV3IFlvcmsgUmV2aWV3LCBwbHVzIGJvb2tzLCBldmVudHMsIGFuZCBvdGhlciBpdGVtcyBvZiBpbnRlcmVzdDwvcD4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxwID5EZWNlbWJlciAyLCAyMDIxPC9wPiA8cCA+Q3VycmVudCBJc3N1ZTwvcD4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGEgPlNpZ24gSW48L2E+IDxhID5TdWJzY3JpYmU8L2E+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxhID5Qb2xpdGljczwvYT4gPC9kaXY+IDxkaXYgPiA8YSA+VW5pdGVkIFN0YXRlczwvYT4gPGEgPkludGVybmF0aW9uYWw8L2E+IDxhID5IdW1hbiBSaWdodHM8L2E+IDxhID5DbGltYXRlIENoYW5nZTwvYT4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxhID5MaXRlcmF0dXJlPC9hPiA8L2Rpdj4gPGRpdiA+IDxhID5GaWN0aW9uPC9hPiA8YSA+UG9ldHJ5PC9hPiA8YSA+QmlvZ3JhcGh5IE1lbW9pcjwvYT4gPGEgPkluIFRyYW5zbGF0aW9uPC9hPiA8YSA+RXNzYXlzPC9hPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGEgPkFydHM8L2E+IDwvZGl2PiA8ZGl2ID4gPGEgPlZpc3VhbCBBcnRzPC9hPiA8YSA+UGVyZm9ybWluZyBBcnRzPC9hPiA8YSA+RmlsbSBUZWxldmlzaW9uPC9hPiA8YSA+TXVzaWM8L2E+IDxhID5Tb2NpZXR5IEN1bHR1cmU8L2E+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8YSA+SWRlYXM8L2E+IDwvZGl2PiA8ZGl2ID4gPGEgPkhpc3Rvcnk8L2E+IDxhID5FY29ub21pY3M8L2E+IDxhID5TY2llbmNlIFRlY2hub2xvZ3k8L2E+IDxhID5MYXc8L2E+IDxhID5QaGlsb3NvcGh5IFJlbGlnaW9uPC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxhID4gPGRpdiA+IDxkaXYgPiA8cCA+Q3VycmVudCBJc3N1ZTwvcD4gPC9kaXY+IDwvZGl2PiA8L2E+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxwID5Nb3JlIGZyb20gdGhlIFJldmlldzwvcD4gPC9kaXY+IDxkaXYgPiA8YSA+QWJvdXQgVXM8L2E+IDxhID5BbGwgSXNzdWVzPC9hPiA8L2Rpdj4gPGRpdiA+IDxhID4gU2hvcCA8L2E+IDxhID4gQm9va3MgPC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2hlYWRlcj4gPGhlYWRlciA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8aDEgPk1ha2luZyBSb29tIGZvciBGb3JnaXZlbmVzczwvaDE+IDxkaXYgPiA8YSA+U2FyYWggTHVzdGJhZGVyPC9hPjwvZGl2PiA8ZGl2ID4gRXZlbiBpZiB2aWN0aW1zIG9yIHRoZWlyIGZhbWlsaWVzIGRlY2lkZSB0byBmb3JnaXZlLCB0aGUgbGF3IHJhcmVseSBkb2VzLiA8L2Rpdj4gPGRpdiA+IDx0aW1lPiA8cCA+IDxhID5Ob3ZlbWJlciAxOCwgMjAyMSBpc3N1ZTwvYT4gPC9wPiA8L3RpbWU+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPHAgPkplc3NlIEtyaW1lczwvcD4gPHAgPkplc3NlIEtyaW1lczogPGk+QXBva2FsdXB0ZWluOjE2Mzg5MDY3OklJPC9pPiwgYW4gaW5zdGFsbGF0aW9uIGF0IEVhc3Rlcm4gU3RhdGUgUGVuaXRlbnRpYXJ5IEhpc3RvcmljIFNpdGUsIFBoaWxhZGVscGhpYSwgMjAxNTsgZnJvbSBOaWNvbGUgUi4gRmxlZXR3b29k4oCZcyA8aT5NYXJraW5nIFRpbWU6IEFydCBpbiB0aGUgQWdlIG9mIE1hc3MgSW5jYXJjZXJhdGlvbjwvaT4sIHB1Ymxpc2hlZCBsYXN0IHllYXIgYnkgSGFydmFyZCBVbml2ZXJzaXR5IFByZXNzPC9wPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPHAgPkplc3NlIEtyaW1lczwvcD4gPHAgPkplc3NlIEtyaW1lczogPGk+QXBva2FsdXB0ZWluOjE2Mzg5MDY3OklJPC9pPiwgYW4gaW5zdGFsbGF0aW9uIGF0IEVhc3Rlcm4gU3RhdGUgUGVuaXRlbnRpYXJ5IEhpc3RvcmljIFNpdGUsIFBoaWxhZGVscGhpYSwgMjAxNTsgZnJvbSBOaWNvbGUgUi4gRmxlZXR3b29k4oCZcyA8aT5NYXJraW5nIFRpbWU6IEFydCBpbiB0aGUgQWdlIG9mIE1hc3MgSW5jYXJjZXJhdGlvbjwvaT4sIHB1Ymxpc2hlZCBsYXN0IHllYXIgYnkgSGFydmFyZCBVbml2ZXJzaXR5IFByZXNzPC9wPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2hlYWRlcj4gPHNlY3Rpb24gPiA8YXJ0aWNsZSA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8cCA+U3VibWl0IGEgbGV0dGVyOjwvcD4gPHAgPkVtYWlsIHVzIDxhID5sZXR0ZXJzQG55Ym9va3MuY29tPC9hPjwvcD4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8cCA+UmV2aWV3ZWQ6PC9wPiA8YXJ0aWNsZSA+IDxwID4gPGEgPiBXaGVuIFNob3VsZCBMYXcgRm9yZ2l2ZT88L2E+IDwvcD4gPGRpdiA+YnkgTWFydGhhIE1pbm93PC9kaXY+IDxkaXYgPk5vcnRvbiwgMjUyIHBwLiwgJDI3Ljk1OyAkMTcuOTUgKHBhcGVyKTwvZGl2PiA8L2FydGljbGU+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxwPk9uZSBuaWdodCBpbiBTZXB0ZW1iZXIgMjAxOCwgaW4gYSBnZW50cmlmeWluZyBuZWlnaGJvcmhvb2QganVzdCBzb3V0aCBvZiBkb3dudG93biBEYWxsYXMsIGEgdHdlbnR5LXNpeC15ZWFyLW9sZCBhY2NvdW50YW50IG5hbWVkIEJvdGhhbSBKZWFuIGNhbWUgaG9tZSBmcm9tIHdvcmsuIFdpdGhvdXQgbG9ja2luZyBoaXMgYXBhcnRtZW50IGRvb3IsIGhlIGNoYW5nZWQgaW50byBzaG9ydHMgYW5kIGEgVC1zaGlydCwgc2VydmVkIGhpbXNlbGYgdHdvIHNjb29wcyBvZiB2YW5pbGxhIGljZSBjcmVhbSwgYW5kIHNldHRsZWQgb250byBoaXMgY291Y2ggdG8gd2F0Y2ggYSBmb290YmFsbCBnYW1lLiBCZWZvcmUgdGhlIGljZSBjcmVhbSBiZWdhbiB0byBtZWx0LCBhIHN0cmFuZ2VyIGJhcmdlZCBpbiwgeWVsbGVkLCDigJxMZXQgbWUgc2VlIHlvdXIgaGFuZHMs4oCdIHRoZW4gc2hvdCBoaW0gZGVhZC48L3A+PHA+VGhlIHN0cmFuZ2VyIHdhcyBhbiBvZmYtZHV0eSBwb2xpY2Ugb2ZmaWNlciwgYSB3aGl0ZSB3b21hbiBuYW1lZCBBbWJlciBHdXlnZXIuIEd1eWdlciBsaXZlZCBpbiB0aGUgYXBhcnRtZW50IGRpcmVjdGx5IGJlbG93IEplYW7igJlzLiBTaGUgbGF0ZXIgc2FpZCB0aGF0IHNoZSBoYWQgYWNjaWRlbnRhbGx5IGVudGVyZWQgdGhlIHdyb25nIGFwYXJ0bWVudCwgbWlzdGFraW5nIEplYW4sIHdobyB3YXMgQmxhY2ssIGZvciBhbiBpbnRydWRlciBpbiBoZXIgaG9tZS4gSW4gYSA8aT5OZXcgWW9yayBUaW1lczwvaT4gc3RvcnkgYWJvdXQgdGhlIGluY2lkZW50LCB0aGUgcmVwb3J0ZXJzIE1hbm55IEZlcm5hbmRleiBhbmQgTWFyaW5hIFRyYWhhbiBNYXJ0aW5leiBub3RlZDo8L3A+PGJsb2NrcXVvdGUgPjxwPlRoZSByYWNpYWwgcHJvZmlsaW5nIG9mIGJsYWNrIG1lbiBhbmQgd29tZW4gYnkgd2hpdGUgcG9saWNlIG9mZmljZXJzIFtoYXNdIHB1dCBuZXcgcGhyYXNlcyBpbnRvIHRoZSBBbWVyaWNhbiB2b2NhYnVsYXJ54oCUZHJpdmluZyB3aGlsZSBibGFjaywgd2Fsa2luZyB3aGlsZSBibGFjaywgc2hvcHBpbmcgd2hpbGUgYmxhY2suIFRoZSBzaG9vdGluZyBvZiBNci4gSmVhbiBzZWVtZWQgdG8gZGVtYW5kIGl0cyBvd24sIGV2ZW4gbW9yZSBkaXN0dXJiaW5nIHZlcnNpb246IGJlaW5nIGF0IGhvbWUgd2hpbGUgYmxhY2suPC9wPjwvYmxvY2txdW90ZT48cD5HdXlnZXIgd2FzIG5vdCBpbW1lZGlhdGVseSBhcnJlc3RlZC4gU2hlIHdhcyBub3QgaW1tZWRpYXRlbHkgZmlyZWQuIFRocmVlIGRheXMgbGF0ZXIsIHNoZSB0dXJuZWQgaGVyc2VsZiBpbiB0byBhdXRob3JpdGllcyBvbiBhIG1hbnNsYXVnaHRlciBjaGFyZ2UuIEJvb2tlZCBpbnRvIHRoZSBLYXVmbWFuIENvdW50eSBqYWlsLCBzaGUgd2FzIGZyZWVkIG9uICQzMDAsMDAwIGJhaWwgdGhlIHNhbWUgZGF5LiBMYXRlciB0aGF0IG1vbnRoLCBzaGUgd2FzIGRpc21pc3NlZCBmcm9tIHRoZSBwb2xpY2UgZGVwYXJ0bWVudC4gVHdvIG1vbnRocyBhZnRlciB0aGF0LCBhIGdyYW5kIGp1cnkgcmFpc2VkIHRoZSBtYW5zbGF1Z2h0ZXIgY2hhcmdlIHRvIG11cmRlci48L3A+PHA+V2hlbiBHdXlnZXIgd2VudCB0byB0cmlhbCBpbiB0aGUgZmFsbCBvZiAyMDE5IG1vc3QgcGVvcGxlIGZhbWlsaWFyIHdpdGggdGhlIEFtZXJpY2FuIGxlZ2FsIHN5c3RlbSBoYWQgbGl0dGxlIGhvcGUgdGhhdCBzaGUgd291bGQgYmUgaGVsZCBhY2NvdW50YWJsZSBmb3Iga2lsbGluZyB0aGUgdW5hcm1lZCBCbGFjayBtYW4uIOKAnEJsYWNrIEFtZXJpY2FucyzigJ0gdGhlIGFjdGl2aXN0IEJyaXR0YW55IFBhY2tuZXR0IHdyb3RlIGluIDxpPlZveDwvaT4gYXQgdGhlIHRpbWUsIOKAnHdlcmUgdG9vIHdpc2UgYW5kIHRvbyB3ZWFyeSB0byBsZXQgb3Vyc2VsdmVzIGJlbGlldmUsIGV2ZW4gZm9yIGEgbW9tZW50LCB0aGF0IHRoaXMgc3lzdGVtIHdvdWxkIGRvIGFueXRoaW5nIGJ1dCBicmVhayBvdXIgaGVhcnRzIG9uY2UgYWdhaW4u4oCdIFNvIHdoZW4sIGFmdGVyIGZpdmUgaG91cnMgb2YgZGVsaWJlcmF0aW9uLCB0aGUganVyeSBmb3VuZCBHdXlnZXIgZ3VpbHR5IG9mIG11cmRlciwgUGFja25ldHQgd3JvdGUsIOKAnHRoZSBzaG9jayB3YXMgcGFscGFibGUu4oCdIEplYW7igJlzIG1vdGhlciwgQWxsaXNvbiwgcmFpc2VkIGhlciBhcm1zIGluIGV4dWx0YXRpb24uIOKAnEdvZCBpcyBnb29kLiBUcnVzdCBoaW0s4oCdIHNoZSBzYWlkIGFzIHNoZSB3YWxrZWQgb3V0IG9mIHRoZSBjb3VydHJvb20uPC9wPjxwPllldCB0aGUgbW9zdCBkcmFtYXRpYyBtb21lbnQgY2FtZSB0aGUgZm9sbG93aW5nIGRheSwgZHVyaW5nIHRoZSBzZW50ZW5jaW5nIHBoYXNlLCB3aGVuIEplYW7igJlzIHlvdW5nZXIgYnJvdGhlciwgQnJhbmR0LCB0b29rIHRoZSBzdGFuZC4gQnJhbmR0LCB3aG8gd2FzIGVpZ2h0ZWVuIGF0IHRoZSB0aW1lLCB3YXMgdGhlcmUgdG8gbWFrZSBhIHZpY3RpbSBpbXBhY3Qgc3RhdGVtZW50LCBkdXJpbmcgd2hpY2ggY3JpbWUgdmljdGltcyB1c3VhbGx5IHNwZWFrIGFib3V0IHRoZSBwYWluIHRoZSBkZWZlbmRhbnQgaGFzIGNhdXNlZCwgYXNraW5nIGZvciB0aGUgaGFyc2hlc3QgcHVuaXNobWVudCBwb3NzaWJsZS4gQnV0IEJyYW5kdCBhZGRyZXNzZWQgR3V5Z2VyIGluIGEgaHVzaGVkIGFuZCBpbnRpbWF0ZSB0b25lLiDigJxJZiB5b3UgdHJ1bHkgYXJlIHNvcnJ54oCUSSBrbm93IEkgY2FuIHNwZWFrIGZvciBteXNlbGbigJRJIGZvcmdpdmUgeW91LOKAnSBoZSBzYWlkLiBIZSB0dWdnZWQgYXQgaGlzIGNvbGxhci4g4oCcSSB3YXNu4oCZdCBnb25uYSBldmVyIHNheSB0aGlzIGluIGZyb250IG9mIG15IGZhbWlseSzigJ0gaGUgY29udGludWVkLCDigJxidXQgSSBkb27igJl0IGV2ZW4gd2FudCB5b3UgdG8gZ28gdG8gamFpbC4gSSB3YW50IHRoZSBiZXN0IGZvciB5b3Uu4oCdIFRoZW4gaGUgbG9va2VkIGF0IHRoZSBqdWRnZSBhbmQgYXNrZWQsIHdpdGggc29tZSB1cmdlbmN5LCDigJxDYW4gSSBnaXZlIGhlciBhIGh1ZywgcGxlYXNlP+KAnSBBZnRlciBhIG1vbWVudCwgdGhlIGp1ZGdlIGFzc2VudGVkLiBCcmFuZHQgc3RlcHBlZCBkb3duIGZyb20gdGhlIHN0YW5kIGFuZCBlbWJyYWNlZCBHdXlnZXIgZm9yIG5lYXJseSBhIGZ1bGwgbWludXRlIGFzIHNoZSBzb2JiZWQuPC9wPjxwPkJyYW5kdOKAmXMgd29yZHMgd2VyZSB3aWRlbHkgY2VsZWJyYXRlZC4gRXZlbiB0aGUgY291bnR5IHByb3NlY3V0b3IsIHdob3NlIG9mZmljZSBoYWQgYmVlbiBhcmd1aW5nIGZvciBhIGhhcnNoIHBlbmFsdHksIGNhbGxlZCBoaXMgZW1icmFjZSDigJxhbiBhbWF6aW5nIGFjdCBvZiBoZWFsaW5nIGFuZCBmb3JnaXZlbmVzcyB0aGF0IGlzIHJhcmUgaW4gdG9kYXnigJlzIHNvY2lldHku4oCdIEd1eWdlciB3YXMgc2VudGVuY2VkIHRvIHRlbiB5ZWFycy48L3A+PHA+U29tZSBvYnNlcnZlcnMgZGlkIG5vdCB3ZWxjb21lIHRoaXMgYWN0IG9mIGZvcmdpdmVuZXNzLCBvYmplY3RpbmcgdG8gYSBwZXJjZXB0aW9uIHRoYXQgQmxhY2sgcGVvcGxlIGFyZSB0b28gb2Z0ZW4gZXhwZWN0ZWQgdG8gZm9yZ2l2ZS4gT3RoZXJzIHdvcnJpZWQgdGhhdCBzdWNoIGFic29sdXRpb24gbWlnaHQgcHJlY2x1ZGUgYSBzZXJpb3VzIGV4YW1pbmF0aW9uIG9mIHBvbGljZSBzaG9vdGluZ3MgaW4gQW1lcmljYS4gQnV0IHRoZXJlIHdhcyBzb21ldGhpbmcgZWxzZSBpbiB0aGUgcmVzcG9uc2UgdG8gQnJhbmR0IEplYW7igJlzIGh1ZzogYSBkaXNjb21mb3J0IHdpdGggdGhlIG5vdGlvbiBvZiBmb3JnaXZlbmVzcyBpdHNlbGYuPC9wPjxwID5UaGUgVW5pdGVkIFN0YXRlcyBoYXMgdGhlIGhpZ2hlc3QgaW5jYXJjZXJhdGlvbiByYXRlIGluIHRoZSB3b3JsZC4gT3ZlciAyMDAsMDAwIHBlb3BsZSBhcmUgc2VydmluZyBsaWZlIHNlbnRlbmNlcyBhY3Jvc3MgdGhlIGNvdW50cnkuIEJlY2F1c2UgdGhlIHRvdWdoLW9uLWNyaW1lIG1vdmVtZW50IHRoYXQgYmVnYW4gaW4gdGhlIDE5NzBzIGdhdmUgdXMgZXZlci1sb25nZXIgc2VudGVuY2VzLCBlZmZlY3RpdmVseSBkZWNpbWF0ZWQgdGhlIHBhcm9sZSBzeXN0ZW0sIGFuZCBzY2FyZWQgb2ZmaWNpYWxzIGF3YXkgZnJvbSBncmFudGluZyBwYXJkb25zLCBtb3N0IG9mIHRoZXNlIGluY2FyY2VyYXRlZCBwZW9wbGUgaGF2ZSBlZmZlY3RpdmVseSBubyBjaGFuY2Ugb2YgYmVpbmcgZnJlZWQuIExpZmUgc2VudGVuY2VzIHdpdGhvdXQgcGFyb2xlIGFyZSDigJx2aXJ0dWFsbHkgdW5oZWFyZCBvZiBlbHNld2hlcmUgaW4gdGhlIHdvcmxkLOKAnSBBc2hsZXkgTmVsbGlzLCB0aGUgYXV0aG9yIG9mIGEgMjAyMSBzdHVkeSBvbiBsaWZldGltZSBpbXByaXNvbm1lbnQsIHRvbGQgPGk+VGhlIFdhc2hpbmd0b24gUG9zdDwvaT4uIOKAnEltcHJpc29ubWVudCBiZXlvbmQgMjAgeWVhcnMgaXMgYSBwcmVkb21pbmFudGx5IEFtZXJpY2FuIHBoZW5vbWVub24u4oCdPC9wPjxwPkluIHRoZSB5ZWFycyBJ4oCZdmUgc3BlbnQgd29ya2luZyBhcyBhIHB1YmxpYyBkZWZlbmRlciBhbmQgcmVwb3J0aW5nIG9uIGNyaW1pbmFsIGp1c3RpY2UsIEkgaGF2ZSBzZWVuIG1hbnkgaW5jYXJjZXJhdGVkIHBlb3BsZSwgaW5jbHVkaW5nIHRob3NlIGNvbnZpY3RlZCBvZiBzZXJpb3VzIGNyaW1lcywgd29ya2luZyB0byBtYWtlIGFtZW5kcyB3aXRoIHBlb3BsZSBvdXRzaWRlIHByaXNvbiBhbmQgdG8gc2VydmUgdGhlaXIgY29tbXVuaXRpZXMgaW5zaWRlIHByaXNvbi4gWWV0IGV2ZW4gaWYgdmljdGltcyBvciB0aGVpciBmYW1pbGllcyBkZWNpZGUgdG8gZm9yZ2l2ZSwgdGhlIGxhdyByYXJlbHkgZG9lcy48L3A+PHA+VGhlIEFtZXJpY2FuIGxlZ2FsIHN5c3RlbSByb3V0aW5lbHkgcmVmdXNlcyB0byBncmFudCBmb3JnaXZlbmVzcyB0byBwZW9wbGUgd2hvIGNvbW1pdCBldmVuIG1pbm9yIGluZnJhY3Rpb25zLiBPbiBvbmUgdHlwaWNhbCBkYXkgYXMgYSBwdWJsaWMgZGVmZW5kZXIsIEkgc3Rvb2QgaW4gQnJvbnggQ3JpbWluYWwgQ291cnQgYW5kIGxpc3RlbmVkIHRvIGEgcHJvc2VjdXRvciBkZWNsYXJlIHRoYXQgbXkgY2xpZW50LCBhY2N1c2VkIG9mIHRyZXNwYXNzaW5nIGZvciBjdXR0aW5nIHRocm91Z2ggYSBjaXR5IHBhcmsgYWZ0ZXIgZGFyaywgZmFjZWQgYSB5ZWFyIGluIHByaXNvbi4gSSBoYXZlIHNlZW4gZG96ZW5zIG9mIHBlb3BsZSBzZW50ZW5jZWQgdG8geWVhcnMgaW4gcHJpc29uIGZvciBmZWVkaW5nIHRoZWlyIGFkZGljdGlvbnMsIG9yIGhhdmluZyBwc3ljaG90aWMgYnJlYWtzLiBPbmUgb2YgdGhlIGZpcnN0IHBlb3BsZSBJIGV2ZXIgcmVwcmVzZW50ZWQgd2FzIGEgd29tYW4gYWNjdXNlZCBvZiBzaG9wbGlmdGluZyBpbmdyZWRpZW50cyB0byBtYWtlIGhlciBjaGlsZHJlbiBsYXNhZ25hIG9uIENocmlzdG1hcyBFdmUuIEFmdGVyIGJlaW5nIGFycmVzdGVkIGFuZCB0YWtlbiBmcm9tIGhlciBjaGlsZHJlbiBpbiBoYW5kY3VmZnMsIHNoZSBwbGVhZGVkIGd1aWx0eSB0byBhIG5vbmNyaW1pbmFsIHZpb2xhdGlvbi4gU2hlIHNwZW50IENocmlzdG1hcyB0aGF0IHllYXIgaW4gY2VudHJhbCBib29raW5nLjwvcD48ZGl2ID48cCA+QWR2ZXJ0aXNlbWVudDwvcD48L2Rpdj48cD7igJxPdXJzIGlzIGFuIHVuZm9yZ2l2aW5nIGFnZSzigJ0gTWFydGhhIE1pbm93LCBhIGxlZ2FsIHNjaG9sYXIgYW5kIGZvcm1lciBkZWFuIG9mIEhhcnZhcmQgTGF3IFNjaG9vbCwgd3JpdGVzIGluIDxpPldoZW4gU2hvdWxkIExhdyBGb3JnaXZlPzwvaT4gQW4gZXhwZXJ0IGluIGludGVybmF0aW9uYWwgYW5kIGRvbWVzdGljIGh1bWFuIHJpZ2h0cywgc2hlIGV4YW1pbmVzIGhvdyB0aGUgQW1lcmljYW4gY3JpbWluYWwgc3lzdGVtIGNvdWxkIGJlY29tZSBtb3JlIGZvcmdpdmluZywgZHJhd2luZyBhbmFsb2dpZXMgd2l0aCBvdGhlcnMsIGJvdGggaW50ZXJuYXRpb25hbCAodHJ1dGggYW5kIHJlY29uY2lsaWF0aW9uIGNvbW1pc3Npb25zLCBmb3IgZXhhbXBsZSkgYW5kIGRvbWVzdGljIChwb2xpdGljYWwgcGFyZG9ucywgYmFua3J1cHRjeSBjb3VydCkuIE1pbm93IHNob3dzLCB3cml0aW5nIHdpdGggZWxlZ2FuY2UgYW5kIHBvd2VyLCB0aGF0IHRoZXJlIGlzIG5vdGhpbmcgaW5ldml0YWJsZSBhYm91dCBvdXIgY291bnRyeeKAmXMg4oCccGFydGljdWxhcmx5IHB1bml0aXZl4oCdIGFwcHJvYWNoIHRvIOKAnGRlZmluaW5nLCBwcm9zZWN1dGluZywgYW5kIHB1bmlzaGluZyBjcmltZXMsIGVzcGVjaWFsbHkgaWYgdGhlIGFjY3VzZWQgaXMgYSBtZW1iZXIgb2YgYSByYWNpYWwgbWlub3JpdHku4oCdPC9wPjxwPk1pbm93IGNvbXBhcmVzIHRoZSB3YXkgdGhlIFVuaXRlZCBTdGF0ZXMgdHJlYXRzIGNyaW1lIHRvIHRoZSB3YXkgaXQgaGFuZGxlcyBkZWJ0LiBBbWVyaWNhLCBzaGUgd3JpdGVzLCDigJxoYXMgYSBnZW5lcmFsbHkgZm9yZ2l2aW5nIHBvbGljeSB0b3dhcmQgZGVidCwgZXNwZWNpYWxseSBidXNpbmVzcyBkZWJ0LCB3aXRoIGJhbmtydXB0Y3kgcHJvY2VkdXJlcyBhbGxvd2luZyBjb21wYW5pZXMgYSBmcmVzaCBzdGFydC7igJ0gV2h5IHNob3VsZCBmb3JnaXZlbmVzcyBiZSBwbGVudGlmdWwgaW4gb25lIHJlYWxtIGFuZCBzY2FyY2UgaW4gdGhlIG90aGVyPyBUaGUgY29tcGFyaXNvbiB5aWVsZHMgdGhlIGNlbnRyYWwgaW5zaWdodCBvZiBoZXIgYm9vazog4oCcTWFraW5nIG1vcmUgb3Bwb3J0dW5pdGllcyBmb3IgZm9yZ2l2ZW5lc3Mgd2l0aGluIGxhdyBtaWdodCBoZWxwIGxhdyBncm93IHRvd2FyZCBqdXN0aWNlLOKAnSBzaGUgd3JpdGVzLiBUaGlzIOKAnG1pZ2h0IGFsc28gbnVkZ2UgaW5kaXZpZHVhbHMgYW5kIHNvY2lldGllcyB0b3dhcmQgdGhlIHJlc3BlY3QgYW5kIGdlbmVyb3NpdHkgZXhwcmVzc2VkIHRocm91Z2ggYXBvbG9neSwgcmVzdGl0dXRpb24sIGFuZCBmb3JiZWFyYW5jZSBmcm9tIGxhd+KAmXMgbW9zdCBzdHJpbmdlbnQgZGVtYW5kcy7igJ08L3A+PHA+T3RoZXIgc29jaWV0aWVzIHRoYXQgd2UgcmVnYXJkIHdpdGggYWRtaXJhdGlvbiBoYXZlIGNvbnNpZGVyZWQgZm9yZ2l2ZW5lc3MgYW4gaW1wb3J0YW50IHZhbHVlOyBzb21lIGhhdmUgb2ZmaWNpYWxseSBmb3JnaXZlbiB0aG9zZSB3aG8gaW5mbGljdGVkIHNlcmlvdXMgaGFybS4gSW4gdGhlIHN1bW1lciBvZiA0MDQgPGFiYnI+QkNFPC9hYmJyPiwgZm9yIGluc3RhbmNlLCBhZnRlciBTcGFydGEgZGVmZWF0ZWQgQXRoZW5zIGluIHRoZSBQZWxvcG9ubmVzaWFuIFdhciwgYSBncm91cCBrbm93biBhcyB0aGUg4oCcVGhpcnR5IFR5cmFudHPigJ0gbGVkIGEgY291cCB0aGF0IGxhc3RlZCBlaWdodCBtb250aHMuIFRoZXkgdGVycm9yaXplZCBBdGhlbnMsIGV4cGVsbGluZyBoYWxmIGl0cyBwb3B1bGF0aW9uIGFuZCBraWxsaW5nIGJldHdlZW4gNSBhbmQgMTAgcGVyY2VudCBvZiBpdHMgY2l0aXplbnMuIFdoZW4gQXRoZW5pYW4gbGVhZGVycyB3ZXJlIGZpbmFsbHkgYWJsZSB0byByZXN0b3JlIGRlbW9jcmFjeSwgdGhleSBncmFudGVkIHRoZSB0eXJhbnRzIGFtbmVzdHkgaW4gb3JkZXIgdG8gZm9yZXN0YWxsIGN5Y2xlcyBvZiByZXZvbHV0aW9uIGFuZCBjb3VudGVycmV2b2x1dGlvbi4gVGhleSB3ZXJlIGFsc28gdHJ5aW5nIHRvIGRlbW9uc3RyYXRlIOKAnGV2aWRlbmNlIG9mIGFkbWlyYWJsZSBtb2RlcmF0aW9uIGFuZCBjaGFyYWN0ZXIs4oCdIE1pbm93IHdyaXRlcy48L3A+PHA+SW4gMTk5OCBNaW5vdyBwdWJsaXNoZWQgPGk+QmV0d2VlbiBWZW5nZWFuY2UgYW5kIEZvcmdpdmVuZXNzOiBGYWNpbmcgSGlzdG9yeSBBZnRlciBHZW5vY2lkZSBhbmQgTWFzcyBWaW9sZW5jZTwvaT4sIGluIHdoaWNoIHNoZSBleGFtaW5lZCByZXNwb25zZXMgdG8gbWFzcyB2aW9sZW5jZSBzdWNoIGFzIFNvdXRoIEFmcmljYW4gYXBhcnRoZWlkLCBldGhuaWMgY2xlYW5zaW5nIGluIHRoZSBmb3JtZXIgWXVnb3NsYXZpYSwgYW5kIHRoZSBIb2xvY2F1c3QsIHNlZWtpbmcgYSBiYWxhbmNlIGJldHdlZW4gdG9vIG11Y2ggbWVtb3J5LCB3aGljaCBjYW4gdHJhcCBwZW9wbGUgaW4gcGFzdCB0cmF1bWFzLCBhbmQgdG9vIG11Y2ggZm9yZ2V0dGluZywgd2hpY2ggY2FuIHByZXZlbnQgaW5kaXZpZHVhbHMgYW5kIHNvY2lldGllcyBmcm9tIGhlYWxpbmcuIEJ1dCB3aHkgbmF2aWdhdGUgYmV0d2VlbiB2ZW5nZWFuY2UgYW5kIGZvcmdpdmVuZXNzLCBzb21lIHJlYWRlcnMgYXNrZWQsIHdoZW4geW91IGNvdWxkIHNpbXBseSBwcm9tb3RlIGZvcmdpdmVuZXNzPyBJbiBoZXIgbmV3IGJvb2ssIE1pbm93IGV4cGxvcmVzIHdoYXQgaXQgd291bGQgbWVhbiB0byBwdXJzdWUgb25seSBmb3JnaXZlbmVzcywgYW5kIHRvIHB1cnN1ZSBpdCBleHBsaWNpdGx5LjwvcD48cD5XaXRoaW4gdGhlIGxhdywgTWlub3cgZXhwbGFpbnMsIGZvcmdpdmVuZXNzIGNhbiB0YWtlIHRocmVlIGZvcm1zLiBGaXJzdCwgbGVnYWwgaW5zdGl0dXRpb25zIGNhbiBhbGxvdyBwZW9wbGUgdG8gZXhwcmVzcyByZW1vcnNlIGFuZCBhc2sgZm9yIGZvcmdpdmVuZXNzIGZyb20gdGhvc2UgdGhleSBoYXZlIGhhcm1lZC4gVG9kYXksIHRoZSBsYXcgb2Z0ZW4gcHJldmVudHMgaW5kaXZpZHVhbCBhY3RzIG9mIGZvcmdpdmVuZXNzOyBhcG9sb2dpZXMgY2FuIGJlIHVzZWQgYXMgZXZpZGVuY2UgYWdhaW5zdCB0aGUgcGVyc29uIGFwb2xvZ2l6aW5nLCBhbmQgb3JkZXJzIG9mIHByb3RlY3Rpb24gbWFrZSBpdCBpbGxlZ2FsIGZvciBtb3N0IHBlb3BsZSBhY2N1c2VkIG9mIHZpb2xlbnQgY3JpbWVzIHRvIGNvbW11bmljYXRlIHdpdGggdGhlaXIgdmljdGltcy48c3VwID48YSA+MTwvYT48L3N1cD4gTWlub3cgc3VnZ2VzdHMgdGhhdCBjb3VydHMgb3VnaHQgdG8g4oCcbWFrZSByb29tIGZvciB2b2x1bnRhcnkgZXhwcmVzc2lvbnMgb2YgYXBvbG9neSBhbmQgZm9yZ2l2ZW5lc3MsIHNoaWVsZGluZyB0aG9zZSB3aG8gbWFrZSBzdWNoIGludGVycGVyc29uYWwgZXhwcmVzc2lvbnMgZnJvbSBsZWdhbCBsaWFiaWxpdHkgb3IgZXZlbiByZXdhcmRpbmcgdGhlbS7igJ0gQXBvbG9naWVzIGNvdWxkIGhhcHBlbiBpbiBtZWV0aW5ncyBiZWZvcmUgb3IgYWZ0ZXIgb2ZmaWNpYWwgbGVnYWwgcHJvY2VlZGluZ3MsIG9yIGNvdWxkIGV2ZW4gdGFrZSB0aGUgcGxhY2Ugb2YgdGhlIHByb2NlZWRpbmdzIHRoZW1zZWx2ZXMuPC9wPjxwPlRoZXJlIGFyZSwgTWlub3cgZ3JhbnRzLCBkcmF3YmFja3MgdG8gdGhlc2UgbWVhc3VyZXMuIFNoZSB3YXMgYSBjb25zdWx0YW50IGZvciB0aGUgU291dGggQWZyaWNhbiBUcnV0aCBhbmQgUmVjb25jaWxpYXRpb24gQ29tbWlzc2lvbiwgaW4gd2hpY2ggdmljdGltcyBhbmQgcGVycGV0cmF0b3JzIG9mIGh1bWFuIHJpZ2h0cyB2aW9sYXRpb25zIGR1cmluZyBhcGFydGhlaWQgd2VyZSBpbnZpdGVkIHRvIGRlc2NyaWJlIHRoZWlyIGV4cGVyaWVuY2VzLiBTaGUgZmluZHMgdmFsdWUgaW4gdGhlIGFpcmluZyBvZiBncmlldmFuY2VzIGJ1dCBub3RlcyB0aGF0IG9uZSBzdHVkeSBmb3VuZCB0aGF0IG9ubHkgMTAgcGVyY2VudCBvZiB0cmlidW5hbCBwYXJ0aWNpcGFudHMgd2VyZSB3aWxsaW5nIHRvIGZvcmdpdmUgd3Jvbmdkb2VycyB3aG8gdG9vayByZXNwb25zaWJpbGl0eSBmb3IgdGhlaXIgZGVlZHMuIEFuZCB0aGVzZSBraW5kcyBvZiBwcm9jZXNzZXMsIHNoZSB3b3JyaWVzLCBtaWdodCBwbGFjZSB1bmR1ZSBwcmVzc3VyZSBvbiB2aWN0aW1zIHRvIGZvcmdpdmUuPC9wPjxwPlNlY29uZCwgbGVnYWwgc3lzdGVtcyBjb3VsZCBncmFudCBkaXNjcmV0aW9uYXJ5IHBvd2VyIHRvIHBvbGljZSwgcHJvc2VjdXRvcnMsIGp1ZGdlcywgcHJlc2lkZW50cywgZ292ZXJub3JzLCBhbmQgb3RoZXIgYXV0aG9yaXRpZXMsIGludGVncmF0aW5nIGZvcmdpdmVuZXNzIGluIHRoZSBmb3JtIG9mIGxlbmllbmN5LiBNaW5vdyBlbmNvdXJhZ2VzIGNyZWF0aW5nIG1vcmUgb3Bwb3J0dW5pdGllcyBmb3IgbGVuaWVuY3kgYW5kIG1vcmUgcHJhY3RpY2FsIHVzZSBvZiB0aGUgYXZlbnVlcyB0aGF0IGFscmVhZHkgZXhpc3QuIEJ1dCBzaGUgY2F1dGlvbnMgdGhhdCBkaXNjcmV0aW9uYXJ5IGxlbmllbmN5IOKAnG1heSBiZSByYWNpYWxseSBiaWFzZWQsIGRpc3Jlc3BlY3RmdWwgb2YgcG90ZW50aWFsIHZpY3RpbXMgb2YgbWlzY29uZHVjdCwgb3Igb3RoZXJ3aXNlIGluY29uc2lzdGVudCBhbmQgdW5mYWlyLuKAnSBTaGUgc3VnZ2VzdHMgZXhwYW5kaW5nIHRoZSB1c2Ugb2YgcGFyZG9ucyBhbmQgY29tbXV0YXRpb25zIHdoaWxlIGltcGxlbWVudGluZyBjb250cm9scyB0byBndWFyZCBhZ2FpbnN0IGJpYXNlcyBhbmQgY29ycnVwdGlvbi4gU2hlIG5vdGVzIHRoYXQgc29tZSBvdGhlciBuYXRpb25zIGdpdmUgdGhlIHBhcmRvbiBwb3dlciB0byBhbiBpbmRlcGVuZGVudCBjb3VuY2lsIG9yIGFsbG93IGZvciBqdWRnZXMgdG8gdmV0byBjbGVtZW5jeSBkZWNpc2lvbnMuIFRoZXNlIGNvbnRyb2xzIHdvdWxkIGFpbSB0byBwcmV2ZW50LCBmb3IgZXhhbXBsZSwgRG9uYWxkIFRydW1w4oCZcyBwYXJkb25zIG9mIGEgbG9uZyBsaXN0IG9mIGhpcyBjcm9uaWVzLjwvcD48ZGl2ID48cCA+QWR2ZXJ0aXNlbWVudDwvcD48L2Rpdj48cD5UaGUgdGhpcmQgcm91dGUgTWlub3cgaWRlbnRpZmllcyBpcyBmb3JnaXZpbmcgZW50aXJlIGdyb3VwcyBvZiBwZW9wbGUgZm9yIGNlcnRhaW4gb2ZmZW5zZXPigJRmb3IgaW5zdGFuY2UsIHlvdW5nIHBlb3BsZSB3aG8gY29tbWl0IGNyaW1lcyB1bmRlciBpbmZsdWVuY2UgZnJvbSBhZHVsdHMsIG9yIGRyYWZ0LWRvZGdlcnMgZnJvbSB0aGUgVmlldG5hbSBXYXIsIHRvIHdob20gSmltbXkgQ2FydGVyIGdyYW50ZWQgYW1uZXN0eSBvbiBoaXMgZmlyc3QgZnVsbCBkYXkgaW4gb2ZmaWNlIGluIDE5NzcuIEFzIGxlYWRlcnMgaW4gYW5jaWVudCBBdGhlbnMgcmVjb2duaXplZCwgYmxhbmtldCBhbW5lc3RpZXMgaGVscCBzb2NpZXRpZXMgbW92ZSBvbiBmcm9tIGNvbmZsaWN0IGFuZCBhdm9pZCBjeWNsZXMgb2YgcmV0YWxpYXRpb24uIEluIGluZGl2aWR1YWwgY2FzZXMsIE1pbm93IGFwcGxhdWRzIGVmZm9ydHMgdG8gZWxpbWluYXRlIHRoZSBjb2xsYXRlcmFsIGNvbnNlcXVlbmNlcyBvZiBjb252aWN0aW9ucyB0aGF0IG1ha2UgaXQgZGlmZmljdWx0IG9yIGltcG9zc2libGUgdG8gZmluZCBqb2JzIG9yIGhvdXNpbmcsIG9yIHRvIHZvdGUuPC9wPjxwID7igJxGb3JnaXZlbmVzcyBuZWVkIG5vdCBiYXIgcHJvc2VjdXRpb24gb3Igb3RoZXIgbGVnYWwgY29uc2VxdWVuY2VzIGZvciB0aGUgd3Jvbmdkb2VyLOKAnSBNaW5vdyB3cml0ZXMgaW4gaGVyIGludHJvZHVjdGlvbiwgYXMgaWYgdG8gYXNzdXJlIHRoZSByZWFkZXIgdGhhdCBubyByYWRpY2FsIGNoYW5nZXMgd2lsbCBiZSBhZHZvY2F0ZWQgaW4gdGhlIGJvb2suIEl0IGlzIHN0cmFuZ2UgYW5kIHNvbWV3aGF0IHN0YXJ0bGluZyBmb3IgTWlub3cgdG8gZW1waGFzaXplIHRoZSBsaW1pdHMgb2YgaGVyIHN1Z2dlc3Rpb25zIChtb3N0IG9mIHdoaWNoIGFscmVhZHkgZXhpc3QgaW4gc29tZSBmb3JtIG9yIGFyZSBhbHJlYWR5IGVzcG91c2VkIGJ5IGFjdGl2aXN0cykgc28gZWFybHkgb27igJRzaGUgaXMgY29tZm9ydGFibGUgZW50ZXJ0YWluaW5nIHNvbWUgcHJvZ3Jlc3NpdmUgaWRlYXMsIGJ1dCBsZXNzIGNvbWZvcnRhYmxlIGFkdm9jYXRpbmcgZm9yIHRoZWlyIHVzZS4gRXZlbiB3aGVuIHNoZSBwcm9wb3NlcyBpZGVhcyB0aGF0IGNvdWxkLCBpbiB0aGVvcnksIG1ha2UgdGhlIGp1c3RpY2Ugc3lzdGVtIG1vcmUganVzdCwgc2hlIHNlZW1zIHVud2lsbGluZyB0byB0YWtlIHdoYXQgd291bGQgc2VlbSBsaWtlIHRoZSBuZXh0IGxvZ2ljYWwgc3RlcDogY2FsbGluZyBmb3IgYSBicm9hZCBpbXBsZW1lbnRhdGlvbiBvZiB0aG9zZSBpZGVhcy4gV2hlbiBkaXNjdXNzaW5nIGhvdyBmb3JnaXZlbmVzcyBtaWdodCBlbmdlbmRlciDigJxyZXNwZWN0IGFuZCBnZW5lcm9zaXR5LOKAnSB0aGUgdmVyYiBzaGUgdXNlcyBpcyBub3Qg4oCccmV2b2x1dGlvbml6ZeKAnSBvciDigJxvdmVyaGF1bOKAnSBidXQg4oCcbnVkZ2Uu4oCdPC9wPjxwPk1pbm93IGRldm90ZXMgY29uc2lkZXJhYmxlIHNwYWNlIHRvIHJlYXNvbnMgZm9yIGNhdXRpb24sIG5vdGluZyB0aGF0IG9mZmljaWFsIGZvcmdpdmVuZXNzIG1pZ2h0IGxlYXZlIGEgaHVuZ2VyIGFtb25nIGluZGl2aWR1YWxzIGZvciBhY2NvdW50YWJpbGl0eSwgb3IgdGhhdCBmb3JnaXZlbmVzcyBtaWdodCBiZSBkb2xlZCBvdXQgaW5lcXVpdGFibHkgb3IgdHJlYXQgdmljdGltcyBpbnNlbnNpdGl2ZWx5LiBUaGVzZSByZXNlcnZhdGlvbnMgYW5kIGEgZ2VuZXJhbCBhdmVyc2lvbiB0byB0cmFuc2Zvcm1pbmcgdGhlIGN1cnJlbnQgc3lzdGVtIGxpbWl0IE1pbm934oCZcyB2aXNpb24uIEF0IHRpbWVzLCBpdCBzZWVtcyBhIG1vcmUgZml0dGluZyB0aXRsZSBmb3IgdGhlIGJvb2sgd291bGQgYmUg4oCcV2hlbiBTaG91bGRu4oCZdCBMYXcgRm9yZ2l2ZT/igJ08L3A+PHA+V2hlbiBzaGUgZm9jdXNlcywgZm9yIGV4YW1wbGUsIG9uIHJlYXNvbnMgdG8gbGltaXQgdGhlIHBvd2VyIHRvIGdyYW50IHBhcmRvbnMgYW5kIGNvbW11dGF0aW9uc+KAlGluIGEgYm9vayBhYm91dCBmb3JnaXZlbmVzcyBpbiBhIGNvdW50cnkgd2hlcmUgcGFyZG9ucyBhcmUgZGVzcGVyYXRlbHkgbmVlZGVkIGFuZCBzZXZlcmVseSB1bmRlcnVzZWTigJR0aGUgZW1waGFzaXMgc2VlbXMgb2ZmLiBTb21lIG9mIGhlciBjb25jZXJucyBhcmUgdmFsaWQsIGJ1dCB0b28gbXVjaCBmb3JnaXZlbmVzcyBpcyBub3QgYSBwcm9ibGVtIG91ciBjcmltaW5hbCBzeXN0ZW0gaXMgbGlrZWx5IHRvIGZhY2UgYW55dGltZSBzb29uLiAoSSBzaG91bGQgbm90ZSB0aGF0IHB1YmxpYyBkZWZlbmRlcnMgcmVqZWN0IHRoZSB0ZXJtIOKAnGNyaW1pbmFsIGp1c3RpY2Ugc3lzdGVtLOKAnSBmb3IgaXRzIGltcGxpY2F0aW9uIHRoYXQganVzdGljZSBvY2N1cnMgd2l0aGluIGl0Lik8L3A+PHA+T3VyIHN5c3RlbSBpcyByZXRyaWJ1dGl2ZSwgbWVhbmluZyB0aGF0IGl0IGhvbGRzIGNlbnRyYWwgdGhlIGlkZWEgdGhhdCB0aG9zZSB3aG8gY29tbWl0IHdyb25nZnVsIGFjdHMgZGVzZXJ2ZSB0byBzdWZmZXIgYSBwcm9wb3J0aW9uYXRlIHB1bmlzaG1lbnQuIFRoZSB3b3JkIGlzIGNhc3VhbGx5IHVzZWQgdG8gbWVhbiBwdW5pdGl2ZSwgb3IgZXZlbiB2ZW5nZWZ1bCwgYnV0IHBoaWxvc29waGVycyBlbXBsb3kgYSBuYXJyb3dlciBkZWZpbml0aW9uOiB0aGF0IHRob3NlIHdobyBjb21taXQgd3JvbmdzIGRlc2VydmUgdG8gc3VmZmVyIGEgcHJvcG9ydGlvbmF0ZSBidXQgbm90IGV4Y2Vzc2l2ZSBwdW5pc2htZW50LCBhbmQgdGhhdCBpbXBvc2luZyB0aG9zZSBwdW5pc2htZW50cyBpcyBpbnRyaW5zaWNhbGx5IGdvb2QuIE1pbm93LCBpbiBoZXIgZW1waGFzaXMgb24gaW50ZW50IGFuZCBqdXN0IGRlc2VydHMsIHNldHRsZXMgb24gcmV0cmlidXRpb24gYXMgYSBndWlkaW5nIHByaW5jaXBsZS4g4oCcQSB3cm9uZyBzaG91bGQgYmUgbWFkZSByaWdodDsgYW4gaW50ZW50aW9uYWwgaGFybSBzaG91bGQgYmUgbWV0IHdpdGggYSBjb25zZXF1ZW5jZSzigJ0gc2hlIHdyaXRlcy4g4oCcVGhpcyBpZGVhIGlzIGNlbnRyYWwgdG8gbGF3OiBwdXJzdWluZyByaWdodHMgYW5kIGNvcnJlY3Rpbmcgd3JvbmdzIGFyZSBsYXfigJlzIGhlYXJ0bGFuZC7igJ08L3A+PHA+SGVyIHZpc2lvbiBpcyBzaW1pbGFyIHRvIHRoZSBzeXN0ZW0gd2UgaGF2ZSB0b2RheSwgb25seSBzb21ld2hhdCBsZXNzIGhhcnNoOiBzaG9ydGVyIHByaXNvbiBzZW50ZW5jZXMgYW5kIGZld2VyIGNvbGxhdGVyYWwgY29uc2VxdWVuY2VzLiBCdXQgYnkgcHJvdGVzdGluZyB0aGUgc2V2ZXJpdHkgb2YgcHJpc29uIHNlbnRlbmNlcyB3aXRob3V0IHF1ZXN0aW9uaW5nIHRoZSBlbnRpcmUgYmFzaXMgZm9yIHRoZW0sIHNoZSBpcywgaW4gYSBzZW5zZSwgYXJndWluZyB0aGF0IG91ciBzeXN0ZW0gaXMgbm90IHJldHJpYnV0aXZlIDxpPmVub3VnaDwvaT7igJR0aGF0IHB1bmlzaG1lbnRzIG1ldGVkIG91dCBhcmUgbm90IHByb3BvcnRpb25hdGUsIGFuZCBjb3VsZCBiZSByZWNhbGlicmF0ZWQgd2l0aCBncmVhdGVyIGZhaXJuZXNzLiBUaGlzIGhvbGRzIE1pbm93IGJhY2sgZnJvbSBhIHJhZGljYWwgcmV0aGlua2luZyBvZiBjcmltaW5hbCBqdXN0aWNlIGluIEFtZXJpY2EuIEluIG1hbnkgd2F5cywgcmV0cmlidXRpb24gaXMgYW50aXRoZXRpY2FsIHRvIGZvcmdpdmVuZXNz4oCUd2hpY2ggbWVhbnMgZm9yZ29pbmcgcHVuaXNobWVudCBldmVuIHdoZW4gaXTigJlzIGRlc2VydmVkLjwvcD48cD5SZXRyaWJ1dGlvbiBpcyBzbyB1YmlxdWl0b3VzIHRoYXQgaXQgY2FuIGJlIGhhcmQgdG8gZW52aXNpb24gYW55IG90aGVyIHdheSBvZiBoYW5kbGluZyBwcm9ibGVtc+KAlGl0IGlzIHRoZSB3YXRlciBpbiB3aGljaCB3ZSBzd2ltLiBCdXQgdGhlcmUgYXJlIGltcG9ydGFudCBhbHRlcm5hdGl2ZXMuIE1pbm93IGdpdmVzIGNyZWRlbmNlIHRvIHJlc3RvcmF0aXZlIGp1c3RpY2UsIGRlc2NyaWJpbmcsIHdpdGggYXBwYXJlbnQgYWRtaXJhdGlvbiwgcHJvY2Vzc2VzIHRoYXQg4oCcdGVuZCB0byBmb2N1cyBvbiB0aGUgZnV0dXJlIG1vcmUgdGhhbiB0aGUgcGFzdCBhbmQgb24gdGhlIGNvbW11bml0eSBhcyB3ZWxsIGFzIG9uIHRoZSBpbW1lZGlhdGUgdmljdGltIGFuZCBvZmZlbmRlci7igJ0gVW5saWtlIHJldHJpYnV0aW9uIGFuZCByZWhhYmlsaXRhdGlvbiwgcmVzdG9yYXRpdmUganVzdGljZSBpcyBjZW50ZXJlZCBvbiBtZWV0aW5nIHRoZSBuZWVkcyBvZiB0aGUgdmljdGltIHdoaWxlIGFsc28gc2Vla2luZyB0byBob2xkIG9mZmVuZGVycyBhY2NvdW50YWJsZSBmb3IgdGhlIGhhcm1zIHRoZXkgaGF2ZSBjYXVzZWQuIEl0IGlzIG9mdGVuIGEgY29tbXVuaXR5IHByb2Nlc3MgaW52b2x2aW5nIG11bHRpcGxlIHN0YWtlaG9sZGVycyB3aG8ga25vdyBvbmUgYW5vdGhlciB3ZWxsLiBCdXQgbm90aW5nIHRoZSBzcG90dHkgc3VjY2VzcyBvZiB0aGUgVHJ1dGggYW5kIFJlY29uY2lsaWF0aW9uIENvbW1pc3Npb24gaW4gU291dGggQWZyaWNhIGFuZCBvdGhlciByZXN0b3JhdGl2ZSBwcm9ncmFtcyBpbiBhY2hpZXZpbmcgZm9yZ2l2ZW5lc3MsIE1pbm93IHdyaXRlcyB0aGF0IGluIHRoZSBVUyB0aGV5IGhhdmUgYmVlbiB1c2VkIOKAnGxhcmdlbHkgZm9yIG1pbm9yIGNyaW1lcyBzdWNoIGFzIHZhbmRhbGlzbS7igJ0gU2hlIGNlcnRhaW5seSBkb2VzIG5vdCByZWNvbW1lbmQgd2UgZG8gYXdheSB3aXRoIG91ciBhZHZlcnNhcmlhbCBsZWdhbCBzeXN0ZW0gYW5kIHNjcmFwIGp1cnkgdHJpYWxzLjwvcD48cD5Db25zZXF1ZW50YWxpc20sIHRoZSBpZGVhIHRoYXQgdGhlIG1vcmFsaXR5IG9mIGFuIGFjdCBpcyBkZXRlcm1pbmVkIHNvbGVseSBieSBpdHMgY29uc2VxdWVuY2VzLCBpcyBhbm90aGVyIGFsdGVybmF0aXZlIHRvIHJldHJpYnV0aW9uLiBBIGNvbnNlcXVlbnRpYWxpc3Qgc3lzdGVtIHdvdWxkIHB1bmlzaCBhIHdyb25nZG9lciBvbmx5IGlmIHRoZSBwdW5pc2htZW50IHJlc3VsdGVkIGluIG1vcmUgZ29vZCB0aGFuIGhhcm0sIHJhdGhlciB0aGFuIG1ldGUgb3V0IHB1bmlzaG1lbnQgZm9yIGl0cyBvd24gc2FrZS4gQ29uc2VxdWVudGlhbGlzbSB3b3VsZCBsaWtlbHkgbWVhbiBpbnZlc3RpbmcgaW4gc29jaWFsIHNlcnZpY2VzIGFuZCBmb3Jnb2luZyBtb3N0IHByb3NlY3V0aW9ucyBjdXJyZW50bHkgYnJvdWdodC4gVGhpcyBwaGlsb3NvcGh5IGFwcGVhcnMgd2hlbiBNaW5vdyBkaXNjdXNzZXMgZGVidCwgYnV0IGxlc3Mgb2Z0ZW4gd2hlbiBzaGUgZGlzY3Vzc2VzIGNyaW1pbmFsIGp1c3RpY2UuPC9wPjxwPlRhY2l0bHkgcHJvY2VlZGluZyBmcm9tIHRoZSByZXRyaWJ1dGl2ZSBhc3N1bXB0aW9uIHRoYXQgaW50ZW50aW9uYWwgY3JpbWluYWwgaGFybXMgc2hvdWxkLCBicm9hZGx5IHNwZWFraW5nLCBiZSBtZXQgd2l0aCBhIHByb3BvcnRpb25hdGUgcHVuaXNobWVudCwgTWlub3cgZW5kcyB1cCBzZXBhcmF0aW5nIHRob3NlIHdvcnRoeSBvZiBmb3JnaXZlbmVzcyBmcm9tIHRob3NlIHVud29ydGh5IG9mIGl0LiBPbmUgdGhvcm55IGFwcGxpY2F0aW9uIG9mIHRoaXMgbG9naWMgY29tZXMgaW4gYSBjYXNlIHN0dWR5IGFib3V0IGNoaWxkIHNvbGRpZXJzIGluIFNvdXRoIEFtZXJpY2EgYW5kIEFmcmljYS4gTWFueSBjaGlsZCBzb2xkaWVycywgTWlub3cgcmVjb2duaXplcywgZGlkIG5vdCBqb2luIGVudGlyZWx5IG9mIHRoZWlyIG93biBmcmVlIHdpbGw6IHRoZXkgd2VyZSBraWRuYXBwZWQsIHByZXNzdXJlZCBieSBmaW5hbmNpYWwgaGFyZHNoaXAsIGFnZ3Jlc3NpdmVseSByZWNydWl0ZWQsIG9yIGNvZXJjZWQgdG8gZmlnaHQuIFRoZXkgYXJlIG5vdCByZXNwb25zaWJsZSBmb3IgdGhlIGxhcmdlciBmb3JjZXMgdGhhdCBjYXVzZWQgdGhlIGNvbmZsaWN0IGFuZCBsZWQgdG8gdGhlaXIgaW52b2x2ZW1lbnQuIEV2ZW4gaWYgdGhlIGhhcm0gY2hpbGQgc29sZGllcnMgY2F1c2VkIHdhcyBub3QgZXhhY3RseSBpbnZvbHVudGFyeSwgTWlub3cgcmVjb2duaXplcyB0aGF0IHRoZXkgd2VyZSB1c2VkIGFzIOKAnHRvb2xzIG9mIHZpb2xlbmNlIG9yZ2FuaXplZCBieSBhZHVsdHMu4oCdPC9wPjxwPkJ1dCB3aGF0IG9mIHRoZWlyIGFnZW5jeSBhcyBpbmRpdmlkdWFsIGFjdG9ycz8gVGhlIHNhbWUgcXVlc3Rpb24gYXBwbGllcyB0byB5b3VuZyBBbWVyaWNhbnMgaW4gZ2FuZ3MuIOKAnExpa2UgY2hpbGQgc29sZGllcnMs4oCdIE1pbm93IHdyaXRlcywg4oCcY2hpbGRyZW4gYW5kIHRlZW5zIGFyZSBkcmF3biBpbnRvIHZpb2xlbnQgYWN0aXZpdHkgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIGVsc2V3aGVyZSB3aGVuIHRoZXkgaGF2ZSBmZXcgb3RoZXIgb3B0aW9ucywgd2hlbiB0aGV5IGFyZSB0aHJlYXRlbmVkLCBhbmQgd2hlbiBhZHVsdHMgaW5kdWNlIHRoZW0gd2l0aCBtb25leSBvciBpZGVvbG9neS7igJ0gSGVyIGNvbXBhcmlzb24gY2hhbGxlbmdlcyB0aGUgcmVhZGVyIHRvIHRoaW5rIG5vdCBvbmx5IHN5bXBhdGhldGljYWxseSBidXQgYWxzbyBwcmFnbWF0aWNhbGx5LiDigJxQZXJoYXBzIGEgbmV3IGNvbmNlcHQgY291bGQgYmUgZGV2aXNlZCB0byBhY2tub3dsZWRnZSB0aGUgY29tcGxleGl0eSBvZiBpbmRpdmlkdWFscyB3aG8gaGF2ZSBiZWVuIGJvdGggdmljdGltcyBhbmQgcGVycGV0cmF0b3JzLOKAnSBzaGUgc3VnZ2VzdHMgaW4gb25lIG9mIHRoZSBib29r4oCZcyBtb3JlIGlubm92YXRpdmUgc2VjdGlvbnMuPC9wPjxwPkFzIGEgcHVibGljIGRlZmVuZGVyLCBJIGhhdmUgZm91bmQgdGhlIGFkYWdlIOKAnGh1cnQgcGVvcGxlIGh1cnQgcGVvcGxl4oCdIHRvIGJlIGFsbW9zdCB1bml2ZXJzYWxseSB0cnVlLiBNaW5vd+KAmXMgY29uY2VwdCBvZiBhIHZpY3RpbS1wZXJwZXRyYXRvciBtaWdodCBoZWxwIGJyaWRnZSB0aGUgZ2FwIG9mdGVuIGxlZnQgaW4gb3VyIGFkdmVyc2FyaWFsIHN5c3RlbSBiZXR3ZWVuIHRoZSBuYXJyYXRpdmUgb2YgdGhlIHByb3NlY3V0aW9uICh0aGUgZGVmZW5kYW50IGRlc2VydmVzIGNvbmRlbW5hdGlvbikgYW5kIHRoYXQgb2YgdGhlIGRlZmVuc2UgKG15IGNsaWVudCBkZXNlcnZlcyBzeW1wYXRoeSkuIEFsbCBvZiBteSBjbGllbnRzIGFyZSBhbGxlZ2VkIHBlcnBldHJhdG9ycyBhbmQsIGluIG90aGVyIHdheXMsIGFsc28gdmljdGltcy4gQ3JlYXRpbmcgYSBuZXcgY2F0ZWdvcnkgdG8gZW5jb21wYXNzIHRob3NlIG1lc3N5IHRydXRocyBjb3VsZCBiZSByZXZvbHV0aW9uYXJ5OiBpdCBjb3VsZCBwcmlvcml0aXplIHJlaGFiaWxpdGF0aW9uIG92ZXIgcHVuaXNobWVudCBhbmQgc2hpZnQgdGhlIGZvY3VzIHRvd2FyZCBjaGFuZ2luZyB0aGUgY2lyY3Vtc3RhbmNlcyB0aGF0IGxlYWQgcGVvcGxlIHRvIGNvbW1pdCBjcmltZXMgaW4gdGhlIGZpcnN0IHBsYWNlLjwvcD48cD5BbmQgeWV0IE1pbm93IHN0b3BzIG5vdGFibHkgc2hvcnQgb2Ygc3VnZ2VzdGluZyBzd2VlcGluZyBjaGFuZ2VzLiBTaGUgcmVjb21tZW5kcyByZWxhdGl2ZWx5IGxpbWl0ZWQgcmVmb3JtcyB0aGF0IHdvdWxkLCBpbiB0aGVvcnksIHlpZWxkIGEgbGVzcyBkZXN0cnVjdGl2ZSBzeXN0ZW0sIGlmIHByb3Blcmx5IGFwcGxpZWQuIEJ1dCB0aGVzZSBzb2x1dGlvbnMgYXJlIGlsbC1tYXRjaGVkIHRvIHRoZSBzY2FsZSBvZiB0aGUgcHJvYmxlbS48L3A+PHAgPk9uZSB3YXkgTWlub3cgd291bGQgaW50ZWdyYXRlIGZvcmdpdmVuZXNzIGludG8gY3JpbWluYWwgY2FzZXMgaXMgdGhyb3VnaCBpbmNyZWFzZWQganVkaWNpYWwgZGlzY3JldGlvbi4gVGhlc2UgZGF5cywgc3VjaCBkaXNjcmV0aW9uIG9mdGVuIG1hbmlmZXN0cyBpbiBzcGVjaWFsaXplZCDigJxwcm9ibGVtLXNvbHZpbmcgY291cnRzLOKAnSB3aGljaCByZXF1aXJlIGRlZmVuZGFudHMgdG8gZW5nYWdlIGluIGNlcnRhaW4gdGhlcmFwZXV0aWMgcHJvZ3JhbXMsIHN1Ym1pdCB0byByZWd1bGFyIGRydWcgc2NyZWVuaW5ncywgYW5kIGFiaWRlIGJ5IG90aGVyIGNvdXJ0IHJ1bGVzLCBzb21ldGltZXMgaW5jbHVkaW5nIHdob20gdGhleSBjYW4gbGl2ZSB3aXRoIGFuZCB3aGVyZSB0aGV5IGNhbiB0cmF2ZWwuIElmIHRoZSBkZWZlbmRhbnRzIHN1Y2Nlc3NmdWxseSBhYmlkZSBieSB0aGVzZSBydWxlcyBvdmVyIHRoZSBjb3Vyc2Ugb2YgbW9udGhzIG9yIHllYXJzLCB0aGV5IGNhbiBhdm9pZCBpbmNhcmNlcmF0aW9uLCBhbmQgdGhlIGNoYXJnZXMgYXJlIHJlZHVjZWQgb3IgZGlzbWlzc2VkOyBpZiB0aGV5IGFyZSB1bnN1Y2Nlc3NmdWwsIHRoZXkgYXZvaWQgbmVpdGhlci4gVGhlIGdvYWwgb2YgdGhlc2UgY291cnRzIGlzIHRvIGFkZHJlc3MgdGhlIHJvb3QgcHJvYmxlbXMgdGhhdCBsZWFkIHBlb3BsZSB0b3dhcmQgcmVwZWF0ZWQgZW5jb3VudGVycyB3aXRoIGxhdyBlbmZvcmNlbWVudCwgc3VjaCBhcyBkcnVnIG9yIGFsY29ob2wgdXNlLCB0cmF1bWEsIGhvbWVsZXNzbmVzcywgYW5kIG1lbnRhbCBpbGxuZXNzLjwvcD48cD5JIGhhdmUgcHJhY3RpY2VkIGluIHN1Y2ggY291cnRzIGFzIGEgcHVibGljIGRlZmVuZGVyLCBhbmQgdGhleSBkb27igJl0IGFsd2F5cyBwbGF5IG91dCB0aGUgd2F5IE1pbm93IGFuZCBvdGhlcnMgYW50aWNpcGF0ZS4gSW4gMjAxMyBOZXcgWW9yayBlc3RhYmxpc2hlZCB0d2VsdmUgSHVtYW4gVHJhZmZpY2tpbmcgSW50ZXJ2ZW50aW9uIENvdXJ0cy4gSnVkZ2UgRmVybmFuZG8gTS4gQ2FtYWNobyBvZiB0aGUgUXVlZW5zIENyaW1pbmFsIENvdXJ0IGhlbHBlZCBicmluZyBhYm91dCB0aGlzIGlubm92YXRpb24gYWZ0ZXIgbm90aWNpbmcgdGhhdCBtYW55IHNleCB3b3JrZXJzIHdobyBjYW1lIGJlZm9yZSBoaW0gd2VyZSB0cmFwcGVkIGluIGEgY3ljbGU6IHRoZXkgd291bGQgc29saWNpdCBjbGllbnRzLCBiZSBhcnJlc3RlZCwgZ2V0IGNyaW1pbmFsIHJlY29yZHMsIGFuZCB0aGVuIGhhdmUgYW4gZXZlbiBoYXJkZXIgdGltZSBmaW5kaW5nIHdvcmsgb3V0c2lkZSB0aGUgc2V4IHRyYWRlLiDigJxNeSBndXQgdG9sZCBtZSB0aGV5IHdlcmUgbm90IGNyaW1pbmFscyzigJ0gQ2FtYWNobyB0b2xkIHRoZSA8aT5UaW1lczwvaT4uIOKAnFRoZXkgd2VyZSBub3QgZG9pbmcgdGhpcyB2b2x1bnRhcmlseS7igJ0gSGUgYmVnYW4gaW5mb3JtYWxseSBjb25uZWN0aW5nIHBlb3BsZSBoZSBiZWxpZXZlZCB0byBiZSBzZXgtdHJhZmZpY2tpbmcgdmljdGltcyB0byB2b2x1bnRlZXJzLCBhbiBleHBlcmltZW50IHRoYXQgZXZlbnR1YWxseSBiZWNhbWUgdGhlIEh1bWFuIFRyYWZmaWNraW5nIEludGVydmVudGlvbiBDb3VydHMuIEluc3RlYWQgb2Ygc2VuZGluZyBkZWZlbmRhbnRzIHRvIGphaWwsIHRoZSBjb3VydHMgc2VuZCB0aGVtIHRvIGluZGl2aWR1YWwgY291bnNlbGluZyBhbmQgZ3JvdXAgdGhlcmFweSB0byBoZWxwIHRoZW0gbGVhdmUgdGhlIHNleCB0cmFkZSwgYW5kLCBpbiBleGNoYW5nZSBmb3IgdGhlaXIgY29tcGxpYW5jZSB3aXRoIGNvdXJ0LW1hbmRhdGVkIHByb2dyYW1zLCBkaXNtaXNzIHRoZWlyIGNoYXJnZXMgYW5kIHNlYWwgdGhlaXIgcmVjb3Jkcy48L3A+PHA+Q291cnRzIGxpa2UgdGhlc2UsIHdoaWNoIGhhdmUgcHJvbGlmZXJhdGVkIG5hdGlvbndpZGUsIGFwcGVhciB0byBwcmVzZW50IGEgc29mdGVyLCBsZXNzIGFkdmVyc2FyaWFsLCBhbmQgbGVzcyByZXRyaWJ1dGl2ZSBhcHByb2FjaCB0byBjcmltaW5hbCBqdXN0aWNlLiBCdXQgaW4gcHJhY3RpY2UsIHRoZXNlIGxhcmdlbHkgdW5yZWd1bGF0ZWQgY291cnRzIGdyYW50IGluZGl2aWR1YWwganVkZ2VzIGVub3Jtb3VzIHBvd2VyIHRoYXQgbGVhdmVzIHJvb20gZm9yIHRoZW0gdG8gYWN0IGFyYml0cmFyaWx5IG9yIHJlaW5mb3JjZSB0aGVpciBvd24gYmlhc2VzLjxzdXAgPjxhID4yPC9hPjwvc3VwPiBJbiBoZXIgcmVjZW50IGFydGljbGUg4oCcVGhlIFByb2JsZW0gb2YgUHJvYmxlbS1Tb2x2aW5nIENvdXJ0cyzigJ0gRXJpbiBDb2xsaW5zLCBhbiBhc3Npc3RhbnQgbGF3IHByb2Zlc3NvciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBSaWNobW9uZCwgZGVtb25zdHJhdGVzIHRoYXQgdGhlIGRhdGEgb24gdGhlIGVmZmljYWN5IG9mIHRoZXNlIGNvdXJ0cyBpcyBub3QgY29udmluY2luZyBhbmQgdGhhdCB0aGUgY291cnRzIG1pZ2h0IGFjdHVhbGx5IGNyZWF0ZSDigJxyZXNpc3RhbmNlIHRvIGFsdGVybmF0aXZlcyB0aGF0IG1pZ2h0IHRydWx5IHJlZm9ybSB0aGUgc3lzdGVt4oCd4oCUYWx0ZXJuYXRpdmVzIGxpa2UgZGVjcmltaW5hbGl6aW5nIHNleCB3b3JrIGVudGlyZWx5LjwvcD48cD5XaGVuIEkgcHJhY3RpY2VkIGluIGh1bWFuIHRyYWZmaWNraW5nIGNvdXJ0IGluIHRoZSBCcm9ueCwgdGhlIGp1ZGdlIG9mdGVuIHNlZW1lZCBkZXRlcm1pbmVkIHRvIHRha2UgYSBraW5kLCBub25hZHZlcnNhcmlhbCBzdGFuY2UgdG93YXJkIG15IGNsaWVudHMuIEJ1dCBteSBjbGllbnRzIHdlcmUgYWN1dGVseSBhd2FyZSB0aGF0IHRoZXJlIHdlcmUgY3JpbWluYWwgY2hhcmdlcyBwZW5kaW5nIGFnYWluc3QgdGhlbSwgYW5kIHRob3NlIGNoYXJnZXMgY291bGQgYmUgcmVpbnN0YXRlZCBpZiB0aGV5IGRldmlhdGVkIGluIGFueSB3YXkgZnJvbSB0aGUgY291cnTigJlzIHJlcXVpcmVtZW50cywgbWFueSBvZiB3aGljaCB0aGV5IGZvdW5kIHBlcnNvbmFsbHkgaW50cnVzaXZlLiBUZXN0aW5nIHBvc2l0aXZlIGZvciBzdWJzdGFuY2VzIChpbmNsdWRpbmcgYWxjb2hvbCBvciBtYXJpanVhbmEpLCBtaXNzaW5nIGEgY291bnNlbGluZyBhcHBvaW50bWVudCwgbGl2aW5nIHdpdGggYSBwYXJ0bmVyIHRoZSBjb3VydCBkZWVtZWQgdW5zdWl0YWJsZSwgb3IgYW55IG5ldyBhcnJlc3QsIGV2ZW4gYW4gdW5qdXN0aWZpZWQgb25lLCBjb3VsZCByZXN1bHQgaW4gdGhlIGVudGlyZSBkZWFsIHVucmF2ZWxpbmcsIGphaWwgdGltZSwgYW5kIGEgY3JpbWluYWwgcmVjb3JkLjwvcD48cD5UaGUgd2hvbGUgYWdyZWVtZW50IHdhcyBjb25kaXRpb25lZCBvbiB0aGUgZGVmZW5kYW504oCZcyB3aWxsaW5nbmVzcyBub3QgdG8gZmlnaHQgYW55IGFzcGVjdCBvZiB0aGUgY2hhcmdlcyBhZ2FpbnN0IHRoZW0uIFRoZSBwb3dlciBpbWJhbGFuY2UgYmV0d2VlbiBteSBjbGllbnRzIGFuZCB0aGUgY291cnQgaW5mb3JtZWQgdGhlaXIgZXZlcnkgZGVjaXNpb24uIFRoZSBiZXN0IG9wdGlvbiBmb3IgdGhlbSwgaW4gbW9zdCBjYXNlcywgd2FzIHRvIHBsYXkgYWxvbmcgc3VibWlzc2l2ZWx5LCBhY2NlcHRpbmcgd2hhdGV2ZXIgZGlhZ25vc2lzIGFuZCB0cmVhdG1lbnQgdGhlIGNvdXJ0IGRpY3RhdGVkLiBNb3N0IGNsaWVudHMgdG9sZCBtZSB0aGF0IHRoZXkgZmVsdCBkZWdyYWRlZCBieSB0aGUgcHJvY2Vzcy48L3A+PHA+SW4gTmV3IFlvcmssIGh1bWFuIHRyYWZmaWNraW5nIGNvdXJ0cyBoYXZlIGJlY29tZSBwYXJ0IG9mIGEgbGFyZ2VyIGRlYmF0ZSBvdmVyIHdoZXRoZXIgc2V4IHdvcmsgc2hvdWxkIGJlIGNvbnNpZGVyZWQgYSBjcmltZS4gSWYgSnVkZ2UgQ2FtYWNobyBiZWxpZXZlZCB0aGF0IHNleCB3b3JrZXJzIGFyZSBub3QgY3JpbWluYWxzIGFuZCBzaG91bGQgbm90IGJlIHRyZWF0ZWQgYXMgc3VjaCwgd2h5IGFyZSB0aGV5IGluIGEgY3JpbWluYWwgY291cnQsIGZhY2luZyBjcmltaW5hbCBjaGFyZ2VzPyBXaHkgbm90IGp1c3Qgb2ZmZXIgdGhlIHNlcnZpY2VzIHdpdGhvdXQgdGhlIGhhbmRjdWZmcywgdGhlIGFycmVzdCwgdGhlIGxvb21pbmcgdGhyZWF0IG9mIGphaWw/IFdoeSBub3QgaW1wbGVtZW50IGEgbW9yZSBjb21wcmVoZW5zaXZlIGFsdGVybmF0aXZlIHRvIHRoZSBwcmlzb24gc3lzdGVt4oCUdGhlIGtpbmQgb2YgdmlzaW9uIGFydGljdWxhdGVkIGJ5IGFjYWRlbWljcyBhbmQgYWN0aXZpc3RzIHN1Y2ggYXMgTWFyaWFtZSBLYWJhLCBBbGxlZ3JhIE1jTGVvZCwgQW5nZWxhIFkuIERhdmlzLCBSdXRoIFdpbHNvbiBHaWxtb3JlLCBhbmQgTGVpZ2ggR29vZG1hcms/PC9wPjxwPk1jTGVvZCwgZm9yIGV4YW1wbGUsIHdvdWxkIGV4cGFuZCBhIGJyb2FkIHJhbmdlIG9mIHNvY2lhbCBzZXJ2aWNlcyB0byBhdm9pZCBpbXByaXNvbm1lbnQsIGluY2x1ZGluZyBkZWNyaW1pbmFsaXppbmcgbGVzcyBzZXJpb3VzIGluZnJhY3Rpb25zLCBpbmNyZWFzaW5nIHJlc3RvcmF0aXZlIGFkanVkaWNhdGl2ZSBzeXN0ZW1zLCBhbmQgY3JlYXRpbmcgc2FmZSBoYXJib3JzIGZvciBwZW9wbGUgZmxlZWluZyB2aW9sZW5jZS4gR29vZG1hcmssIGluIGhlciBib29rIDxpPkRlY3JpbWluYWxpemluZyBEb21lc3RpYyBWaW9sZW5jZSA8L2k+KDIwMTgpLCBhcmd1ZXMgdGhhdCBjcmltaW5hbGl6YXRpb24g4oCcZG9lcyBsaXR0bGUgdG8gcHJldmVudCBpbnRpbWF0ZSBwYXJ0bmVyIHZpb2xlbmNlLuKAnSBDb3VudGVyaW50dWl0aXZlIGFzIGl0IG1heSBzZWVtIHRvIHNvbWUsIEdvb2RtYXJr4oCZcyByZXNlYXJjaCBzaG93cyB0aGF0IG92ZXIgdGhlIHBhc3QgdGhyZWUgZGVjYWRlcywgY3JpbWluYWxpemF0aW9uIG9mIGRvbWVzdGljIHZpb2xlbmNlIGhhcyBpbmNyZWFzZWQgaW5jYXJjZXJhdGlvbiBidXQgaGFzIG5vdCByZWR1Y2VkIGRvbWVzdGljIHZpb2xlbmNlLiBGaW5hbmNpYWxseSBlbXBvd2VyaW5nIHBlb3BsZSB2dWxuZXJhYmxlIHRvIGRvbWVzdGljIHZpb2xlbmNlLCBhbmQgZ2l2aW5nIG1vcmUgZWNvbm9taWMgc3RhYmlsaXR5IHRvIHRob3NlIHdobyBtaWdodCBjb21taXQgdmlvbGVuY2UsIG1pZ2h0IGhlbHAgcHJldmVudCBpdC4gVG8gYmUgY2xlYXIsIG5vbmUgb2YgdGhlc2UgYXJlIHBvbGl0aWNhbGx5IG1haW5zdHJlYW0gaWRlYXMsIGJ1dCB3aHkgc2hvdWxkIGEgYm9vayBvZiBsZWdhbCB0aGVvcnkgY29uY2VybiBpdHNlbGYgd2l0aCBwb2xsaW5nIG51bWJlcnM/PC9wPjxwPlRvIGhlbHAgdGhlIGxhdyDigJxncm93IHRvd2FyZCBqdXN0aWNlLOKAnSBhcyBNaW5vdyBob3BlcywgbW9yZSByYWRpY2FsIHRoaW5raW5nIGlzIG5lY2Vzc2FyeS4gSW4gPGk+QmVjb21pbmcgQWJvbGl0aW9uaXN0czwvaT4gdGhlIGNpdmlsIHJpZ2h0cyBsYXd5ZXIgRGVyZWNrYSBQdXJuZWxsIHdyaXRlcyBvZiBoZXIgcmVhbGl6YXRpb24gdGhhdCDigJxpbiByZWFsaXR5LCB0aGUgcG9saWNlIHdlcmUgYSBwbGFjZWJv4oCmLiBUaGV5IGNvdWxkIG5vdCBoZWFsIHJlbGF0aW9uc2hpcHMgb3IgcHJvdmlkZSBqb2JzLiBUaGV5IGRpZCBub3QgaW50ZXJydXB0IHZpb2xlbmNlOyB0aGV5IGVzY2FsYXRlZCBpdC7igJ0gUHVybmVsbCBkb2VzIG5vdCBzZWVrIHRvIHJlcGxhY2UgcG9saWNlIHdpdGggYW5vdGhlciBncm91cCwgYnV0IHJhdGhlciBwcm9wb3NlcyB0aGF0IHdlIGV4YW1pbmUgd2h5IHBlb3BsZSBpbiBjcmlzaXMgY2FsbCB0aGUgcG9saWNlIGluIHRoZSBmaXJzdCBwbGFjZS4gSWYgYSBjb21tdW5pdHkgY291bGQgbWVldCB0aG9zZSB1bmRlcmx5aW5nIG5lZWRz4oCUd2l0aCwgZm9yIGluc3RhbmNlLCDigJxzdHJlZXQgdmlvbGVuY2UgaW50ZXJydXB0ZXJzLCBtZWRpYXRvcnMsIGFuZCByZXNvdXJjZXMgZm9yIGZhbWlsaWVzIG9mIHZpY3RpbXMgYXMgcHJvYWN0aXZlIG1lYXN1cmVzIGZvciBjb25mbGljdCByZXNvbHV0aW9uIGFuZCBkZS1lc2NhbGF0aW9u4oCd4oCUdGhpcyBjb3VsZCBlcm9kZSB0aGUgbmVlZCBmb3IgcG9saWNlLiBJdCBjb3VsZCBhbHNvLCBtb3JlIGZ1bmRhbWVudGFsbHksIHByZXZlbnQgaGFybTogaGFybSBhbW9uZyBtZW1iZXJzIG9mIHRoZSBjb21tdW5pdHksIGFuZCBoYXJtIGluZmxpY3RlZCBieSBsYXcgZW5mb3JjZW1lbnQuIFRoaXMgd291bGQgb2J2aWF0ZSB0aGUgbmVlZCBmb3IgZm9yZ2l2ZW5lc3MgaW4gdGhlIGZpcnN0IHBsYWNlLjwvcD48cCA+TGFzdCB5ZWFyLCBhZnRlciBHZW9yZ2UgRmxveWTigJlzIG11cmRlciwgcHJvdGVzdHMgYWdhaW5zdCBwb2xpY2UgbWlzY29uZHVjdCBmYW5uZWQgb3V0IGFjcm9zcyB0aGUgY291bnRyeeKAlGFuZCBtYW55IHBlYWNlZnVsIGRlbW9uc3RyYXRvcnMgZm91bmQgdGhlbXNlbHZlcyBiZWF0ZW4sIHBlcHBlci1zcHJheWVkLCBhbmQgYXJyZXN0ZWQgYnkgdGhlIHBvbGljZS4gQSBudW1iZXIgb2Ygb2ZmaWNpYWxzIGRpZCwgaW4gdGhlIGZvbGxvd2luZyB3ZWVrcywgYWRqdXN0IHRoZWlyIHJlc3BvbnNlIGZvbGxvd2luZyB3aWRlc3ByZWFkIGNhbGxzIGZvciByZWZvcm0uIFRoZSBwb2xpY2UgY2hpZWYgaW4gRm9ydCBXb3J0aCwgVGV4YXMsIGRyb3BwZWQgY3JpbWluYWwgY2hhcmdlcyBhZ2FpbnN0IGRvemVucyBvZiBwcm90ZXN0ZXJzLiBJbiBMb3MgQW5nZWxlcywgb2ZmaWNpYWxzIGFncmVlZCBub3QgdG8gcHJvc2VjdXRlIHRob3VzYW5kcyBvZiBwcm90ZXN0ZXJzIHdobyB3ZXJlIGFycmVzdGVkIGZvciB2aW9sYXRpbmcgY3VyZmV3IG9yIGZhaWxpbmcgdG8gZGlzcGVyc2UuIEluIFBoaWxhZGVscGhpYSwgTWF5b3IgSmltIEtlbm5leSB3YWl2ZWQgYWxsIGNvZGUgdmlvbGF0aW9ucyBpc3N1ZWQgdG8gcHJvdGVzdGVycywgc2F5aW5nLCDigJxNeSBkZWNpc2lvbiB0byB3YWl2ZSB0aGVzZSB2aW9sYXRpb25zIGlzIG5vdCBhIHN0YXRlbWVudCBvbiB0aGUgdmFsaWRpdHkgb2YgdGhlIGluZGl2aWR1YWwgY2l0YXRpb25zLiBSYXRoZXIsIGl0IGlzIGEgcmVjb2duaXRpb24gb2YgdGhlIGNvcmUgY29uY2VybnMgdGhhdCBjYXVzZWQgdGhvdXNhbmRzIHRvIGRlbW9uc3RyYXRlIG9uIHRoZSBzdHJlZXRzIG9mIFBoaWxhZGVscGhpYS7igJ08L3A+PHA+VGhlc2UgYWN0aW9ucyBtYXkgc2VlbSBsaWtlIHRoZSBzb3J0IG9mIHRoaW5nIE1pbm93IGFyZ3VlcyBmb3I6IGFuIGFwcHJvcHJpYXRlLCBldmVuIGdlbmVyb3VzLCBhcHBsaWNhdGlvbiBvZiBmb3JnaXZlbmVzcyB0byB0aGUgbGF34oCUc2hpZnRpbmcgYXR0ZW50aW9uIGF3YXkgZnJvbSBpbmRpdmlkdWFsIGNhc2VzIGFuZCB0b3dhcmQgdGhlIGJpZ2dlciBwaWN0dXJlIChpbiB0aGlzIGNhc2UsIHJhY2lzbSkuIEJ1dCBtYW55IG9mIHRoZSBwcm90ZXN0ZXJzIHdobyB3ZXJlIHRodXMgZm9yZ2l2ZW4gd2VyZSBub3QgcHJhY3RpY2luZyBjaXZpbCBkaXNvYmVkaWVuY2UuIFNvbWUgd2VyZSBkZXRhaW5lZCwgYXQgdGltZXMgd3JvbmdseSwgZm9yIHZpb2xhdGluZyBhZG1pbmlzdHJhdGl2ZSBjb2RlcyBhbmQgY3VyZmV3cy4gT3RoZXJzIHdlcmUgcm91bmRlZCB1cCBmb3Igbm8gYXBwYXJlbnQgcmVhc29uIG90aGVyIHRoYW4gZXhlcmNpc2luZyB0aGVpciBGaXJzdCBBbWVuZG1lbnQgcmlnaHQgdG8gc3BlYWsgb3V0IGFnYWluc3QgcG9saWNlIHZpb2xlbmNlLiBTb21lIG9mIHRoZW0gd2VyZSBhc3NhdWx0ZWQgYnkgYXJtZWQgb2ZmaWNlcnMuIFdoYXQgc2Vuc2UgZG9lcyBpdCBtYWtlIHRvIGRyb3AgdGhlIHNwdXJpb3VzIGNoYXJnZXMgYWdhaW5zdCB0aGVtIGFuZCBjYWxsIHRoaXMgZm9yZ2l2ZW5lc3M/IFdoeSBub3QgY2FsbCBpdCBhbiBhcG9sb2d5LCBhbmQgPGk+YXNrPC9pPiBmb3IgZm9yZ2l2ZW5lc3M/PC9wPjxwPkluIDIwMTUgQ2hpY2FnbyBiZWNhbWUgdGhlIGZpcnN0IGNpdHkgaW4gdGhlIFVTIHRvIGFwcHJvdmUgbXVuaWNpcGFsIHJlcGFyYXRpb25zIGZvciBwb2xpY2UgdmlvbGVuY2UuIEZyb20gdGhlIGVhcmx5IDE5NzBzIHRvIHRoZSBlYXJseSAxOTkwcywgZm9ybWVyIENoaWNhZ28gcG9saWNlIGNvbW1hbmRlciBKb24gQnVyZ2UgYW5kIG90aGVyIG9mZmljZXJzIHRvcnR1cmVkIG1vcmUgdGhhbiAxMjUgaW5kaXZpZHVhbHMsIG1vc3Qgb2YgdGhlbSBCbGFjaywgaW50byBjb25mZXNzaW5nIHRvIGNyaW1lcywgbWFueSBvZiB3aGljaCB0aGV5IGhhZCBub3QgY29tbWl0dGVkLjxzdXAgPjxhID4zPC9hPjwvc3VwPiBJbmNsdWRlZCBpbiB0aGUgcmVwYXJhdGlvbnMgcGFja2FnZSB3YXMgYSBmb3JtYWwgYXBvbG9neSBmcm9tIHRoZSBtYXlvciwgZmluYW5jaWFsIGNvbXBlbnNhdGlvbiB0byBzdXJ2aXZvcnMgYW5kIHRoZWlyIGZhbWlsaWVzLCB3YWl2ZWQgdHVpdGlvbiB0byBjaXR5IGNvbGxlZ2VzLCBhIG1hbmRhdG9yeSBDaGljYWdvIFB1YmxpYyBTY2hvb2xzIGN1cnJpY3VsdW0gdG8gZWR1Y2F0ZSBzdHVkZW50cyBhYm91dCBwb2xpY2UgdG9ydHVyZSB1bmRlciBCdXJnZSwgYW5kIHRoZSBjcmVhdGlvbiBvZiBhIHBlcm1hbmVudCBwdWJsaWMgbWVtb3JpYWwuPHN1cCA+PGEgPjQ8L2E+PC9zdXA+IE9mZmljaWFsIHB1YmxpYyByZWNvZ25pdGlvbiBvZiBwYXN0IHdyb25nZG9pbmcsIGFsb25nIHdpdGggcmVwYXJhdGlvbnMsIGNhbiBiZSBwYXJ0IG9mIGFib2xpdGlvbjsgdGhlIGxhdyBjYW4gYXBvbG9naXplLCBhbmQgc2VlayBmb3JnaXZlbmVzcy48L3A+PHA+VHdvIHllYXJzIGFnbywgQm90aGFtIEplYW7igJlzIHlvdW5nZXIgYnJvdGhlciBCcmFuZHQgd2FzIGNlbGVicmF0ZWQgZm9yIHRoZSBncmFjZSBoZSBkZW1vbnN0cmF0ZWQgaW4gZW1icmFjaW5nIEFtYmVyIEd1eWdlci4gQnV0IGhlIGFsb25lIGNvdWxkIG5vdCBmb3JnaXZlIGhlciBvbiBiZWhhbGYgb2YgZXZlcnlvbmUgd2hvIGhhcyBldmVyIGJlZW4gdHJlYXRlZCB1bmZhaXJseSBieSB0aGUgQW1lcmljYW4gY3JpbWluYWwgc3lzdGVt4oCUaGUgY291bGQgZm9yZ2l2ZSBoZXIgb25seSBmb3IgdGhlIHBhaW4gc2hlIGNhdXNlZCBoaW0gcGVyc29uYWxseSBieSBraWxsaW5nIGhpcyBicm90aGVyLiBUaGVyZSByZW1haW5zIGEgbmVlZCBmb3Igc3VjaCBhIHdpZGVyIHJlY2tvbmluZy4g4oCcSSBoYXZlIHByZWFjaGVkICNmb3JnaXZlbmVzcyBmb3IgMjUgeWVhcnMs4oCdIGZvcm1lciA8YWJicj5OQUFDUDwvYWJicj4gcHJlc2lkZW50IENvcm5lbGwgQnJvb2tzIHdyb3RlIGluIGEgdHdlZXQgYWJvdmUgYSBwaG90byBvZiBKZWFuIGh1Z2dpbmcgR3V5Z2VyLiDigJw8YWJicj5CVVQ8L2FiYnI+IHVzaW5nIHRoZSB3aWxsaW5nbmVzcyBvZiBCbGFjayBwZW9wbGUgdG8gZm9yZ2l2ZSBhcyBhbiBleGN1c2UgdG8gZnVydGhlciB2aWN0aW1pemUgQmxhY2sgcGVvcGxlIGlzIDxhYmJyPlNJTkZVTDwvYWJicj4u4oCdIEZvciBjb250aW51YWxseSBhc2tpbmcgQWZyaWNhbiBBbWVyaWNhbnMgdG8gZm9yZ2l2ZSBwb2xpY2UgYnJ1dGFsaXR5LCBoZSB3cm90ZSwg4oCcQW1lcmljYSBzaG91bGQgYXNrIEJsYWNrIHBlb3BsZSBmb3JnaXZlbmVzcy7igJ08L3A+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxzZWN0aW9uID4gPHAgPlRoaXMgSXNzdWU8L3A+IDxwID5Ob3ZlbWJlciAxOCwgMjAyMTwvcD4gPGFydGljbGU+IDxhID4gPGRpdiA+IFJvYmVydCBLdXR0bmVyPC9kaXY+IDxkaXYgPiA8cCA+QnJpbmdpbmcgdGhlIFN1cHBseSBDaGFpbiBCYWNrIEhvbWU8L3A+IDwvZGl2PiA8L2E+IDwvYXJ0aWNsZT4gPGFydGljbGU+IDxhID4gPGRpdiA+IFJ1dGggTWFyZ2FsaXQ8L2Rpdj4gPGRpdiA+IDxwID5UcmFpbnMgdG8gTm93aGVyZTwvcD4gPC9kaXY+IDwvYT4gPC9hcnRpY2xlPiA8YXJ0aWNsZT4gPGEgPiA8ZGl2ID4gS2F0aHJ5biBIdWdoZXM8L2Rpdj4gPGRpdiA+IDxwID5UaGUgV2hpdGUgSGVhdCBvZiBDb252aWN0aW9uPC9wPiA8L2Rpdj4gPC9hPiA8L2FydGljbGU+IDxhID4gQWxsIENvbnRlbnRzIDwvYT4gPC9zZWN0aW9uPjwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8cCA+U3Vic2NyaWJlIHRvIG91ciBOZXdzbGV0dGVyczwvcD4gPHAgPkJlc3Qgb2YgVGhlIE5ldyBZb3JrIFJldmlldywgcGx1cyBib29rcywgZXZlbnRzLCBhbmQgb3RoZXIgaXRlbXMgb2YgaW50ZXJlc3Q8L3A+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8cCA+TW9yZSBieSBTYXJhaCBMdXN0YmFkZXI8L3A+IDxhcnRpY2xlPiA8ZGl2ID4g4oCYSG93IENhbiBJIEtlZXAgTXkgRmFtaWx5IFNhZmU/4oCZIDwvZGl2PiA8cCA+IEFwcmlsIDE2LCAyMDIwIDwvcD4gPC9hcnRpY2xlPiA8L2Rpdj48L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxwID5Nb3JlIGJ5IFNhcmFoIEx1c3RiYWRlcjwvcD4gPGFydGljbGU+IDxkaXYgPiA8YSA+4oCYSG93IENhbiBJIEtlZXAgTXkgRmFtaWx5IFNhZmU/4oCZPC9hPiA8L2Rpdj4gPHAgPiBBcHJpbCAxNiwgMjAyMCA8L3A+IDwvYXJ0aWNsZT4gPC9kaXY+PC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8YSA+U2FyYWggTHVzdGJhZGVyPC9hPiA8cCA+U2FyYWggTHVzdGJhZGVyIGlzIGEgcHVibGljIGRlZmVuZGVyIGluIE5ldyBZb3JrIENpdHkuIChOb3ZlbWJlciAyMDIxKTwvcD4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8c2VjdGlvbiA+IDxwID5UaGlzIElzc3VlPC9wPiA8cCA+Tm92ZW1iZXIgMTgsIDIwMjE8L3A+IDxhcnRpY2xlPiA8YSA+IDxkaXYgPiBSb2JlcnQgS3V0dG5lcjwvZGl2PiA8ZGl2ID4gPHAgPkJyaW5naW5nIHRoZSBTdXBwbHkgQ2hhaW4gQmFjayBIb21lPC9wPiA8L2Rpdj4gPC9hPiA8L2FydGljbGU+IDxhcnRpY2xlPiA8YSA+IDxkaXYgPiBSdXRoIE1hcmdhbGl0PC9kaXY+IDxkaXYgPiA8cCA+VHJhaW5zIHRvIE5vd2hlcmU8L3A+IDwvZGl2PiA8L2E+IDwvYXJ0aWNsZT4gPGFydGljbGU+IDxhID4gPGRpdiA+IEthdGhyeW4gSHVnaGVzPC9kaXY+IDxkaXYgPiA8cCA+VGhlIFdoaXRlIEhlYXQgb2YgQ29udmljdGlvbjwvcD4gPC9kaXY+IDwvYT4gPC9hcnRpY2xlPiA8YSA+IEFsbCBDb250ZW50cyA8L2E+IDwvc2VjdGlvbj48L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8b2w+IDxsaSA+IDEgPHA+VGhlcmUgYXJlIGEgZmV3IHNjYXR0ZXJlZCBpbXBsZW1lbnRhdGlvbnMgb2YgcmVzdG9yYXRpdmUganVzdGljZSB0aGF0IGluY29ycG9yYXRlIG9wZW4gZGlhbG9ndWUgYW5kIGZvcmdpdmVuZXNzIGJldHdlZW4gY29udmljdGVkIGluZGl2aWR1YWxzIGFuZCB2aWN0aW1zIG9yIHZpY3RpbXPigJkgcmVsYXRpdmVzLiBUaGVzZSwgaG93ZXZlciwgb2Z0ZW4gaW52b2x2ZSBvbmx5IHJlbGF0aXZlbHkgbWlub3IsIHByb3BlcnR5LWJhc2VkIGNhc2VzLCBhbmQgdGhleSBhcmUgdGhlIGV4Y2VwdGlvbiByYXRoZXIgdGhhbiB0aGUgcnVsZS4gRm9yIG1vcmUgb24gcmVzdG9yYXRpdmUganVzdGljZSwgc2VlIE1pY2hlbGxlIEt1bywg4oCcV2hhdCBSZXBsYWNlcyBQcmlzb25zPyzigJ0gPGk+VGhlIE5ldyBZb3JrIFJldmlldzwvaT4sIEF1Z3VzdCAyMCwgMjAyMC7CoOKGqTwvcD4gPC9saT4gPGxpID4gMiA8cD5FcmluIFIuIENvbGxpbnMsIOKAnFRoZSBQcm9ibGVtIG9mIFByb2JsZW0tU29sdmluZyBDb3VydHMs4oCdIDxpPlVDIERhdmlzIExhdyBSZXZpZXc8L2k+LCBWb2wuIDU0LCBOby4gMyAoRmVicnVhcnkgMjAyMSkuwqA8YSA+4oapPC9hPjwvcD4gPC9saT4gPGxpID4gMyA8cD5Gb3IgbW9yZSBvbiB0aGUgcmVwYXJhdGlvbnMsIHNlZSBQZXRlciBDLiBCYWtlciwg4oCcQSBMZWdhY3kgb2YgVG9ydHVyZSBpbiBDaGljYWdvLOKAnSA8aT5UaGUgTmV3IFlvcmsgUmV2aWV3PC9pPiwgSnVseSAyLCAyMDIwLiDihqk8L3A+IDwvbGk+IDxsaSA+IDQgPHA+VmFyaW91cyBtYW5kYXRlcyBvZiB0aGUgYmlsbCBoYXZlIGJlZW4gZ2l2ZW4gaW5hZGVxdWF0ZSBzdXBwb3J0IHRvIGJlIGVudGlyZWx5IGVmZmVjdGl2ZSwgYW5kIHRoZSBwdWJsaWMgbWVtb3JpYWwgcmVtYWlucyB1bmJ1aWx0LCBidXQgdGhlIGVmZm9ydCBvZmZlcnMgYSBwcm9taXNpbmcgbW9kZWwgYW5kIGlzIG9uZSBvZiB0aGUgb25seSBleGFtcGxlcyBvZiByZXBhcmF0aW9ucyBpbiB0aGUgVVMuwqA8YSA+4oapPC9hPjwvcD4gPC9saT4gPC9vbD4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxzZWN0aW9uID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPHAgPlJlYWQgTmV4dDwvcD4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxhcnRpY2xlID4gPGEgPiA8ZGl2ID4gTXVycmF5IEtlbXB0b24gPC9kaXY+IDxwID5UaGUgTmV3IEVxdWFsaXR5PC9wPiA8cCA+IEZlYnJ1YXJ5IDYsIDE5OTcgaXNzdWUgPC9wPiA8L2E+IDwvYXJ0aWNsZT4gPC9kaXY+IDxkaXYgPiA8YXJ0aWNsZSA+IDxhID4gPGRpdiA+IFJlemEgQmFyYWhlbmksIFBhdmVsIExpdHZpbm92LCBhbmQgTWFydGluIFNvc3RyZSA8L2Rpdj4gPHAgPkZyZWUgTXVzdGFmYSBEemhlbWlsZXY8L3A+IDxwID4gSnVseSAxNSwgMTk3NiBpc3N1ZSA8L3A+IDwvYT4gPC9hcnRpY2xlPiA8L2Rpdj4gPGRpdiA+IDxhcnRpY2xlID4gPGEgPiA8ZGl2ID4gS29maSBBbm5hbiA8L2Rpdj4gPHAgPkFuIElsbGVnYWwgV2FyPC9wPiA8cCA+IE9jdG9iZXIgMjEsIDIwMDQgaXNzdWUgPC9wPiA8L2E+IDwvYXJ0aWNsZT4gPC9kaXY+IDxkaXYgPiA8YXJ0aWNsZSA+IDxhID4gPGRpdiA+IEpvbmF0aGFuIE1pcnNreSA8L2Rpdj4gPHAgPlBla2luZ+KAmXMgQ2hvaWNlPC9wPiA8cCA+IEp1bmUgMTIsIDE5OTcgaXNzdWUgPC9wPiA8L2E+IDwvYXJ0aWNsZT4gPC9kaXY+IDxkaXYgPiA8YXJ0aWNsZSA+IDxhID4gPGRpdiA+IFBldGVyIEIuIFJlZGRhd2F5IDwvZGl2PiA8cCA+VGhlIFJlbGVudGxlc3MgS0dCPC9wPiA8cCA+IEZlYnJ1YXJ5IDUsIDE5NzYgaXNzdWUgPC9wPiA8L2E+IDwvYXJ0aWNsZT4gPC9kaXY+IDxkaXYgPiA8YXJ0aWNsZSA+IDxhID4gPGRpdiA+IEFudGhvbnkgVC4gTW9mZmV0dCA8L2Rpdj4gPHAgPkNoaWxl4oCZcyBNdXJkZXJvdXMgUmVnaW1lPC9wPiA8cCA+IE5vdmVtYmVyIDEzLCAxOTc1IGlzc3VlIDwvcD4gPC9hPiA8L2FydGljbGU+IDwvZGl2PiA8ZGl2ID4gPGFydGljbGUgPiA8YSA+IDxkaXYgPiBCcnVjZSBDdW1pbmdzIDwvZGl2PiA8cCA+VGhlIEtpbSBDaGkgSGEgQ2FzZTwvcD4gPHAgPiBPY3RvYmVyIDE2LCAxOTc1IGlzc3VlIDwvcD4gPC9hPiA8L2FydGljbGU+IDwvZGl2PiA8ZGl2ID4gPGFydGljbGUgPiA8YSA+IDxkaXYgPiBLZW5uZXRoIFJvdGggPC9kaXY+IDxwID5Db250cm9sbGluZyB0aGUgRHJvbmVzPC9wPiA8cCA+QW55IHByb2dyYW0gdGhhdCBraWxscyBvbiB0aGUgYmFzaXMgb2Ygc2VjcmV0IGludGVsbGlnZW5jZSByaXNrcyBhYnVzZS4gV2UgbmVlZCBjbGVhciBsaW1pdHMgaW4gdGhlIGxhdy48L3A+IDxwID4gQXByaWwgNCwgMjAxMyBpc3N1ZSA8L3A+IDwvYT4gPC9hcnRpY2xlPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L3NlY3Rpb24+IDwvYXJ0aWNsZT4gPC9zZWN0aW9uPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8cCA+R2l2ZSB0aGUgZ2lmdCB0aGV5J2xsIG9wZW4gYWxsIHllYXI8L3A+IDxwID5TYXZlIDU1JSBvZmYgdGhlIHJlZ3VsYXIgcmF0ZSBhbmQgb3ZlciA3NSUgb2ZmIHRoZSBjb3ZlciBwcmljZSBhbmQgcmVjZWl2ZSBhIGZyZWUgMjAyMiBjYWxlbmRhciE8L3A+IDxkaXYgPiA8YSA+R2l2ZSBhIGdpZnQ8L2E+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2JvZHk+","title":"146","article":"185"}
{"url":"https://www.nybooks.com/articles/2021/08/19/du-bois-color-line-paris-exposition/","text":"","title":"146","article":"189"}
{"url":"https://www.nybooks.com/articles/2021/10/21/human-costs-artificial-intelligence/","text":"","title":"146","article":"202"}
