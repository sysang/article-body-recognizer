{"url":"https%3A%2F%2Frightsindevelopment.org%2Fcommunity-voices-chad-anti-corruption%2F","text":"PGJvZHkgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxhID5CTE9HPC9hPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID48dWwgPjxsaSA+PGEgPkFib3V0PC9hPjwvbGk+IDxsaSA+PGEgPk91ciBXb3JrPC9hPjwvbGk+IDxsaSA+PGEgPk5ld3M8L2E+PC9saT4gPGxpID48YSA+UmVzb3VyY2VzPC9hPjwvbGk+IDxsaSA+PGEgPkJsb2c8L2E+PC9saT4gPGxpID48YSA+RG9uYXRlPC9hPjwvbGk+IDwvdWw+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8aDIgPkNvbW11bml0eSB2b2ljZXM6IGludGVydmlldyB3aXRoIEphY3F1ZXMgTmdhcmFzc2FsIFNhaGFtLCBhbnRpLWNvcnJ1cHRpb24gYWN0aXZpc3QgaW4gQ2hhZDwvaDI+IDxwID5CeSBMb3JlbmEgQ290emEgTm92IDA0LCAyMDIwPC9wPiA8ZGl2ID4gPHA+QWhlYWQgb2YgdGhlIEZpbmFuY2UgaW4gQ29tbW9uIHN1bW1pdCwgd2Ugc3BlYWsgd2l0aCBKYWNxdWVzIE5nYXJhc3NhbCBTYWhhbSwgYW4gYW50aS1jb3JydXB0aW9uIGFjdGl2aXN0IGluIENoYWQgd2hvIHdvcmtzIGZvciBDSUxPTkcgKG1lbWJlciBvZiB0aGUgZ2xvYmFsIG5ldHdvcmsgRk9SVVMpICwgYWJvdXQgZGV2ZWxvcG1lbnQgZmluYW5jZSwgaHVtYW4gcmlnaHRzLCBhbmQgdGhlIGltcGFjdCBvZiBkZXZlbG9wbWVudCBwcm9qZWN0cyBvbiBsb2NhbCBjb21tdW5pdGllcy48L3A+IDxwPkhvdyBhcmUgZGV2ZWxvcG1lbnQgcHJvamVjdHMgYWZmZWN0aW5nIHRoZSBsaWZlIG9mIGxvY2FsIGNvbW11bml0aWVzIGluIENoYWQ/PC9wPiA8cD5UaGUgbWFpbiBwcm9qZWN0cyBmaW5hbmNlZCBieSBkZXZlbG9wbWVudCBiYW5rcyBpbiBDaGFkIGFyZSBpbmZyYXN0cnVjdHVyZSBwcm9qZWN0cywgc3VjaCBhcyBkZXZlbG9wbWVudCBvZiByb2FkcyBvciBlbGVjdHJpY2l0eSBsaW5lcywgZWR1Y2F0aW9uYWwgcHJvamVjdHMsIGFuZCB0aGVuIGFsc28gaW4gdGhlIGFncmljdWx0dXJhbCBhbmQgdGhlIGhlYWx0aCBzZWN0b3IuIEFuZCB0aGVyZSBhcmUgc29tZSBwcm9qZWN0cyBpbiB0aGUgZXh0cmFjdGl2ZSBpbmR1c3RyeSBzZWN0b3IgdGhhdCBhcmUgZmluYW5jZWQgYnkgdGhlIFdvcmxkIEJhbmsgd2hpY2ggaGF2ZSBoYWQgYSBuZWdhdGl2ZSBpbXBhY3QgZm9yIHRoZSBsb2NhbCBwb3B1bGF0aW9uLCBiZWNhdXNlIG9mIGVudmlyb25tZW50YWwgZGVncmFkYXRpb24sIHRoZSBpbXBhY3Qgb24gYXJhYmxlIGxhbmQgYW5kIHNvIG9uLjwvcD4gPHA+VGhlIG1haW4gaXNzdWUgaXMgdGhhdCB0aG9zZSBpbXBsZW1lbnRpbmcgdGhlc2UgcHJvamVjdHMgYXJlIHB1YmxpYyBhdXRob3JpdGllcywgYW5kIHRoZSBpbXBsZW1lbnRhdGlvbiBvZiB0aGVzZSBwcm9qZWN0cyBpcyBwcm9ibGVtYXRpYyBiZWNhdXNlIGl04oCZcyBvZnRlbiBiYXNlZCBvbiBjbGllbnRlbGlzbSBhbmQgbGVhZHMgdG8gY29ycnVwdGlvbjsgdGhpcyBpcyB3aGF0IHdlIGNhbGwgdGhlIOKAnHdlYWtlbmluZyBvZiBmaW5hbmNlc+KAnSBvZiB0aGVzZSBwcm9qZWN0cy7CoDwvcD4gPHA+V2hhdOKAmXMgdGhlIHJvbGUgZm9yIGNpdmlsIHNvY2lldHkgYW5kIHdoYXQgYXJlIHRoZSBjaGFsbGVuZ2VzIGZvciBodW1hbiByaWdodHMgZGVmZW5kZXJzIGluIENoYWQ/PC9wPiA8cD5JbiByZWxhdGlvbiB0byBodW1hbiByaWdodHMgZGVmZW5kZXJzIGFuZCB0aGVpciBzaXR1YXRpb24gaW4gQ2hhZCwgdGhleeKAmXJlIGluIGEgc3RhdGUgb2YgdW5wcmVjZWRlbnRlZCBpbnNlY3VyaXR5LiBXaGVuIHdlIHBvc2UgdGhlIHF1ZXN0aW9uIG9mIGFjY2VzcyB0byBpbmZvcm1hdGlvbiwgd2hlbiBjaXRpemVucyBvcmdhbmlzZSB0aGVtc2VsdmVzIGluIGFuIG9yZ2FuaXNhdGlvbiB0byBkZW1hbmQgY2VydGFpbiB0aGluZ3MgcmVnYXJkaW5nIGRldmVsb3BtZW50IGFjdGl2aXRpZXMsIHVzIGxlYWRlcnMgb2YgY2l2aWwgc29jaWV0eSBhcmUgc3RpZ21hdGl6ZWQ6IHdlIGFyZSBhY2N1c2VkIG9mIGJlaW5nIGNsb3NlIHRvIHRoZSBvcHBvc2l0aW9uIG9yIGVuZW1pZXMgb2YgdGhlIG5hdGlvbiwganVzdCBiZWNhdXNlIHdl4oCZcmUgZXhwcmVzc2luZyBvdXIgb3BpbmlvbiBvbiBpc3N1ZXMgcmVsYXRlZCB0byBnb3Zlcm5hbmNlLiA8L3A+IDxwPldlIG5lZWQgdG8gcmFpc2UgY29uY2VybnMgd2hlbiB0aGVyZSBhcmUgcHJvYmxlbXMgcmVsYXRlZCB0byBwcm9qZWN0cyB0aGF0IGNvbmNlcm4gb3VyIHBvcHVsYXRpb24sIG91ciBmdXR1cmUgYW5kIG91ciB5b3V0aCDigJMgd2UgaW50ZXJ2ZW5lIHRvIG1ha2UgdGhlIGF1dGhvcml0aWVzIG1vcmUgdHJhbnNwYXJlbnQgYWJvdXQgdGhpcywgYnV0IHRvZGF5LCBpc3N1ZXMgcmVsYXRlZCB0byBnb3Zlcm5hbmNlIG1ha2UgY2l2aWwgc29jaWV0eSBiZSB2ZXJ5IG5lZ2F0aXZlbHkgcGVyY2VpdmVkIGluIENoYWQuIFdlIGFyZSBsaXZpbmcgYSBzdGF0ZSBvZiBjb25zdGFudCwgdW5wcmVjZWRlbnRlZCBpbnNlY3VyaXR5LiBXZSBsaXZlIGluIGEgcGxhY2Ugd2hlcmUgdmlvbGVuY2UgaXMgcHJvbWluZW50LCBhbmQgb3VyIHdvcmsgYnJpbmdzIGZ1cnRoZXIgcmlza3MuIEJ1dCB3ZSBkbyB0aGlzIHdvcmsgYmVjYXVzZSBvZiBhIGNvbnZpY3Rpb24gdGhhdCB0aGlzIGNvcnJ1cHRpb24sIHRoaXMgbWlzYXBwcm9wcmlhdGlvbiBvZiBmdW5kcywgdGhpcyBpbmp1c3RpY2UgbXVzdCBiZSBkZW5vdW5jZWQsIHNvIHRoYXQgdGhlIHBvb3Jlc3QgcGVvcGxlIGRvbuKAmXQgaGF2ZSB0byBjb250aW51ZSBsaXZpbmcgaW4gcG92ZXJ0eSwgYW5kIHNvIHRoYXQgY2VydGFpbiBwZW9wbGUgY2Fu4oCZdCBjb250aW51ZSBlbnJpY2hpbmcgdGhlbXNlbHZlcyBhdCB0aGUgY29zdCBvZiB0aGUgcGVvcGxlLiBUaGF04oCZcyB3aHkgd2UgZG8gdGhpcyB3b3JrLjwvcD4gPHA+VG9kYXkgd2UgaGF2ZSBhIGNhZHJlIGluIHBsYWNlIGZvciB0aGUgZGVmZW5jZSBvZiBodW1hbiByaWdodHMsIGJ1dCBJIGRvbuKAmXQga25vd+KApml0IGNhbuKAmXQgYmUgdHJ1c3RlZC4gV2hlbiBkZWZlbmRlcnMgaGF2ZSBiZWVuIGluIGRhbmdlciwgdGhleSBoYXZlIGJlZW4gaW4gY29udGFjdCB3aXRoIGluc3RpdHV0aW9ucyBpbiBFdXJvcGUgb3IgQWZyaWNhLiBCdXQgdGhpcyBxdWVzdGlvbiBvZiBwcm90ZWN0aW9uIG9mIGh1bWFuIHJpZ2h0cyBkZWZlbmRlcnMgaXMgYSBxdWVzdGlvbiB0aGF0IG5lZWRzIHRvIGJlIHRyZWF0ZWQgd2l0aCBhIGxvdCBvZiBjYXJlIGFuZCBwb3NpdGl2ZSBhdHRlbnRpb24gZm9yIGl0IHRvIGJlIHNvbHZlZC7CoDwvcD4gPHA+V2hhdCBhcmUgdGhlIG1haW4gY2hhbGxlbmdlcyBmb3IgYW4gYW50aS1jb3JydXB0aW9uIGFjdGl2aXN0IGluIENoYWQ/PC9wPiA8cD5J4oCZdmUgYmVlbiBjb250YWN0ZWQgbXVsdGlwbGUgdGltZXMgcmVnYXJkaW5nIGNvcnJ1cHRpb24gaW4gQ2hhZCBiZWNhdXNlIEkgd29yayBhcyBhIGNvb3JkaW5hdG9yIG9uIHRoaXMgaXNzdWUgZm9yIGFuIGFudGktY29ycnVwdGlvbiBvcmdhbmlzYXRpb24gaW4gQ2hhZC4gSeKAmXZlIGJlZW4gY29udGFjdGVkIGJ5IHRoZSBFdXJvcGVhbiBVbmlvbiBDb21taXNzaW9uLCBiZWNhdXNlIHRoZXnigJlyZSBpbnZvbHZpbmcgYW50aS1jb3JydXB0aW9uIG9yZ2FuaXNhdGlvbnMgbW9yZSB0byBoZWxwIHNvbHZlIHRoaXMgaXNzdWUgYW5kIHRvIGVuc3VyZSB0aGF0IHJlYWwgZGV2ZWxvcG1lbnQgY2FuIHRha2UgcGxhY2UgdG9kYXkuIFRoZXkga25vdyB0aGF0IHRoZXJlIGFyZSBtYW55IGdhcHMsIGFuZCB0aGUgbGFjayBvZiBlZmZpY2FjeSBhbmQgaW1wYWN0IG9mIHRoZXNlIHByb2plY3RzIGlzIHByb2JsZW1hdGljLiBSZWNlbnRseSwgSSBoYWQgYSBtZWV0aW5nIHdpdGggdGhlIFdvcmxkIEJhbmsg4oCTIHRoZXkgcmVhbGlzZSB0aGF0IGFudGktY29ycnVwdGlvbiBvcmdhbmlzYXRpb25zIG5lZWQgdG8gYmUgaW52b2x2ZWQgaW4gdGhlaXIgYWN0aXZpdGllcy4gQnV0IGZvciB0aGlzIGludm9sdmVtZW50LCBjaXZpbCBzb2NpZXR5IGhhcyB0byBoYXZlIHRoZSBtZWFucyB0byBiZSBhYmxlIHRvIGdvIGludG8gdGhlIGZpZWxkLCB0byBkbyBpbnZlc3RpZ2F0aW9ucywgdG8gZG8gc3VydmV5cyBvbiBjb3JydXB0aW9uIGZvciB0aGlzIG9yIHRoYXQgcHJvamVjdCBmaW5hbmNlZCBieSBkZXZlbG9wbWVudCBiYW5rcywgaW4gb3JkZXIgdG8gaGVscCBvdXIgY291bnRyeSBtb3ZlIGZvcndhcmQuIEluIGNhc2VzIHdoZXJlIHRoZXnigJlyZSB0YWxraW5nIHRvIHRoZSBzdGF0ZXMsIHRoZXkgbmVlZCB0byBoYXZlIHRoZSBjb3VyYWdlIHRvIHRhbGsgYWJvdXQgY29ycnVwdGlvbiBhbmQgdmlvbGF0aW9uIG9mIGh1bWFuIHJpZ2h0cywgYmVjYXVzZSBjb3JydXB0aW9uIGlzIGEgdmlvbGF0aW9uIG9mIGh1bWFuIHJpZ2h0cyB0aGF0IGFmZmVjdHMgdGhlIG1vc3QgdnVsbmVyYWJsZS4gSW1hZ2luZSDigJMgZnVuZHMgYXJlIGdpdmVuIHRvIGVkdWNhdGlvbiwgYW5kIHdoZW4gdGhleeKAmXJlIG1pc2FwcHJvcHJpYXRlZCwgaXQgYWZmZWN0cyB0aGUgbW9zdCB2dWxuZXJhYmxlLCB3aG8gaGF2ZSB0aGUgcmlnaHQgdG8gZWR1Y2F0aW9uISBCYW5rcyBjb3VsZCByZXNlYXJjaCB3aGVyZSBmdW5kcyBhcmUgbWlzYXBwcm9wcmlhdGVkLCBhbmQgdGhpcyB3b3VsZCBoYXZlIGEgY2xlYXIgaW1wYWN0IG9uIHJlc3VsdHMuIEl04oCZcyBhIHF1ZXN0aW9uIHRoYXQgY29uY2VybnMgYSBsb3Qgb2YgcGVvcGxlLCBidXQgY2l2aWwgc29jaWV0eSBuZWVkcyB0byBiZSBvcmdhbmlzZWQgdG8gZGVub3VuY2UgdGhpcy4gSXTigJlzIGV2ZXJ5d2hlcmUuIEJ1dCBob3cgY2FuIHlvdSBvcmdhbmlzZSBjaXZpbCBzb2NpZXR5IHRvIGJlIGFibGUgdG8gYXNrIHRoZSBiYW5rcyBmb3IgdGhlIG1lYW5zIHRvIGRvIHRoaXM/PC9wPiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8aDUgPlRhZ3M6PC9oNT4gPC9kaXY+IDxkaXYgPiA8aDUgPkFib3V0IHRoZSBBdXRob3I6PC9oNT4gPGRpdiA+TG9yZW5hIENvdHphPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxkaXYgPlByZXZpb3VzIFBvc3Q6IEhlbWFudGhhIFdpdGhhbmFnZTogZGV2ZWxvcG1lbnQgYmFua3MgbXVzdCB1cGhvbGQgaHVtYW4gcmlnaHRzPC9kaXY+IDxkaXYgPk5leHQgUG9zdDogQ29tbXVuaXR5IHZvaWNlczogaW50ZXJ2aWV3IHdpdGggRWNvY2x1YiBlbnZpcm9ubWVudGFsIGFjdGl2aXN0cywgVWtyYWluZSA8L2Rpdj48L2Rpdj4gPGRpdiA+IG5vIGNvbW1lbnRzIDxkaXYgPiA8aDMgPkxlYXZlIGEgUmVwbHkgPHNtYWxsPjxhID5DYW5jZWwgcmVwbHk8L2E+PC9zbWFsbD48L2gzPjwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9ib2R5Pg==","title":"29","article":"31"}
{"url":"https%3A%2F%2Frightsindevelopment.org%2Fcoalition-conversations-lets-make-our-voices-heard%2F","text":"PGJvZHkgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxhID5CTE9HPC9hPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID48dWwgPjxsaSA+PGEgPkFib3V0PC9hPjwvbGk+IDxsaSA+PGEgPk91ciBXb3JrPC9hPjwvbGk+IDxsaSA+PGEgPk5ld3M8L2E+PC9saT4gPGxpID48YSA+UmVzb3VyY2VzPC9hPjwvbGk+IDxsaSA+PGEgPkJsb2c8L2E+PC9saT4gPGxpID48YSA+RG9uYXRlPC9hPjwvbGk+IDwvdWw+PC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8aDIgPkNvYWxpdGlvbiBDb252ZXJzYXRpb25zOiBMZXTigJlzIG1ha2Ugb3VyIHZvaWNlcyBoZWFyZC48L2gyPiA8cCA+QnkgTG9yZW5hIENvdHphIEp1biAyNSwgMjAyMDwvcD4gPGRpdiA+IDxkaXYgPjxwID5JbnRlcnZpZXcgd2l0aCBhIGdyb3VwIG9mIGVudmlyb25tZW50YWwgZGVmZW5kZXJzIGluIEltaWRlciwgTW9yb2Njbywgd2hvIGFyZSBwcm90ZXN0aW5nIGFnYWluc3QgYSBzaWx2ZXIgbWluZSB3aGljaCBpcyBzZXZlcmVseSBwb2xsdXRpbmcgdGhlaXIgbGFuZCBhbmQgdGhyZWF0ZW5pbmcgdGhlaXIgYWxyZWFkeSBzY2FyY2Ugd2F0ZXIgcmVzb3VyY2VzIChOb3ZlbWJlciAyMDE3KS4gQ3JlZGl0OiBMb3JlbmEgQ290emE8L3A+PC9kaXY+IDxwPkl0IGhhcyBiZWVuIG9ubHkgYSBmZXcgd2Vla3Mgc2luY2UgSSBqb2luZWQgdGhlIENvYWxpdGlvbiBmb3IgSHVtYW4gUmlnaHRzIGluIERldmVsb3BtZW50LCBidXQgSSBoYXZlIGFscmVhZHkgaGFkIHRoZSBwcml2aWxlZ2Ugb2YgbGlzdGVuaW5nIHRvIGFuZCBsZWFybmluZyBmcm9tIGRvemVucyBvZiBpbnNwaXJpbmcgcGVvcGxlIGZyb20gYXJvdW5kIHRoZSB3b3JsZC4gPGEgPkNvbW11bml0eSBtZW1iZXJzPC9hPiBpbXBhY3RlZCBieSBkZXZlbG9wbWVudCBwcm9qZWN0cywgd29tZW7igJlzIHJpZ2h0cyBhbmQgZW52aXJvbm1lbnRhbCBhY3RpdmlzdHMsIHJlcHJlc2VudGF0aXZlcyBvZiBjaXZpbCBzb2NpZXR5IG9yZ2FuaXphdGlvbnMgYW5kIGdyYXNzcm9vdHMgbW92ZW1lbnRzOiBwZW9wbGUgZnJvbSBhbGwgd2Fsa3Mgb2YgbGlmZSwgYnV0IHdobyBhcmUgc2hhcmluZyB0aGUgc2FtZSBjb21taXRtZW50IGFuZCB2YWx1ZXMuIFdlIGFsbCBiZWxpZXZlIGluIHNvY2lhbCBqdXN0aWNlLCB3ZSBhbGwgY2FyZSBhYm91dCBvdXIgcGxhbmV0LCB3ZSBhbGwgZmlnaHQgZm9yIGh1bWFuIHJpZ2h0cy4gVGhlc2UgcGVvcGxlIOKAkyBhbmQgd2hhdCB0aGV5IHN0YW5kIHVwIGZvciDigJMgYXJlIHRoZSByZWFzb24gSSBqb2luZWQgdGhlIENvYWxpdGlvbi48L3A+IDxwPlRocm91Z2ggbXkgcm9sZSBhcyB0aGUgQ29hbGl0aW9u4oCZcyBDb21tdW5pY2F0aW9ucyBMZWFkLCBJIGFtIGhvcGluZyB0byBoZWxwIGFtcGxpZnkgb3VyIG1lbWJlcnPigJkgYW5kIHBhcnRuZXJz4oCZIHZvaWNlcywgdG8gZnVydGhlciBzdHJlbmd0aGVuIHRoZSBjb25uZWN0aW9ucyBhbmQgY29sbGFib3JhdGlvbiBiZXR3ZWVuIHRoZW0sIGFuZCBmb3IgdXMgdG8gZXhwbG9yZSB0b2dldGhlciBuZXcgY29tbXVuaWNhdGlvbnMgc3RyYXRlZ2llcyB0byBhZHZvY2F0ZSBmb3IgYSBodW1hbiByaWdodHMgYXBwcm9hY2ggdG8gZGV2ZWxvcG1lbnQuPC9wPiA8cD5CZWZvcmUgSSB0b29rIHVwIHRoaXMgcG9zaXRpb24sIEkgd29ya2VkIGZvciBvdmVyIGZvdXIgeWVhcnMgd2l0aCBGcm9udCBMaW5lIERlZmVuZGVycywgYSBub24tZ292ZXJubWVudGFsIG9yZ2FuaXphdGlvbiB0aGF0IHByb3ZpZGVzIHN1cHBvcnQgdG8gaHVtYW4gcmlnaHRzIGRlZmVuZGVycyBhdCByaXNrLCBhbmQgd2hpY2ggaXMgYSBtZW1iZXIgb2YgdGhlIENvYWxpdGlvbiBhbmQgcGFydG5lciBpbiB0aGUgPGEgPkRlZmVuZGVycyBpbiBEZXZlbG9wbWVudDwvYT4gY2FtcGFpZ24uIEluIDIwMTcsIEkgaGVscGVkIHNldCB1cCDigJxJbiBEaWZlc2EgRGnigJ0sIGEgbmV0d29yayBpbiBJdGFseSwgbXkgaG9tZSBjb3VudHJ5LCB0aGF0IGJyaW5ncyB0b2dldGhlciBvdmVyIDQwIG9yZ2FuaXphdGlvbnMgYW5kIGFkdm9jYXRlcyBmb3IgdGhlIHByb3RlY3Rpb24gb2YgaHVtYW4gcmlnaHRzIGRlZmVuZGVycy4gVGhyb3VnaG91dCB0aGVzZSB5ZWFycywgSSBhbHNvIHdvcmtlZCBhcyBhIGZyZWVsYW5jZSBqb3VybmFsaXN0IGFuZCBsYXN0IHllYXIgSSBwdWJsaXNoZWQgdGhlIGJvb2sg4oCcTm9uIENoaWFtYXRlbWkgRXJvZeKAnSAoQWx0cmVjb25vbWlhKSwgYSBjb2xsZWN0aW9uIG9mIDE1IHN0b3JpZXMgb2YgZGVmZW5kZXJzIGFuZCBjb21tdW5pdGllcyB3aG8gc3RydWdnbGUgZm9yIGh1bWFuIHJpZ2h0cyBhcm91bmQgdGhlIHdvcmxkLjwvcD4gPHA+VGhlIGFjdGl2aXN0cyBhbmQgY29tbXVuaXR5IGxlYWRlcnMgSSBtZXQgZHVyaW5nIHRoZXNlIHllYXJzIGhhdmUgc2hhcmVkIHdpdGggbWUgdGhlaXIgZmVhcnMsIHRoZWlyIHdvcnJpZXMsIHRoZWlyIGhhcnJvd2luZyBhY2NvdW50cyBhYm91dCB0aGUgcmlza3MgdGhleSBmYWNlIGFzIHJldGFsaWF0aW9uIGZvciB0aGVpciB3b3JrLiBCdXQgbW9zdCBvZiBhbGwsIHRoZXkgaGF2ZSBzaGFyZWQgd2l0aCBtZSB0aGVpciBob3BlcywgdGhlaXIgZHJlYW1zLCB0aGVpciBpbmNyZWRpYmxlIHN0b3JpZXMgb2YgY291cmFnZSBhbmQgdmljdG9yaWVzIGRlc3BpdGUgdGhlIG9kZHMuIFRoZXkgaGF2ZSBiZWVuIOKAkyBhbmQgdGhleSBjb250aW51ZSB0byBiZSDigJMgYW4gZW5kbGVzcyBzb3VyY2Ugb2YgaW5zcGlyYXRpb24sIGFuZCB0aGV5IGhhdmUgY2hhbmdlZCBteSB3YXkgb2YgdGhpbmtpbmcsIGxpdmluZyBhbmQgbG9va2luZyBhdCB0aGUgd29ybGQuPC9wPiA8cD5XaGF0IGhhcyBhbHdheXMgc3RydWNrIG1lIHRoZSBtb3N0IGluIG1lZXRpbmcgZGVmZW5kZXJzIGZyb20gZGlmZmVyZW50IHBhcnRzIG9mIHRoZSB3b3JsZCBpcyB0aGF0IGV2ZW4gdGhvdWdoIHRoZSBjb250ZXh0cyB3aGVyZSB0aGV5IGxpdmUgbWlnaHQgYmUgY29tcGxldGVseSBkaWZmZXJlbnQsIHRoZWlyIHN0b3JpZXMgYWxzbyBoYXZlIG1hbnkgY29tbW9uYWxpdGllcy4gV2hlbiA8YSA+YW4gaW5kaWdlbm91cyB3b21hbiBkZWZlbmRlciBmcm9tIHRoZSBFY3VhZG9yaWFuIEFtYXpvbiBtZXQgYSBjb21tdW5pdHkgaW4gc291dGhlcm4gSXRhbHk8L2E+IHRoYXQgaXMgcHJvdGVzdGluZyBhZ2FpbnN0IGEgZ2FzIHBpcGVsaW5lLCBkdXJpbmcgYSB2aXNpdCBJIGhlbHBlZCBvcmdhbmlzZSwgdGhlcmUgd2FzIG5vIG5lZWQg4oCTIGZyb20gZWl0aGVyIHNpZGUg4oCTIHRvIGV4cGxhaW4gd2h5IHRoZXkgd2VyZSBkZWZlbmRpbmcgdGhlaXIgbGFuZCwgd2hhdCB0aGV5IHdlcmUgc3RhbmRpbmcgZm9yLCBvciB3aHkgdGhleSB3ZXJlIGJlaW5nIGNyaW1pbmFsaXplZCBhbmQgYWNjdXNlZCBvZiBiZWluZyDigJxhbnRpLWRldmVsb3BtZW504oCdLiBEaWZmZXJlbnQgY29udGV4dHMsIGJ1dCBzYW1lIGlzc3Vlcy4gQW5kIHRoZSBzYW1lIGRldGVybWluYXRpb24gdG8gZmlnaHQgYW5kIHRvIG1ha2UgdGhlaXIgdm9pY2VzIGhlYXJkLjwvcD4gPHA+VGhpcyBpcyB3aHkgdGhlIHdvcmsgdGhhdCB0aGUgQ29hbGl0aW9uIGRvZXMg4oCTIGJyaW5naW5nIHBlb3BsZSB0b2dldGhlciwgb2ZmZXJpbmcgYSBwbGF0Zm9ybSB0byBzaGFyZSBzdHJhdGVnaWVzIGFuZCByZXNvdXJjZXMsIGhlbHAgYnVpbGQgcmVsYXRpb25zaGlwcyBhbW9uZyBvdXIgbWVtYmVycywgcGFydG5lcnMgYW5kIGJleW9uZCDigJMgaXMgYWJzb2x1dGVseSBjcnVjaWFsLiBBIGxvbmUgdm9pY2UgbWF5IGdldCBsb3N0IGluIHRoaXMgbm9pc3kgd29ybGQgb3Igc2lsZW5jZWQgYnkgdGhvc2Ugd2hvIGRvbuKAmXQgYWNjZXB0IGFueSBjcml0aWNpc20gb3IgZGlzc2VudC4gQnV0IHRoZSBjb2xsZWN0aXZlIHZvaWNlcyBvZiBhbGwgdGhlIGNvbW11bml0aWVzLCBtb3ZlbWVudHMsIGRlZmVuZGVycyBhbmQgb3JnYW5pemF0aW9ucyB0aGF0IG1ha2UgdXAgdGhlIENvYWxpdGlvbiBhcmUgbG91ZCBhbmQgc3Ryb25nLCBhbmQgaW1wb3NzaWJsZSB0byBzaWxlbmNlLjwvcD4gPHA+PGk+VGhpcyBpcyB3aHkgSSBqb2luZWQgdGhlIENvYWxpdGlvbi4gV2Ugd291bGQgbG92ZSB0byBsZWFybiBmcm9tIG91ciBtZW1iZXJzIGFuZCBwYXJ0bmVycyB3aHkgeW91IGpvaW5lZCBhbmQgd29yayB3aXRoIHRoZSBDb2FsaXRpb24hIFBsZWFzZSBlbWFpbCB1cyBhdCBjb250YWN0c0ByaWdodHNpbmRldmVsb3BtZW50Lm9yZy48L2k+PC9wPiA8cD5UbyBjb250YWN0IExvcmVuYSBDb3R6YSDigJMgQ29tbXVuaWNhdGlvbnMgTGVhZCBmb3IgdGhlIENvYWxpdGlvbiBmb3IgSHVtYW4gUmlnaHRzIGluIERldmVsb3BtZW50IOKAkyB5b3UgY2FuIHdyaXRlIGhlciBhdDogbGNvdHphQHJpZ2h0c2luZGV2ZWxvcG1lbnQub3JnPC9wPiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8aDUgPlRhZ3M6PC9oNT4gPHVsID48bGk+Q29hbGl0aW9uIENvbnZlcnNhdGlvbnM8L2xpPjwvdWw+IDwvZGl2PiA8ZGl2ID4gPGg1ID5BYm91dCB0aGUgQXV0aG9yOjwvaDU+IDxkaXYgPkxvcmVuYSBDb3R6YTwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID5QcmV2aW91cyBQb3N0OiBDb2FsaXRpb24gQ29udmVyc2F0aW9uczogV2h5IEkgam9pbmVkIHRoZSBDb2FsaXRpb248L2Rpdj4gPGRpdiA+TmV4dCBQb3N0OiBDb21tdW5pdHkgdm9pY2VzOiBpbnRlcnZpZXcgd2l0aCBhIE5lcGFsZXNlIGluZGlnZW5vdXMgY29tbXVuaXR5IGFmZmVjdGVkIGJ5IGEgdHJhbnNtaXNzaW9uIGxpbmUgcHJvamVjdCA8L2Rpdj48L2Rpdj4gPGRpdiA+IG5vIGNvbW1lbnRzIDxkaXYgPiA8aDMgPkxlYXZlIGEgUmVwbHkgPHNtYWxsPjxhID5DYW5jZWwgcmVwbHk8L2E+PC9zbWFsbD48L2gzPjwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9ib2R5Pg==","title":"29","article":"31"}
{"url":"https%3A%2F%2Frightsindevelopment.org%2Fcommunique-from-the-development-and-investment-in-africa-workshop%2F","text":"","title":"30","article":"31"}
{"url":"https%3A%2F%2Frightsindevelopment.org%2Fnews%2Fafrican-civil-society-groups-call-for-socially-and-environmentally-sustainable-energy-development%2F","text":"","title":"30","article":"31"}
