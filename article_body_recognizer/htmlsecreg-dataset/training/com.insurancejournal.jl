{"url":"https://www.insurancejournal.com/jobs/637552-band-e-manager-database-delivery","text":"","title":"21","article":"23"}
{"url":"https://www.insurancejournal.com/jobs/638689-rewards-consultant","text":"","title":"21","article":"23"}
{"url":"https://www.insurancejournal.com/jobs/638964-northland-total-loss-claim-representative-trainee","text":"PGJvZHk+IDxkaXYgPiA8aGVhZGVyID4gPGRpdiA+IDxkaXYgPiAgPC9kaXY+IDxhID5Qb3N0IFlvdXIgSm9iITwvYT4gPC9kaXY+IDwvaGVhZGVyPiA8bWFpbiA+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxoNCA+IEdldCBKb2IgQWxlcnRzIDwvaDQ+IDxwID4gUmVjZWl2ZSB3ZWVrbHkgYWxlcnRzIGFib3V0IGluc3VyYW5jZSBpbmR1c3RyeSBqb2JzLiA8L3A+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8YSA+IEJhY2sgdG8gSm9iIEJvYXJkIDwvYT4gPGEgPiBNb3JlIEpvYnMgaW4gIkNsYWltcyIgPC9hPiA8L2Rpdj4gPGRpdiA+IDxoNCA+VGhlIFRyYXZlbGVycyBDb21wYW5pZXMsIEluYy48L2g0PiA8aDEgPk5vcnRobGFuZCBUb3RhbCBMb3NzIENsYWltIFJlcHJlc2VudGF0aXZlIFRyYWluZWU8L2gxPiA8cCA+IFBvc3RlZCBvbiBPY3QgMjUgU2FpbnQgUGF1bCwgTU4gNDcgdmlld3MgPC9wPiA8ZGl2ID4gPGRpdiA+IDxiPkNvbXBhbnkgU3VtbWFyeTwvYj4gVGFraW5nIGNhcmUgb2Ygb3VyIGN1c3RvbWVycywgb3VyIGNvbW11bml0aWVzIGFuZCBlYWNoIG90aGVyLiBUaGF04oCZcyB0aGUgVHJhdmVsZXJzIFByb21pc2UuIEJ5IGhvbm9yaW5nIHRoaXMgY29tbWl0bWVudCwgd2UgaGF2ZSBtYWludGFpbmVkIG91ciByZXB1dGF0aW9uIGFzIG9uZSBvZiB0aGUgYmVzdCBwcm9wZXJ0eSBjYXN1YWx0eSBpbnN1cmVycyBpbiB0aGUgaW5kdXN0cnkgZm9yIG92ZXIgMTYwIHllYXJzLiBKb2luIHVzIHRvIGRpc2NvdmVyIGEgY3VsdHVyZSB0aGF0IGlzIHJvb3RlZCBpbiBpbm5vdmF0aW9uIGFuZCB0aHJpdmVzIG9uIGNvbGxhYm9yYXRpb24uIEltYWdpbmUgbG92aW5nIHdoYXQgeW91IGRvIGFuZCB3aGVyZSB5b3UgZG8gaXQuIDxiPlRhcmdldCBPcGVuaW5nczwvYj4gMSA8Yj5Kb2IgRGVzY3JpcHRpb24gU3VtbWFyeTwvYj4gVGhpcyBpcyBhbiBlbnRyeSBsZXZlbCBwb3NpdGlvbiB0aGF0IHJlcXVpcmVzIHNhdGlzZmFjdG9yeSBjb21wbGV0aW9uIG9mIHJlcXVpcmVkIHRyYWluaW5nIHRvIGFkdmFuY2UgdG8gYSBDbGFpbSBSZXAgU3BlY2lhbHR5IFRvdGFsIExvc3MgcG9zaXRpb24uIFRoaXMgcG9zaXRpb24gaXMgaW50ZW5kZWQgdG8gZGV2ZWxvcCBza2lsbHMgZm9yIGludmVzdGlnYXRpbmcsIGV2YWx1YXRpbmcsIG5lZ290aWF0aW5nIGFuZCByZXNvbHZpbmcgY2xhaW1zIG9uIGxvc3NlcyBvZiBsZXNzZXIgdmFsdWUgYW5kIGNvbXBsZXhpdHkuIFByb3ZpZGVzIHF1YWxpdHkgY2xhaW0gaGFuZGxpbmcgdGhyb3VnaG91dCB0aGUgY2xhaW0gbGlmZSBjeWNsZSAoY3VzdG9tZXIgY29udGFjdHMsIGNvdmVyYWdlLCBpbnZlc3RpZ2F0aW9uLCBldmFsdWF0aW9uLCByZXNlcnZpbmcsIG5lZ290aWF0aW9uIGFuZCByZXNvbHV0aW9uKSBpbmNsdWRpbmcgbWFpbnRhaW5pbmcgZnVsbCBjb21wbGlhbmNlIHdpdGggaW50ZXJuYWwgYW5kIGV4dGVybmFsIHF1YWxpdHkgc3RhbmRhcmRzIGFuZCBzdGF0ZSBzcGVjaWZpYyByZWd1bGF0aW9ucy5UcmF2ZWxlcnMgb2ZmZXJzIGEgaHlicmlkIHdvcmsgbG9jYXRpb24gbW9kZWwgdGhhdCBpcyBkZXNpZ25lZCB0byBzdXBwb3J0IGZsZXhpYmlsaXR5LiBFbXBsb3llZXMgaW4gdGhpcyBwb3NpdGlvbiBhcmUgcGFydCBvZiBhIHRyYWluaW5nIG9yIGRldmVsb3BtZW50IHByb2dyYW0gdGhhdCBtYXkgcmVxdWlyZSB1cCB0byBhIHNpeC1tb250aCB3YWl0aW5nIHBlcmlvZCBiZWZvcmUgdGhleSBhcmUgZWxpZ2libGUgZm9yIHRoZSBoeWJyaWQgbW9kZWwuIER1cmluZyB0aGUgaW5pdGlhbCBzaXgtbW9udGggdHJhaW5pbmcgcHJvZ3JhbSwgZW1wbG95ZWVzIG1heSBiZSByZXF1aXJlZCB0byB3b3JrIHVwIHRvIGZpdmUgZGF5cyBpbiB0aGUgb2ZmaWNlLiA8Yj5QcmltYXJ5IEpvYiBEdXRpZXMgUmVzcG9uc2liaWxpdGllczwvYj4gPHVsPjxsaT5Db21wbGV0ZXMgcmVxdWlyZWQgdHJhaW5pbmcgcHJvZ3JhbSB3aGljaCBpbmNsdWRlcyB0aGUgb3ZlcmFsbCBpbnN0cnVjdGlvbiwgZXhwb3N1cmUsIGFuZCBwcmVwYXJhdGlvbiBmb3IgZW1wbG95ZWVzIHRvIHByb2dyZXNzIHRvIHRoZSBuZXh0IGxldmVsIHBvc2l0aW9uLiBJdCBpcyBhIG1peCBvZiBvbmxpbmUsIHZpcnR1YWwsIGNsYXNzcm9vbSwgYW5kIG9uLXRoZS1qb2IgdHJhaW5pbmcuIFRoZSB0cmFpbmluZyBtYXkgcmVxdWlyZSB0cmF2ZWwuPC9saT48bGk+VGhlIG9uIHRoZSBqb2IgdHJhaW5pbmcgaW5jbHVkZXMgcHJhY3RpY2UgYW5kIGV4ZWN1dGlvbiBvZiB0aGUgZm9sbG93aW5nIGNvcmUgYXNzaWdubWVudHM6PC9saT48bGk+RGVsaXZlciBjb25zaXN0ZW50IHNlcnZpY2UgcXVhbGl0eSB0aHJvdWdob3V0IHRoZSBjbGFpbSBsaWZlIGN5Y2xlLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIHByb21wdCBjb250YWN0LCBleHBsYWluaW5nIHRoZSBwcm9jZXNzLCBzZXR0aW5nIGV4cGVjdGF0aW9ucywgb24tZ29pbmcgY29tbXVuaWNhdGlvbiwgYW5kIGZvbGxvdy10aHJvdWdoIG1lZXRpbmcgY29tbWl0bWVudHMgdG8gYWNoaWV2ZSBvcHRpbWFsIG91dGNvbWUgb24gZXZlcnkgZmlsZS48L2xpPjxsaT5IYW5kbGUgYWxsIHR5cGVzIG9mIGF1dG9tb2JpbGVzLCBhbmQgYSB2YXJpZXR5IG9mIGhlYXZ5IGFuZCBtb2JpbGUgZXF1aXBtZW50IChpLmUuIGNyYW5lcywgdHJhY3RvciB0cmFpbGVycywgY29uc3RydWN0aW9uLCBhZ3JpY3VsdHVyYWwgZXF1aXBtZW50KSBhdCBldmVyeSBzZXZlcml0eSBsZXZlbCBleGNsdWRpbmcgcHJvcGVydHkgZGFtYWdlIGkuZS46IGd1YXJkIHJhaWxzLCBtYWlsIGJveGVzIGFuZCBhbnkgcHJvcGVydHkgd2l0aGluIHRoZSB2ZWhpY2xlLjwvbGk+PGxpPkNvbnRhY3QgYWxsIGFwcHJvcHJpYXRlIHBhcnRpZXMgdG8gZ2F0aGVyIHN1cHBvcnRpbmcgZG9jdW1lbnRzIG5lY2Vzc2FyeSB0byBuZWdvdGlhdGUgYW5kIHNldHRsZSB0aGUgY2xhaW0gd2l0aGluIHRoZWlyIGF1dGhvcml0eSBsZXZlbCAoaS5lLjsgb2J0YWluaW5nIHRoZSB0aXRsZSwga2V5cywgYW5kIG90aGVyIHJlcXVpcmVkIGRvY3VtZW50YXRpb24pLjwvbGk+PGxpPlJldmlldyBjb250cm9sbGluZyBjbGFpbSBoYW5kbGVyJ3MgY292ZXJhZ2UgZGV0ZXJtaW5hdGlvbiwgc3VtbWFyaXplIHRoZSByZXZpZXcgYW5kIHNlZWsgY2xhcmlmaWNhdGlvbiBhcyBuZWVkZWQuIFJlY29nbml6ZSBhZGRpdGlvbmFsIGNvdmVyYWdlIGlzc3VlcyAoaS5lLiBjb3ZlcmVkIGVxdWlwbWVudCwgZW5kb3JzZW1lbnRzKS48L2xpPjxsaT5Fc3RhYmxpc2ggYW5kL29yIHVwZGF0ZSBjbGFpbSBhbmQgZXhwZW5zZSByZXNlcnZlcy48L2xpPjxsaT5Db250cm9sIGRhbWFnZXMgdGhyb3VnaCB0aGUgcHJvcGVyIHVzZSBvZiBjb3N0IGNvbnRhaW5tZW50IHRvb2xzIChpLmUuIG1pdGlnYXRlIHN0b3JhZ2UsIGV4cGVuc2VzLCByZW50YWwpLjwvbGk+PGxpPlByb3Blcmx5IG1hbmFnZSBUb3RhbCBMb3NzIHNldHRsZW1lbnQgcHJvY2VzcyBhbmQgcmVudGFsIGV4cGVuc2VzIGJ5IHdvcmtpbmcgY2xvc2VseSB3aXRoIGFwcHJhaXNlcnMsIHJlbnRhbCBmYWNpbGl0aWVzLCBib2R5IHNob3BzLCBhbmQgc2FsdmFnZSB2ZW5kb3JzLiBNYW5hZ2UgZGVkdWN0aWJsZXMgYW5kIGxpbWl0cy48L2xpPjxsaT5SZXZpZXcgdGhlIHZhbHVhdGlvbiAoYXBwcmFpc2FsIGVzdGltYXRlKSBiYXNlZCBvbiB0aGUgdHlwZSBvZiB2ZWhpY2xlIHRvIGVmZmVjdGl2ZWx5IGFuZCBlZmZpY2llbnRseSByZXNvbHZlIHRoZSBjbGFpbS48L2xpPjxsaT5NZWV0IGFsbCBxdWFsaXR5IHN0YW5kYXJkcyBhbmQgZXhwZWN0YXRpb25zIHBlciBCZXN0IFByYWN0aWNlcy48L2xpPjxsaT5NYWludGFpbiBhbiBlZmZlY3RpdmUgZGlhcnkgc3lzdGVtLCBtYW5hZ2UgZmlsZSBpbnZlbnRvcnksIGFuZCBkb2N1bWVudCBjbGFpbSBmaWxlIGFjdGl2aXRpZXMgaW4gYWNjb3JkYW5jZSB3aXRoIGVzdGFibGlzaGVkIHByb2NlZHVyZXMuPC9saT48bGk+Q29tcGx5IHdpdGggc3RhdGUgc3BlY2lmaWMgcmVndWxhdGlvbnMuPC9saT48bGk+UHJvdmlkZSBxdWFsaXR5IGN1c3RvbWVyIHNlcnZpY2UgdG8gbWVldCB0aGUgbmVlZHMgb2YgdGhlIGluc3VyZWQsIGNsYWltYW50LCBhbGwgaW50ZXJuYWwgYW5kIGV4dGVybmFsIGN1c3RvbWVycy48L2xpPjxsaT5NYXkgcGFydGljaXBhdGUgd2l0aCBwcm9wZXJ0eSBFUlQgZHVyaW5nIGV4dHJlbWUgd2VhdGhlciBldmVudHMuPC9saT48bGk+TXVzdCBzZWN1cmUgYW5kIG1haW50YWluIGNvbXBhbnkgY3JlZGl0IGNhcmQgcmVxdWlyZWQuIFt2YXJpZXMgYnkgam9iXTwvbGk+PGxpPkluIG9yZGVyIHRvIHBlcmZvcm0gdGhlIGVzc2VudGlhbCBmdW5jdGlvbnMgb2YgdGhpcyBqb2IsIGFjcXVpc2l0aW9uIGFuZCBtYWludGVuYW5jZSBvZiBJbnN1cmFuY2UgTGljZW5zZShzKSBtYXkgYmUgcmVxdWlyZWQgdG8gY29tcGx5IHdpdGggc3RhdGUgYW5kIFRyYXZlbGVycyByZXF1aXJlbWVudHMuIEdlbmVyYWxseSwgbGljZW5zZShzKSBtdXN0IGJlIG9idGFpbmVkIHdpdGhpbiB0aHJlZSBtb250aHMgb2Ygc3RhcnRpbmcgdGhlIGpvYiBhbmQgb2J0YWluIG9uZ29pbmcgY29udGludWluZyBlZHVjYXRpb24gY3JlZGl0cyBhcyBtYW5kYXRlZC48L2xpPjxsaT5JbiBvcmRlciB0byBwcm9ncmVzcyB0byBDbGFpbSBSZXByZXNlbnRhdGl2ZSwgYSBUcmFpbmVlIG11c3QgZGVtb25zdHJhdGUgcHJvZmljaWVuY3kgaW4gdGhlIHNraWxscyBvdXRsaW5lZCBhYm92ZS4gUHJvZmljaWVuY3kgd2lsbCBiZSB2ZXJpZmllZCBieSBhcHByb3ByaWF0ZSBtYW5hZ2VtZW50LCBhY2NvcmRpbmcgdG8gZXN0YWJsaXNoZWQgc3RhbmRhcmRzLjwvbGk+PC91bD4gPGI+TWluaW11bSBRdWFsaWZpY2F0aW9uczwvYj4gPHVsPjxsaT5IaWdoIFNjaG9vbCBEaXBsb21hIG9yIEdFRCBhbmQgb25lIHllYXIgb2YgY3VzdG9tZXIgc2VydmljZSBleHBlcmllbmNlIE9SIEJhY2hlbG9y4oCZcyBEZWdyZWUgcmVxdWlyZWQuPC9saT48L3VsPiA8Yj5FZHVjYXRpb24sIFdvcmsgRXhwZXJpZW5jZSwgS25vd2xlZGdlPC9iPiA8dWw+PGxpPkJhY2hlbG9y4oCZcyBEZWdyZWUgcHJlZmVycmVkIG9yIGEgbWluaW11bSBvZiAyIHllYXJzIG9mIHdvcmsgT1IgY3VzdG9tZXIgc2VydmljZSByZWxhdGVkIGV4cGVyaWVuY2UgcHJlZmVycmVkLjwvbGk+PC91bD4gPGI+Sm9iIFNwZWNpZmljIFRlY2huaWNhbCBTa2lsbHMgQ29tcGV0ZW5jaWVzPC9iPiA8dWw+PGxpPkRlbW9uc3RyYXRlZCBvd25lcnNoaXAgYXR0aXR1ZGUgYW5kIGN1c3RvbWVyIGNlbnRyaWMgcmVzcG9uc2UgdG8gYWxsIGFzc2lnbmVkIHRhc2tzIC0gQmFzaWM8L2xpPjxsaT5WZXJiYWwgYW5kIHdyaXR0ZW4gY29tbXVuaWNhdGlvbiBza2lsbHMg4oCTSW50ZXJtZWRpYXRlPC9saT48bGk+QXR0ZW50aW9uIHRvIGRldGFpbCBlbnN1cmluZyBhY2N1cmFjeSAtIEJhc2ljPC9saT48bGk+QWJpbGl0eSB0byB3b3JrIGluIGEgaGlnaCB2b2x1bWUsIGZhc3QgcGFjZWQgZW52aXJvbm1lbnQgbWFuYWdpbmcgbXVsdGlwbGUgcHJpb3JpdGllcyAtIEJhc2ljPC9saT48bGk+QW5hbHl0aWNhbCBUaGlua2luZyDigJMgQmFzaWM8L2xpPjxsaT5KdWRnbWVudC8gRGVjaXNpb24gTWFraW5nIOKAkyBCYXNpYzwvbGk+PC91bD4gPGI+RW52aXJvbm1lbnRhbCAvIFdvcmsgU2NoZWR1bGVzIC8gT3RoZXI8L2I+IDx1bD48bGk+VHJhdmVsIFJlcXVpcmVtZW50czogVHJhdmVsIE9jY2FzaW9uYWxseTwvbGk+PC91bD4gPGI+RW1wbG95bWVudCBQcmFjdGljZXM8L2I+IFRyYXZlbGVycyBpcyBhbiBlcXVhbCBvcHBvcnR1bml0eSBlbXBsb3llci4gV2UgdmFsdWUgdGhlIHVuaXF1ZSBhYmlsaXRpZXMgYW5kIHRhbGVudHMgZWFjaCBpbmRpdmlkdWFsIGJyaW5ncyB0byBvdXIgb3JnYW5pemF0aW9uIGFuZCByZWNvZ25pemUgdGhhdCB3ZSBiZW5lZml0IGluIG51bWVyb3VzIHdheXMgZnJvbSBvdXIgZGlmZmVyZW5jZXMuIElmIHlvdSBhcmUgYSBjYW5kaWRhdGUgYW5kIGhhdmUgc3BlY2lmaWMgcXVlc3Rpb25zIHJlZ2FyZGluZyB0aGUgcGh5c2ljYWwgcmVxdWlyZW1lbnRzIG9mIHRoaXMgcm9sZSwgcGxlYXNlIHNlbmQgdXMgYW4gZW1haWwgc28gd2UgbWF5IGFzc2lzdCB5b3UuVHJhdmVsZXJzIHJlc2VydmVzIHRoZSByaWdodCB0byBmaWxsIHRoaXMgcG9zaXRpb24gYXQgYSBsZXZlbCBhYm92ZSBvciBiZWxvdyB0aGUgbGV2ZWwgaW5jbHVkZWQgaW4gdGhpcyBwb3N0aW5nLiBUbyBsZWFybiBtb3JlIGFib3V0IG91ciBjb21wcmVoZW5zaXZlIGJlbmVmaXQgcHJvZ3JhbXMgcGxlYXNlIHZpc2l0IGh0dHA6Ly9jYXJlZXJzLnRyYXZlbGVycy5jb20vbGlmZS1hdC10cmF2ZWxlcnMvYmVuZWZpdHMvLiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gTWFpbCB0byBhIGZyaWVuZCA8YSA+VHdlZXQgdGhpcyBqb2I8L2E+IDxhID5Qb3N0IG9uIExpbmtlZGluPC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxoNCA+IE1vcmUgRnJvbSBUaGUgVHJhdmVsZXJzIENvbXBhbmllcywgSW5jLiA8L2g0PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiA8aDQgPlNyLiBSaXNrIENvbnRyb2wgQ29uc3VsdGFudCwgRmllbGQ8L2g0PiA8cCA+IFBvc3RlZCBvbiBTZXAgMjQgV2VzdCBEZXMgTW9pbmVzLCBJQSAyNjUgVmlld3MgPC9wPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGg0ID5VbmRlcndyaXRpbmcgUHJvZmVzc2lvbmFsIERldmVsb3BtZW50IFByb2dyYW0gLSBGaW5hbmNpYWwgSW5zdGl0dXRpb25zPC9oND4gPHAgPiBQb3N0ZWQgb24gU2VwIDI0IE5ldyBZb3JrLCBOWSAzMTYgVmlld3MgPC9wPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGg0ID5DbGFpbSBDb3Vuc2VsLCBDb25kby9IT0EgRE88L2g0PiA8cCA+IFBvc3RlZCBvbiBTZXAgMjQgSGFydGZvcmQsIENUIDIwNSBWaWV3cyA8L3A+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8aDQgPlByaXZhdGUgTm9uLVByb2ZpdCBBY2NvdW50IEV4ZWN1dGl2ZSAoVW5kZXJ3cml0ZXIpPC9oND4gPHAgPiBQb3N0ZWQgb24gU2VwIDI0IE5ldyBZb3JrLCBOWSAyMTEgVmlld3MgPC9wPiA8L2Rpdj4gPC9kaXY+IDxkaXYgPiA8ZGl2ID4gPGg0ID5PdXRzaWRlIFByb3BlcnR5IENsYWltIFJlcHJlc2VudGF0aXZlIFRyYWluZWU8L2g0PiA8cCA+IFBvc3RlZCBvbiBTZXAgMjQgQ2hhcmxvdHRlLCBOQyAzMzQgVmlld3MgPC9wPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8aDQgPiBSZWxhdGVkIEpvYiBMaXN0aW5ncyA8L2g0PiA8ZGl2ID4gPGRpdiA+IDxkaXYgPiBBbGxzdGF0ZSA8aDQgPkNvbXBsZXggRmllbGQvVmlydHVhbCBQcm9wZXJ0eSBBZGp1c3RlciAtIFBvcnRsYW5kLCBPUiAoJDUsMDAwIHNpZ24gb24gYm9udXMhKTwvaDQ+IDxwID4gUG9zdGVkIG9uIFNlcCAyNCBQb3J0bGFuZCwgT1IgMjg3IFZpZXdzIDwvcD4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IEFsbHN0YXRlIDxoNCA+SW5zaWRlIFByb3BlcnR5IEFkanVzdGVyIC0gUmVtb3RlIEhvbWUgQmFzZWQgV29ya2VyIChOSik8L2g0PiA8cCA+IFBvc3RlZCBvbiBTZXAgMjQgQnJpZGdld2F0ZXIsIE5KIDQzMyBWaWV3cyA8L3A+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiBUaGUgVHJhdmVsZXJzIENvbXBhbmllcywgSW5jLiA8aDQgPkNsYWltIENvdW5zZWwsIENvbmRvL0hPQSBETzwvaDQ+IDxwID4gUG9zdGVkIG9uIFNlcCAyNCBIYXJ0Zm9yZCwgQ1QgMjA1IFZpZXdzIDwvcD4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IFRoZSBUcmF2ZWxlcnMgQ29tcGFuaWVzLCBJbmMuIDxoNCA+T3V0c2lkZSBQcm9wZXJ0eSBDbGFpbSBSZXByZXNlbnRhdGl2ZSBUcmFpbmVlPC9oND4gPHAgPiBQb3N0ZWQgb24gU2VwIDI0IENoYXJsb3R0ZSwgTkMgMzM0IFZpZXdzIDwvcD4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGRpdiA+IFRoZSBUcmF2ZWxlcnMgQ29tcGFuaWVzLCBJbmMuIDxoNCA+Q2xhaW0gT3BlcmF0aW9ucyBBbmFseXN0PC9oND4gPHAgPiBQb3N0ZWQgb24gU2VwIDI0IFJpY2hhcmRzb24sIFRYIDE3MCBWaWV3cyA8L3A+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2ID4gPGg0ID4gUmVjZW50IEpvYiBMaXN0aW5ncyA8L2g0PiA8ZGl2ID4gVGhlIFRyYXZlbGVycyBDb21wYW5pZXMsIEluYy4gQ2xhaW0gT3BlcmF0aW9ucyBTcGVjaWFsaXN0IFBvc3RlZCBvbiBOb3YgMjMgPGEgPiBUaGUgVHJhdmVsZXJzIENvbXBhbmllcywgSW5jLiBBdXRvIEJvZGlseSBJbmp1cnkgQ2xhaW0gUmVwcmVzZW50YXRpdmUgKERpYW1vbmQgQmFyLCBDQSkgUG9zdGVkIG9uIE5vdiAyMyA8L2E+IDxhID4gQWxsc3RhdGUgQXJpdHkgLSBEYXRhIEFuYWx5dGljcyBFbmdpbmVlciAtIEVudHJ5IExldmVsIFBvc3RlZCBvbiBOb3YgMjMgPC9hPiA8YSA+IFdpbGxpcyBUb3dlcnMgV2F0c29uIEFuYWx5c3QsIENsaWVudCBTZXJ2aWNlIERlbGl2ZXJ5IFBvc3RlZCBvbiBOb3YgMjMgPC9hPiA8YSA+IFdpbGxpcyBUb3dlcnMgV2F0c29uIExlYWQgQXNzb2NpYXRlIC0gQ2xpZW50IFNlcnZpY2UgYW5kIERlbGl2ZXJ5IFBvc3RlZCBvbiBOb3YgMjMgPC9hPiA8L2Rpdj4gPGg0ID4gUG9wdWxhciBKb2IgTGlzdGluZ3MgPC9oND4gPGRpdiA+IDxhID4gV29yayBBdCBIb21lIFZpbnRhZ2UgRXhwZXJ0cyBQZXJzb25hbCBMaW5lcyBDU1Igb3IgQWNjb3VudCBNYW5hZ2VyIC0gUkVNT1RFIDEwOTcwIFZpZXdzIDwvYT4gV29yayBBdCBIb21lIFZpbnRhZ2UgRXhwZXJ0cyBDb21tZXJjaWFsIExpbmVzIFVuZGVyd3JpdGVyIC0gSW5zdXJhbmNlIENvbXBhbnkgLSBSRU1PVEUgMTA1NTcgVmlld3MgPGEgPiBXb3JrIEF0IEhvbWUgVmludGFnZSBFeHBlcnRzIENvbW1lcmNpYWwgTGluZXMgQ1NSIG9yIEFjY291bnQgTWFuYWdlciAtIFJFTU9URSA4NDkyIFZpZXdzIDwvYT4gPGEgPiBXb3JrIEF0IEhvbWUgVmludGFnZSBFeHBlcnRzIENvbW1lcmNpYWwgTGluZXMgUmF0ZXIgLyBSYXRpbmcgVGVjaG5pY2lhbiAtIEluc3VyYW5jZSBDb21wYW55IC0gUkVNT1RFIDgyNjEgVmlld3MgPC9hPiA8YSA+IFdvcmsgQXQgSG9tZSBWaW50YWdlIEV4cGVydHMgSW5zdXJhbmNlIEFnZW5jeSBCb29ra2VlcGVyIC0gUkVNT1RFIDgwMDEgVmlld3MgPC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPGRpdiA+IDxkaXYgPiA8ZGl2ID4gPGg0ID5Ib3cgVG8gQXBwbHk8L2g0PiA8L2Rpdj4gPGRpdiA+IDxhID5BcHBseSBoZXJlPC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L21haW4+PC9kaXY+PC9ib2R5Pg==","title":"21","article":"23"}
{"url":"https://www.insurancejournal.com/agents-of-the-year/","text":"","title":"48","article":"51"}
{"url":"https://www.insurancejournal.com/news/southeast/2021/11/18/642812.htm","text":"","title":"54","article":"71"}
