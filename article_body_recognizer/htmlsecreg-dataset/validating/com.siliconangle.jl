{"url":"https://siliconangle.com/2021/11/01/what-could-disrupt-amazon/","text":"<body > <header >  </header> <div > <div > <div > <div > <div > <main > <div > <p > UPDATED 09:24 EST / NOVEMBER 01 2021 </p> </div> <div > <div > CLOUD </div> </div> <div > <h3 > What could disrupt Amazon?</h3> <div > <div> <p > BREAKING ANALYSIS by <a > Dave Vellante </a> </p> </div> </div> </div> <div > <div > <p>What could disrupt Amazon? Weigh in and take the survey.</p> <p>Five publicly traded, U.S.-based companies have market valuations over or just near $1 trillion. As of Oct. 29, Apple Inc. and Microsoft Corp. top the list, each at $2.5 trillion, followed by Alphabet Inc. at $2 trillion, Amazon.com Inc. at $1.7 trillion and Facebook Inc. (now Meta Platforms Inc.) at just under $1 trillion – off from its high of $1.1 trillion prior to its recent troubles.</p> <p>These companies have reached extraordinary levels of success and power. What, if anything could disrupt their market dominance?</p> <p>In his book “<a >Seeing Digital</a>,” author David Moschella made three key points that are relevant:</p> <ol> <li>In the technology industry, disruptions are the norm. The waves of mainframes, minicomputers, personal computers, mobile and the internet all saw new companies emerge and power structures that dwarfed previous eras of innovation. Is that dynamic changing?</li> <li>Every industry has a disruption scenario.</li> <li>Silicon Valley – broadly defined to include Seattle, or at least Amazon – has a dual disruption agenda. The first is horizontally targeting the technology industry and the second is being digital disruptors in virtually any industry. How relevant is that to the future power structure of the technology business?</li> </ol> <p>In this <a >Breaking Analysis</a>, we welcome in author, speaker, researcher, thought leader and senior Information Technology and Innovation Foundation Fellow <a >David Moschella</a> to assess what could possibly disrupt today’s trillionaire companies. We’ll start with Amazon.</p> <h3>Every decade brings new tech leaders. Has this changed?</h3> <p>David Moschella approached us to collaborate on this project. He circulated a simple survey that we’re <a >hosting on the web</a>.</p> <p>We asked Moschella where the idea came from. <a >He responds in this clip</a>, summarized below:</p> <blockquote><p>The whole history of our business has been, every decade or so you have a new set of leaders. IBM, Digital, Microsoft, the internet companies, et cetera. But when I started looking at it, in some ways it seems to have actually stopped. Microsoft is now 40 years old. Amazon is getting towards 30 years old. Google’s been a dominant company for 20 years and Apple of course and Facebook more recently. So, whatever the reason, the longevity of these firms has been longer than we’ve seen in the past. So I sort of say, well, is there anything that’s going to change that? So part of it, and we’ll get into it, is what could happen to disrupt those big five?</p> <p>But then the second question was, well, maybe the disruptive energies of the tech business have moved elsewhere. They’ve moved to cryptocurrencies or they’ve moved to Tesla. And so you start to broaden your sense of disruption. And when you talked about that dual disruption agenda, that whole ability of tech to disrupt other sectors, banking, healthcare, insurance, automobiles, whatever, is sort of a second wave of disruption. So we started thinking about what sort of scenarios are we really looking at for the 2020s? What might shake up the big five as we know them? And how might disruption spread to more industry specific parts of the world? And that was really the genesis of the project and really just my own thinking of, all right, what scenarios can I come up with?</p> <p>And then reaching out to companies like yourselves to figure out, okay, how can we get more input on that? How can we crowdsource it? How can we get a sense of, of what the community thinks of all this?</p></blockquote> <h3>Seven scenarios in the survey</h3> <p>Let’s go through the possibilities and explain the reasoning behind their inclusion.</p> <p>First one: a government mandated separation, divestment and/or limits on Amazon’s cloud computing, retail, media, credit card and/or in-house product groups.</p> <p>We asked Moschella why he started here. He <a >responds in this clip</a> and below:</p> <blockquote><p>I think the government interest in doing something to hit back at big tech is pretty clear. And probably one of the few things that has bi-partisan support in Washington these days. And also, government intervention has always been an enormous part of the tech industry’s history. The antitrust efforts against IBM and ATT in particular, and more recently Microsoft, a smaller one, but it’s always been there. There’s a vibe to do it now. And when you look at all the big ones, but particularly Amazon, you can see that potential divestments and breakups are sitting there right in front of you. The separation of retail and AWS, perhaps breaking out credit card or music or media businesses. These sorts of things are all, on the surface at least, relatively clean things to do. And I think when you look at the formation of an Alphabet or a Meta, those companies themselves are starting to see their own businesses as consisting of multiple firms.</p></blockquote> <h3>A quick aside to scan the cloud landscape</h3> <p>Well, just to emphasize the importance of Amazon Web Services Inc. and the cloud: Amazon announced earnings Thursday night after the close. AWS is now a $64 billion revenue run rate company growing at 39% year over year. That’s an accelerated rate from Q3 2020, when the company grew 29% – which is astounding. Moreover, AWS accounted for 100%+ of Amazon’s operating profit last quarter. So the AWS cloud is obviously crucial as a funding vehicle and ecosystem accelerant for Amazon.</p> <p>The data points below allow us to visualize the dominance of the AWS and Azure clouds in context:</p> <p>The chart above is one from <a >Enterprise Technology Research</a> surveys that isolates the four hyperscale cloud providers and adds in Oracle Corp. and IBM Corp., which both own a public cloud. We don’t have Apple or Facebook here, but we can talk about that in a moment.</p> <p>The chart shows Net Score or spending momentum on the vertical axis and Market Share or pervasiveness in the survey on the horizontal axis. It’s really mention share not dollar market share. But it’s an indicator. The red line is an indicator of elevated spending momentum. Anything above that line is impressive.</p> <p>And you can see that Microsoft Azure and AWS are up and to the right and they both have spend momentum. Google well behind those two, and Alibaba, which has a small sample in the ETR survey, is not as prominent, even though its infrastructure-as-a-service cloud business is larger than Google’s.</p> <p>The point is these four hyperscalers – and they are the only four in our view – have a presence that allows them to build new businesses, disrupt ecosystems and enact that dual disruption agenda should they choose to do so. Oracle and IBM are not in a position to do that – it’s not part of their agenda and they don’t have the scale anyway.</p> <p>Moschella made the following <a >additional comments</a>:</p> <blockquote><p>I think that is the fundamental point. It’s very easy to see AWS on its own as a powerhouse. But I think if you figure how much freedom AWS money has given the retail business, or the credit card business, or the music businesses to launch them and to essentially make no money for very long periods of time. You see that if you’re a Walmart trying to compete with Amazon as a retailer, well, that money from AWS is an awful big problem. And so when they look at separation, that’s the sort of stuff people talk about.</p></blockquote> <p>Moschella made the following important point about <a >the difference between Amazon and Microsoft</a>:</p> <blockquote><p>People often say what’s the biggest difference between Microsoft and Amazon from a cloud point of view? And the answer is pretty clear that Microsoft goes out of its way to assure its customers that it really doesn’t have any interest in competing directly with them. So, you don’t see Microsoft going into the retail business or the banking business or the healthcare business, all that seriously. In contrast, that’s really what Amazon is all about; is taking its capabilities to, essentially any industry it likes. And therefore, as great a service as AWS provides, it’s often being provided to people whom Amazon is actually competing with at least to some degree or another. And that’s a huge part of Microsoft’s sales pitch. And it’s certainly a potential issue down the road. It’s very hard in the end to be an essential supplier and a direct competitor at the same time. But so far they’ve managed to do that.</p></blockquote> <h3>What AWS would look like as a separate entity</h3> <p>We put together this little thought exercise below to see what AWS’ financial profile might look like as a separate company:</p> <p>It’s a chart that looks at a number of enterprise tech companies and lays out their revenue run rate, growth rates, gross margin (we could have done operating margin… that might have been more relevant), market capitalization and revenue multiple.</p> <p>Given the size of AWS at a $64 billion revenue run rate and an accelerating growth trajectory – it’s remarkable – based on industry norms and today’s valuations, it’s not inconceivable that AWS could be in the trillionaire club. It’s an incredibly profitable company, so based on that discussion we had earlier, Amazon’s dual disruption agenda is funded by and powered by AWS.</p> <p>Moschella made the following <a >additional points in this clip</a>, summarized below:</p> <blockquote><p>Just keep in mind, nothing that you or I are saying are predictions or saying that anything is going to happen. They are possible scenarios of what might happen that seem to make some plausible sense so that when Amazon’s making the profits that it’s making at AWS, naturally that’s going to attract other companies cause there’s margin to be had there. And similarly, look at Microsoft. For all those years, the profits that it made in Windows or in Office software allowed it to do all kinds of other things. And essentially that’s what Amazon is doing today. But if a Google or a Microsoft could cut into those profits through some sort of aggressive pricing, and perhaps we’ll talk about that, it would have a lot of impact on Amazon as a whole.</p></blockquote> <h3>Scenario No. 2: Bypass Amazon</h3> <p>The next scenario is major companies increasingly choosing to do their own cloud computing and/or sell their products directly for competitive, cost, security or other reasons; we saw this, and look at Walmart. There’s no way they’re going to run their business on AWS. Walmart is building out it’s own cloud and maybe it doesn’t have the size of a hyperscaler, but it’s very large and it has the technical chops to build solid infrastructure. And it can most likely do it a lot cheaper than renting cloud space.</p> <p>We asked Moschella to <a >comment on this scenario</a>:</p> <blockquote><p>The broader thinking here is essentially one of, that computing paradigms have been proven to go in cycles. A long time ago, people shared computers and called them timeshare and then people ran their own. And now they’re sharing them again through the cloud. And who knows, it’s possible that the cycle could shift again through some innovation and a lot of companies today look at the bills they’re getting for cloud or for various SaaS services and some are pretty high and a lot of them will look at it and say, hey, maybe we actually can do some of this stuff cheaper. So the scenario is that, essentially that the cycle shifts once again, and it makes more sense to do stuff in house. Again, that’s not a prediction, but certainly something that’s happened before. And could plausibly happen again.</p></blockquote> <h3>Scenario No. 3: Environmental disruption</h3> <p>Environmental policies raise costs, change packaging, delivery, recycling rules and/or consumer preferences.</p> <p>Here are <a >Moschella’s comments on this topic:</a></p> <blockquote><p>We’re used to thinking of technology as the great disruptor and clearly that’s still important, but there are now other forces out there. China, which we’ll talk about, the environment, various cultural forces and here with the environment, you see all kinds of things that could change. If you look at Amazon and its model of very high levels of packaging, lots of delivery vehicles, and all the things it is doing, are those necessarily the best environmentally? And will there potentially be various taxes, carbon metrics, or things that might work against that model and tend to favor more traditional stores where people go to pick them up?</p> <p>That seems to be a plausible scenario. And I think everybody here knows that desire to do something in the in the climate, environmental spaces is pretty strong. And, if you look at, and I’ll just throw this aside, the recycling industry itself has arguably been quite a failure in that, much of whether it’s so-called recycled is basically put in tankers and shipped to the Third World, which no longer wants it. And so the backlog of packaging and concerns about packaging and what to do with all that, those issues are rising and will be real. And I don’t know whether Amazon has a good answer to that. They’re obviously very aware of it. They’re working very hard to do everything they can in that space. But their fundamental model of essentially packaging every good in its own little box or envelope or whatever, is arguably not the greenest way of doing business.</p></blockquote> <h3>Scenario No. 4: Geopolitical tensions disrupt Amazon’s supply chains</h3> <p>The next scenario we discussed was price/trade wars with U.S. and/or China cloud and e-commerce giants; protectionism favors national players. So here we are talking about, for example Google or Microsoft or Alibaba bombing prices; or trade policy making it difficult for Amazon to do business in certain parts of the world.</p> <p>Moschella adds some color to this scenario <a >in this clip</a> and the narrative below:</p> <blockquote><p>Yes, all those things. And I would just start with China itself. You could argue that COVID has been the biggest disruptor of the last couple of years, but if you look out at the next five or eight and you had to look at all these things, you’d probably say China. The size of the Chinese market, the power of its vendors, players like Alibaba clearly can rival Amazon in many different ways. It’s no secret that it’d be hard for Amazon to be a big success in China, but you can see it in harder ways that you imagine across Asia or other markets where Alibaba is strong and you’re in today’s environment where there’s scarce goods and maybe certain products, well, maybe Chinese made products go to Alibaba first. Then if you want to buy that product, well, Amazon doesn’t have it.</p> <p>But Alibaba has it. Those sorts of scenarios, if you get into a sharp trade war with China, or even if the current tensions continue, it’s quite easy to see how that could play some havoc with Amazon’s supply chains. In many ways, the whole Amazon retail model is based on a steady flow of goods manufactured in China. And that clearly is not as stable as it was.</p></blockquote> <h3>Scenario No. 5: Technology disruptions</h3> <p>The next one is a technology-related scenario that would potentially disrupt AWS and by default hit Amazon.</p> <p>Major computing innovations such as quantum, edge, or machine-to-machine obsolete today’s cloud architectures. OK, so here the thinking is that just as AWS changed the game in IT, some future innovations or new business model that we haven’t conceived yet could disrupt the cloud computing model.</p> <p><a >Moschella comments on this scenario</a>:</p> <blockquote><p>Again, go back to where we started, that new technologies have always been the main disruptors and here we’re looking at some potentially very powerful new technologies. Your guess is as good as mine about what’s going to happen with quantum but it’s clearly a very different way of computing, quite possibly led by other vendors, possibly even led by China, which would be a huge issue. You look at the cloud, well cloud’s not very good at edge stuff or machine-to-machine stuff, or near-field things, like cars in a highway talking to each other; again, Amazon’s totally aware of these things and they are working on it, but they have a huge investment in other ways of doing things. And historically that inertia, that need to protect existing bases of activity and practices, has made it difficult for a lot of companies to adjust to new things. And so that could happen again. And that’s certainly plausible, but in all these cases so far Amazon has been aware of it and is trying to address it, but you can still see the scenario playing out and in a truly disruptive technology, it’s not always possible for the incumbent to effectively cope with it.</p></blockquote> <h3>Scenario No. 6: Cut out the middleman and ditch the centralized warehouse model</h3> <p>Software replaces centralized warehouses as delivery services are directly connected to suppliers and factories. Software and automation changes the nature of the retail business and the supply chain.</p> <p>The next scenario speaks to some of the work Moschella has done on automation.<a > He commented as follows</a>:</p> <blockquote><p>In a world of ubiquitous delivery services and product standardization metrics and products being built and shipped from all over the world, the concept of running them all through a centralized warehouse, at least at a minimum, seems like something that might be obsoleted and replaced. And, you imagine if Google built a significant taxonomy of core products that could be traced directly to where they are, either manufactured, supplied, or brought into the country from whatever company that tries to sell them. And the delivery service connected directly to that. And so that model has always been out there. I think at various times people have looked at it. It hasn’t happen so far.</p> <p>I think Amazon itself is looking at this, particularly as it gets more into food, that the idea of shipping all fresh food to any sort of centralized warehouse is a pretty bad idea. And so that model of software essentially replacing giant automated warehouses is out there and seems to me likely, and I would just say that, Alibaba for the record, doesn’t really use that warehouse model. It uses a network of suppliers and does it that way. And there do seem to be some efficiencies that would likely come with that.</p></blockquote> <h3><b>Scenario No. 7: Cultural shifts, brain drains and self-inflicted wounds</b></h3> <p>The penultimate scenario is the proverbial shoot yourself in the foot, lose the recipe, a loss of the “Day Zero” and “working backwards” culture or whatever cliche you prefer. Basically Amazon unwittingly disrupts Amazon.</p> <p>Complacency, arrogance, blindness, abuse of power, loss of trust, consumer and employee backlash and boycotts. Is this why Andy Jassy was put in charge? Someone who has lived and breathed the Amazon culture so this wouldn’t happen. But we’ve seen time and time again in tech, blind spots have killed companies. There are many examples. IBM’s fateful decision to outsource the operating system and microprocessor to Microsoft and Intel Corp. respectively. Lotus refusing to support Windows. Novell trying to move into office software buying Wordperfect. Netscape ignoring the threat of Microsoft bundling Internet Explorer into its operating system. And so forth.</p> <p>Here’s what <a >Moschella added to the scenario</a>:</p> <blockquote><p>You listed many of the most famous, but perhaps my favorite of all was Ken Olsen, the founder of Digital Equipment Corporation. One of the great tech visionaries of his time, who stated over and over again, why would anybody want a home computer?</p> <p>And so there’s the blindness. There is IBM and ATT, both came to the view that they were invincible and nothing could ever crack their control of their customer base. So we’ve seen all that. I think more recently, I think some of these things can actually go from the bottom up, what’s happening to Facebook today. Well, they’re being hurt by former employees speaking out. This never really happened too much in the IBM and ATT days, but people calling into question Amazon’s work, labor practices and such things is certainly a possible scenario. And the whole sort of, in the end, people talk about a cultural backlash against technology. I’m not sure I believe it’ll happen, but it certainly is possible that people will start to rebel against these firms. You see Facebook is fairly well along there.</p> <p>Amazon is still popular, but you know, in the end, as you, I think you said that the core thing that companies routinely fail on is they lose their customer focus and they get caught up in other things, their financial numbers, their power inside, the position of their company. But they lose track of staying close to the customer need. And Amazon has done a terrific job of staying close to the customers over the years. So if anyone is maybe less vulnerable to that, they would be well along that line. But it can happen to anyone. And new management is often one of the real tests.</p> <p>And there’s many examples of that through history, when a new executive comes in, will they have that same focus, that same “thing?” Particularly as the first generations employees get wealthy and retire and a new set of people come in. You look at Microsoft, the new people who came in, well, they’re not going to be multi-millionaires. They may have missed the great runs. They’re there to work. And the culture of companies changes when you get to that state. Amazon is not there yet, but you can envision that coming soon enough. So, cultural issues have always been a factor and it’s hard to imagine they won’t be some sort of factor going forward.</p></blockquote> <h3>Scenario No. 8: What did we miss?</h3> <p>The last scenario is open-ended. Is there another scenario we haven’t put forth that you feel could be disruptive to Amazon?</p> <p>What happens from here is we’ve <a >put out the link to the survey</a> and will socialize to try and get as many responses as possible. The results will be published on SiliconANGLE.com and if this goes well we’ll run scenarios for the other big internet giants.</p> <p>Thanks to David Moschella for collaborating with us. We’re excited to see the results and then run the other giants through this model – stay tuned.</p> <h3>Keep in touch</h3> <p>Remember we publish each week on this site and on <a >SiliconANGLE.com</a>. These episodes are all available as <a >podcasts wherever you listen</a>. Email <a >david.vellante@siliconangle.com</a>, DM <a >@dvellante on Twitter</a> and comment on <a >our LinkedIn posts</a>.</p> <p>Note: <a >ETR</a> is a separate company from Wikibon and SiliconANGLE<i>.</i> If you would like to cite or republish any of the company’s data, or inquire about its services, please contact ETR at legal@etr.ai.</p> <p>Here’s the full video analysis:</p> <p>All statements made regarding companies or securities are strictly beliefs, points of view and opinions held by SiliconANGLE media, Enterprise Technology Research, other guests on theCUBE and guest writers. Such statements are not recommendations by these individuals to buy, sell or hold any security. The content presented does not constitute investment advice and should not be used as the basis for any investment decision. You and only you are responsible for your investment decisions.</p> <h5> Image : <a >bilalulker</a></h5> <div > <h1>A message from John Furrier, co-founder of SiliconANGLE:</h1> <h3>Show your support for our mission by joining our Cube Club and Cube Event Community of experts. Join the community that includes Amazon Web Services and Amazon.com CEO Andy Jassy, Dell Technologies founder and CEO Michael Dell, Intel CEO Pat Gelsinger and many more luminaries and experts.</h3> <div> <h3>Join Our Community </h3> <p ><a >Click here to join the free and open Startup Showcase event.</a></p> <p>We really want to hear from you, and we’re looking forward to seeing you at the event and in theCUBE Club.</p> <p><a >Click here to join the free and open Startup Showcase event.</a></p> </div> </div></div> </div> <div ><div ><div ><div ><h5 >LATEST STORIES</h5></div></div><div ><div ><ul ><li ><a ><p >US states to investigate harm Instagram does to young people</p></a></li><li ><a ><p >VMware brings its Cross-Cloud services for multicloud app development to AWS</p></a></li><li ><a ><p >Social Security numbers stolen in California Pizza Kitchen data breach</p></a></li><li ><a ><p >With strong earnings, Palo Alto Networks offers bullish guidance for the rest of the year</p></a></li><li ><a ><p >Enterprise machine learning development platform Comet raises $50M</p></a></li><li ><a ><p >Workday buys contractor management platform VNDLY, delivers strong earnings but stock falls</p></a></li></ul></div></div></div><div ><div ><div ><h5 >LATEST STORIES</h5></div></div><div ><div ><ul ><li ><div ><div ><a ><p >US states to investigate harm Instagram does to young people</p></a><p >POLICY - BY JAMES FARRELL . 5 HOURS AGO</p></div></div></li><li ><div ><div ><a ><p >VMware brings its Cross-Cloud services for multicloud app development to AWS</p></a><p >CLOUD - BY MIKE WHEATLEY . 6 HOURS AGO</p></div></div></li><li ><div ><div ><a ><p >Social Security numbers stolen in California Pizza Kitchen data breach</p></a><p >SECURITY - BY DUNCAN RILEY . 7 HOURS AGO</p></div></div></li><li ><div ><div ><a ><p >With strong earnings, Palo Alto Networks offers bullish guidance for the rest of the year</p></a><p >SECURITY - BY MIKE WHEATLEY . 7 HOURS AGO</p></div></div></li><li ><div ><div ><a ><p >Enterprise machine learning development platform Comet raises $50M</p></a><p >AI - BY DUNCAN RILEY . 7 HOURS AGO</p></div></div></li><li ><div ><div ><a ><p >Workday buys contractor management platform VNDLY, delivers strong earnings but stock falls</p></a><p ><span>CLOUD - BY MIKE WHEATLEY . 8 HOURS AGO</span></p></div></div></li></ul></div></div></div></div></main> </div> </aside> </div> </div> </aside></div> </div> </div> <div ><h3>Cookies</h3>We employ the use of cookies. Find out more.</div> </div></div></body>","title":"14","article":"20"}
